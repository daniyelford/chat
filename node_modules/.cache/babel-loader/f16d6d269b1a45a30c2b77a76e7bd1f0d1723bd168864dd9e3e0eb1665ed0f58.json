{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"badge\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"dropdown\"\n};\nimport { ref, onMounted, watch } from 'vue';\nimport NotificationList from '@/components/tooles/nav/NotificationList.vue';\nimport { BASE_URL } from '@/config';\nimport { useNotificationStore } from '@/stores/notification';\nimport { usePollingWithCompare } from '@/composables/usePollingWithCompare';\nimport { useInfiniteScroll } from '@/composables/useInfiniteScroll';\nexport default {\n  __name: 'NotificationMenu',\n  setup(__props) {\n    const logo = BASE_URL + '/assets/images/logo.png';\n    const song = BASE_URL + '/assets/song/notif.mp3';\n    const showList = ref(false);\n    const notifSound = ref(null);\n    const store = useNotificationStore();\n\n    // باز و بسته کردن لیست نوتیفیکیشن\n    function toggleList() {\n      showList.value = !showList.value;\n    }\n\n    // پخش صدا\n    function playSound() {\n      notifSound.value?.play().catch(() => {});\n    }\n\n    // نمایش نوتیفیکیشن سیستم\n    function showNativeNotification(title, body) {\n      if (Notification.permission === 'granted') {\n        const notification = new Notification(title, {\n          body,\n          icon: logo\n        });\n        notification.onclick = () => {\n          window.focus();\n          notification.close();\n        };\n      }\n    }\n\n    // درخواست مجوز نوتیف\n    onMounted(() => {\n      if (Notification.permission === 'default') {\n        Notification.requestPermission();\n      }\n    });\n\n    // پولوینگ برای نوتیف‌های جدید\n    usePollingWithCompare(store.fetchNotifications, {\n      intervalMs: 10000,\n      runOnStart: true,\n      isDifferent: (oldNotifs, newNotifs) => {\n        const oldIds = new Set((oldNotifs || []).map(n => n.id));\n        const newIds = new Set((newNotifs || []).map(n => n.id));\n        return oldNotifs?.length !== newNotifs?.length || [...newIds].some(id => !oldIds.has(id));\n      },\n      onChange: newData => {\n        const newOnes = newData.filter(n => !store.notifications.find(o => o.id === n.id));\n        newOnes.forEach(n => {\n          playSound();\n          showNativeNotification(n.title, n.body);\n          store.pushNotification(n);\n        });\n      }\n    });\n\n    // Infinite Scroll\n    const loadMoreTrigger = ref(null);\n    const {\n      items,\n      setupObserver\n    } = useInfiniteScroll(async ({\n      limit,\n      offset\n    }) => {\n      return await store.fetchNotifications({\n        limit,\n        offset\n      });\n    }, {\n      limit: 10,\n      total: ref(store.notifications.length),\n      immediate: false\n    });\n    watch(loadMoreTrigger, el => {\n      if (el) setupObserver();\n    });\n    function onLoadMoreTriggerReady(el) {\n      loadMoreTrigger.value = el;\n    }\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", {\n        class: \"icon-wrapper\",\n        onClick: toggleList\n      }, [_cache[0] || (_cache[0] = _createTextVNode(\" 🔔 \")), _unref(store).unreadCount > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, _toDisplayString(_unref(store).unreadCount), 1)) : _createCommentVNode(\"\", true)]), showList.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(NotificationList, {\n        notifications: _unref(items),\n        onUpdate: _unref(store).markAsRead,\n        onLoadMoreTriggerReady: onLoadMoreTriggerReady\n      }, null, 8, [\"notifications\", \"onUpdate\"])])) : _createCommentVNode(\"\", true), _createElementVNode(\"audio\", {\n        ref_key: \"notifSound\",\n        ref: notifSound,\n        src: song,\n        preload: \"auto\"\n      }, null, 512)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","NotificationList","BASE_URL","useNotificationStore","usePollingWithCompare","useInfiniteScroll","logo","song","showList","notifSound","store","toggleList","value","playSound","play","catch","showNativeNotification","title","body","Notification","permission","notification","icon","onclick","window","focus","close","requestPermission","fetchNotifications","intervalMs","runOnStart","isDifferent","oldNotifs","newNotifs","oldIds","Set","map","n","id","newIds","length","some","has","onChange","newData","newOnes","filter","notifications","find","o","forEach","pushNotification","loadMoreTrigger","items","setupObserver","limit","offset","total","immediate","el","onLoadMoreTriggerReady"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/tooles/nav/NotificationMenu.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted, watch } from 'vue'\r\nimport NotificationList from '@/components/tooles/nav/NotificationList.vue'\r\nimport { BASE_URL } from '@/config'\r\nimport { useNotificationStore } from '@/stores/notification'\r\nimport { usePollingWithCompare } from '@/composables/usePollingWithCompare'\r\nimport { useInfiniteScroll } from '@/composables/useInfiniteScroll'\r\n\r\nconst logo = BASE_URL + '/assets/images/logo.png'\r\nconst song = BASE_URL + '/assets/song/notif.mp3'\r\n\r\nconst showList = ref(false)\r\nconst notifSound = ref(null)\r\nconst store = useNotificationStore()\r\n\r\n// باز و بسته کردن لیست نوتیفیکیشن\r\nfunction toggleList() {\r\n  showList.value = !showList.value\r\n}\r\n\r\n// پخش صدا\r\nfunction playSound() {\r\n  notifSound.value?.play().catch(() => {})\r\n}\r\n\r\n// نمایش نوتیفیکیشن سیستم\r\nfunction showNativeNotification(title, body) {\r\n  if (Notification.permission === 'granted') {\r\n    const notification = new Notification(title, {\r\n      body,\r\n      icon: logo,\r\n    })\r\n    notification.onclick = () => {\r\n      window.focus()\r\n      notification.close()\r\n    }\r\n  }\r\n}\r\n\r\n// درخواست مجوز نوتیف\r\nonMounted(() => {\r\n  if (Notification.permission === 'default') {\r\n    Notification.requestPermission()\r\n  }\r\n})\r\n\r\n// پولوینگ برای نوتیف‌های جدید\r\nusePollingWithCompare(store.fetchNotifications, {\r\n  intervalMs: 10000,\r\n  runOnStart: true,\r\n  isDifferent: (oldNotifs, newNotifs) => {\r\n    const oldIds = new Set((oldNotifs || []).map(n => n.id))\r\n    const newIds = new Set((newNotifs || []).map(n => n.id))\r\n    return oldNotifs?.length !== newNotifs?.length || [...newIds].some(id => !oldIds.has(id))\r\n  },\r\n  onChange: (newData) => {\r\n    const newOnes = newData.filter(n => !store.notifications.find(o => o.id === n.id))\r\n    newOnes.forEach(n => {\r\n      playSound()\r\n      showNativeNotification(n.title, n.body)\r\n      store.pushNotification(n)\r\n    })\r\n  }\r\n})\r\n\r\n// Infinite Scroll\r\nconst loadMoreTrigger = ref(null)\r\n\r\nconst {\r\n  items,\r\n  setupObserver,\r\n} = useInfiniteScroll(\r\n  async ({ limit, offset }) => {\r\n    return await store.fetchNotifications({ limit, offset })\r\n  },\r\n  {\r\n    limit: 10,\r\n    total: ref(store.notifications.length),\r\n    immediate: false,\r\n  }\r\n)\r\n\r\nwatch(loadMoreTrigger, (el) => {\r\n  if (el) setupObserver()\r\n})\r\n\r\nfunction onLoadMoreTriggerReady(el) {\r\n  loadMoreTrigger.value = el\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"icon-wrapper\" @click=\"toggleList\">\r\n      🔔\r\n      <span class=\"badge\" v-if=\"store.unreadCount > 0\">{{ store.unreadCount }}</span>\r\n    </div>\r\n\r\n    <div class=\"dropdown\" v-if=\"showList\">\r\n      <NotificationList\r\n        :notifications=\"items\"\r\n        @update=\"store.markAsRead\"\r\n        @loadMoreTriggerReady=\"onLoadMoreTriggerReady\"\r\n      />\r\n    </div>\r\n\r\n    <audio ref=\"notifSound\" :src=\"song\" preload=\"auto\"></audio>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n    .icon-wrapper {\r\n        font-size: 24px;\r\n        cursor: pointer;\r\n        position: relative;\r\n    }\r\n    .badge {\r\n        position: absolute;\r\n        top: -6px;\r\n        right: -10px;\r\n        background-color: red;\r\n        color: white;\r\n        border-radius: 50%;\r\n        padding: 2px 6px;\r\n        font-size: 12px;\r\n    }\r\n    .dropdown {\r\n        position: fixed;\r\n        top: 60px;\r\n        left: 0;\r\n        width: 300px;\r\n        background: white;\r\n        border-radius: 10px;\r\n        box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n    }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}