{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getToken } from '@/utils/token';\nimport { BASE_URL, API_SECRET_KEY } from '@/config';\nimport router from '@/router';\nlet isLoggingOut = false;\nexport async function sendApi(data = {}) {\n  try {\n    const token = await getToken();\n    const response = await fetch(`${BASE_URL}/api`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token.token}`,\n        'X-API-KEY': API_SECRET_KEY,\n        'X-API-KEY-BACK': token.key\n      },\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n    if (result.code === 401 && result.status === 'error') {\n      if (!isLoggingOut) {\n        isLoggingOut = true;\n        localStorage.clear();\n        router.push('/');\n      }\n      throw new Error('Unauthorized');\n    }\n    return result;\n  } catch (err) {\n    console.error('API Error:', err);\n    throw err;\n  }\n}","map":{"version":3,"names":["getToken","BASE_URL","API_SECRET_KEY","router","isLoggingOut","sendApi","data","token","response","fetch","method","credentials","headers","key","body","JSON","stringify","result","json","code","status","localStorage","clear","push","Error","err","console","error"],"sources":["D:/GitHub/ci3-vue3/vue3/src/utils/api.js"],"sourcesContent":["import { getToken } from '@/utils/token'\r\nimport { BASE_URL, API_SECRET_KEY } from '@/config'\r\nimport router from '@/router'\r\nlet isLoggingOut = false\r\nexport async function sendApi(data = {}) {\r\n  try {\r\n    const token = await getToken()\r\n    const response = await fetch(`${BASE_URL}/api`, {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token.token}`,\r\n        'X-API-KEY': API_SECRET_KEY,\r\n        'X-API-KEY-BACK': token.key,\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 401 && result.status === 'error') {\r\n      if (!isLoggingOut) {\r\n        isLoggingOut = true\r\n        localStorage.clear()\r\n        router.push('/')\r\n      }\r\n      throw new Error('Unauthorized')\r\n    }\r\n    return result\r\n  } catch (err) {\r\n    console.error('API Error:', err)\r\n    throw err\r\n  }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,QAAQ,EAAEC,cAAc,QAAQ,UAAU;AACnD,OAAOC,MAAM,MAAM,UAAU;AAC7B,IAAIC,YAAY,GAAG,KAAK;AACxB,OAAO,eAAeC,OAAOA,CAACC,IAAI,GAAG,CAAC,CAAC,EAAE;EACvC,IAAI;IACF,MAAMC,KAAK,GAAG,MAAMP,QAAQ,CAAC,CAAC;IAC9B,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,MAAM,EAAE;MAC9CS,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUL,KAAK,CAACA,KAAK,EAAE;QACxC,WAAW,EAAEL,cAAc;QAC3B,gBAAgB,EAAEK,KAAK,CAACM;MAC1B,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI;IAC3B,CAAC,CAAC;IACF,MAAMW,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IACpC,IAAID,MAAM,CAACE,IAAI,KAAK,GAAG,IAAIF,MAAM,CAACG,MAAM,KAAK,OAAO,EAAE;MACpD,IAAI,CAAChB,YAAY,EAAE;QACjBA,YAAY,GAAG,IAAI;QACnBiB,YAAY,CAACC,KAAK,CAAC,CAAC;QACpBnB,MAAM,CAACoB,IAAI,CAAC,GAAG,CAAC;MAClB;MACA,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACjC;IACA,OAAOP,MAAM;EACf,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEF,GAAG,CAAC;IAChC,MAAMA,GAAG;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}