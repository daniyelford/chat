{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.flat-map.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { defineStore } from 'pinia';\nimport { ref } from 'vue';\nimport moment from 'jalali-moment';\nimport { sendApi } from '@/utils/api';\nexport const useCalendarEventsStore = defineStore('calendarEvents', () => {\n  const events = ref([]);\n  const vacations = ref([]);\n  const getRandomColor = () => {\n    const colors = ['#29B6F6', '#FF7043', '#66BB6A', '#AB47BC', '#FFA726', '#26C6DA', '#EC407A'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n  const loadEvents = async () => {\n    try {\n      const res = await sendApi({\n        control: 'news',\n        action: 'get_news_for_month'\n      });\n      if (res.status === 'success') {\n        const data = res.data || [];\n        const allReports = data.flatMap(item => {\n          const news = item.news;\n          const reports = item.report_list || [];\n          return reports.map(report => ({\n            id: report.id,\n            title: news?.description?.slice(0, 20) || 'بدون عنوان',\n            startDateTime: moment(report.start),\n            endDateTime: moment(report.end),\n            color: getRandomColor(),\n            raw: {\n              news,\n              report\n            }\n          }));\n        });\n        events.value = allReports;\n      }\n    } catch (e) {\n      console.error('Error loading events:', e);\n    }\n  };\n  return {\n    events,\n    vacations,\n    loadEvents\n  };\n});","map":{"version":3,"names":["defineStore","ref","moment","sendApi","useCalendarEventsStore","events","vacations","getRandomColor","colors","Math","floor","random","length","loadEvents","res","control","action","status","data","allReports","flatMap","item","news","reports","report_list","map","report","id","title","description","slice","startDateTime","start","endDateTime","end","color","raw","value","e","console","error"],"sources":["D:/GitHub/ci3-vue3/vue3/src/stores/calendarEvents.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { ref } from 'vue'\r\nimport moment from 'jalali-moment'\r\nimport { sendApi } from '@/utils/api'\r\n\r\nexport const useCalendarEventsStore = defineStore('calendarEvents', () => {\r\n    const events = ref([])\r\n    const vacations = ref([])\r\n\r\n    const getRandomColor = () => {\r\n        const colors = ['#29B6F6', '#FF7043', '#66BB6A', '#AB47BC', '#FFA726', '#26C6DA', '#EC407A']\r\n        return colors[Math.floor(Math.random() * colors.length)]\r\n    }\r\n\r\n    const loadEvents = async () => {\r\n        try {\r\n            const res = await sendApi({ control: 'news', action: 'get_news_for_month' })\r\n\r\n            if (res.status === 'success') {\r\n                const data = res.data || []\r\n\r\n                const allReports = data.flatMap(item => {\r\n                    const news = item.news\r\n                    const reports = item.report_list || []\r\n\r\n                    return reports.map(report => ({\r\n                        id: report.id,\r\n                        title: news?.description?.slice(0, 20) || 'بدون عنوان',\r\n                        startDateTime: moment(report.start),\r\n                        endDateTime: moment(report.end),\r\n                        color: getRandomColor(),\r\n                        raw: {\r\n                            news,\r\n                            report\r\n                        }\r\n                    }))\r\n                })\r\n\r\n                events.value = allReports\r\n            }\r\n        } catch (e) {\r\n            console.error('Error loading events:', e)\r\n        }\r\n    }\r\n\r\n    return {\r\n        events,\r\n        vacations,\r\n        loadEvents\r\n    }\r\n})\r\n"],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,GAAG,QAAQ,KAAK;AACzB,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAO,MAAMC,sBAAsB,GAAGJ,WAAW,CAAC,gBAAgB,EAAE,MAAM;EACtE,MAAMK,MAAM,GAAGJ,GAAG,CAAC,EAAE,CAAC;EACtB,MAAMK,SAAS,GAAGL,GAAG,CAAC,EAAE,CAAC;EAEzB,MAAMM,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC5F,OAAOA,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,MAAM,CAACI,MAAM,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMX,OAAO,CAAC;QAAEY,OAAO,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAqB,CAAC,CAAC;MAE5E,IAAIF,GAAG,CAACG,MAAM,KAAK,SAAS,EAAE;QAC1B,MAAMC,IAAI,GAAGJ,GAAG,CAACI,IAAI,IAAI,EAAE;QAE3B,MAAMC,UAAU,GAAGD,IAAI,CAACE,OAAO,CAACC,IAAI,IAAI;UACpC,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAI;UACtB,MAAMC,OAAO,GAAGF,IAAI,CAACG,WAAW,IAAI,EAAE;UAEtC,OAAOD,OAAO,CAACE,GAAG,CAACC,MAAM,KAAK;YAC1BC,EAAE,EAAED,MAAM,CAACC,EAAE;YACbC,KAAK,EAAEN,IAAI,EAAEO,WAAW,EAAEC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,YAAY;YACtDC,aAAa,EAAE7B,MAAM,CAACwB,MAAM,CAACM,KAAK,CAAC;YACnCC,WAAW,EAAE/B,MAAM,CAACwB,MAAM,CAACQ,GAAG,CAAC;YAC/BC,KAAK,EAAE5B,cAAc,CAAC,CAAC;YACvB6B,GAAG,EAAE;cACDd,IAAI;cACJI;YACJ;UACJ,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAEFrB,MAAM,CAACgC,KAAK,GAAGlB,UAAU;MAC7B;IACJ,CAAC,CAAC,OAAOmB,CAAC,EAAE;MACRC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,OAAO;IACHjC,MAAM;IACNC,SAAS;IACTO;EACJ,CAAC;AACL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}