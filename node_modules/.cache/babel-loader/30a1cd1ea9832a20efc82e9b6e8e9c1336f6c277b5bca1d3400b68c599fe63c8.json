{"ast":null,"code":"import { ref, watch, onBeforeUnmount } from 'vue';\nexport function useInfiniteScroll(fetchFn, {\n  immediate = true\n} = {}) {\n  const loading = ref(false);\n  const offset = ref(0);\n  const canLoadMore = ref(true);\n  const loadMoreTrigger = ref(null);\n  let observer = null;\n  const loadMore = async () => {\n    console.log(offset);\n    if (loading.value || !canLoadMore.value) return;\n    loading.value = true;\n    try {\n      const result = await fetchFn({\n        offset: offset.value\n      });\n      const newCount = Array.isArray(result?.items) ? result.items.length : 0;\n      const hasMore = result?.has_more === true;\n      offset.value += newCount;\n      canLoadMore.value = hasMore;\n    } catch (e) {\n      console.error(e);\n    } finally {\n      loading.value = false;\n    }\n  };\n  const setupObserver = () => {\n    if (observer) observer.disconnect();\n    observer = new IntersectionObserver(async ([entry]) => {\n      if (entry.isIntersecting && canLoadMore.value && !loading.value) {\n        await loadMore();\n      }\n    }, {\n      threshold: 0.5\n    });\n    watch(loadMoreTrigger, el => {\n      if (el) observer.observe(el);\n    }, {\n      immediate: true\n    });\n  };\n  // const reset = () => {\n  //   loadMoreTrigger.value=null\n  //   canLoadMore.value = true\n  //   offset.value = 0\n  //   loading.value = false\n  //   if (observer) observer.disconnect()\n  // }\n  onBeforeUnmount(() => {\n    if (observer) observer.disconnect();\n  });\n  if (immediate) loadMore();\n  return {\n    loading,\n    canLoadMore,\n    loadMoreTrigger,\n    // reset,\n    setupObserver\n  };\n}","map":{"version":3,"names":["ref","watch","onBeforeUnmount","useInfiniteScroll","fetchFn","immediate","loading","offset","canLoadMore","loadMoreTrigger","observer","loadMore","console","log","value","result","newCount","Array","isArray","items","length","hasMore","has_more","e","error","setupObserver","disconnect","IntersectionObserver","entry","isIntersecting","threshold","el","observe"],"sources":["D:/GitHub/chat/vue3/src/composables/useInfiniteScroll.js"],"sourcesContent":["import { ref, watch, onBeforeUnmount } from 'vue'\r\nexport function useInfiniteScroll(fetchFn, {\r\n  immediate = true,\r\n} = {}) {\r\n  const loading = ref(false)\r\n  const offset = ref(0)\r\n  const canLoadMore = ref(true)\r\n  const loadMoreTrigger = ref(null)\r\n  let observer = null\r\n  const loadMore = async () => {\r\n    console.log(offset);\r\n\r\n    if (loading.value || !canLoadMore.value) return\r\n    loading.value = true\r\n    try {\r\n      const result = await fetchFn({ offset: offset.value })\r\n      const newCount = Array.isArray(result?.items) ? result.items.length : 0\r\n      const hasMore = result?.has_more === true\r\n      offset.value += newCount\r\n      canLoadMore.value = hasMore\r\n    } catch (e) {\r\n      console.error(e)\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n  const setupObserver = () => {\r\n    if (observer) observer.disconnect()\r\n    observer = new IntersectionObserver(async ([entry]) => {\r\n      if (entry.isIntersecting && canLoadMore.value && !loading.value) {\r\n        await loadMore()\r\n      }\r\n    }, {\r\n      threshold: 0.5,\r\n    })\r\n    watch(loadMoreTrigger, (el) => {\r\n      if (el) observer.observe(el)\r\n    }, { immediate: true })\r\n  }\r\n  // const reset = () => {\r\n  //   loadMoreTrigger.value=null\r\n  //   canLoadMore.value = true\r\n  //   offset.value = 0\r\n  //   loading.value = false\r\n  //   if (observer) observer.disconnect()\r\n  // }\r\n  onBeforeUnmount(() => {\r\n    if (observer) observer.disconnect()\r\n  })\r\n  if (immediate) loadMore()\r\n  return {\r\n    loading,\r\n    canLoadMore,\r\n    loadMoreTrigger,\r\n    // reset,\r\n    setupObserver,\r\n  }\r\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,eAAe,QAAQ,KAAK;AACjD,OAAO,SAASC,iBAAiBA,CAACC,OAAO,EAAE;EACzCC,SAAS,GAAG;AACd,CAAC,GAAG,CAAC,CAAC,EAAE;EACN,MAAMC,OAAO,GAAGN,GAAG,CAAC,KAAK,CAAC;EAC1B,MAAMO,MAAM,GAAGP,GAAG,CAAC,CAAC,CAAC;EACrB,MAAMQ,WAAW,GAAGR,GAAG,CAAC,IAAI,CAAC;EAC7B,MAAMS,eAAe,GAAGT,GAAG,CAAC,IAAI,CAAC;EACjC,IAAIU,QAAQ,GAAG,IAAI;EACnB,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3BC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;IAEnB,IAAID,OAAO,CAACQ,KAAK,IAAI,CAACN,WAAW,CAACM,KAAK,EAAE;IACzCR,OAAO,CAACQ,KAAK,GAAG,IAAI;IACpB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMX,OAAO,CAAC;QAAEG,MAAM,EAAEA,MAAM,CAACO;MAAM,CAAC,CAAC;MACtD,MAAME,QAAQ,GAAGC,KAAK,CAACC,OAAO,CAACH,MAAM,EAAEI,KAAK,CAAC,GAAGJ,MAAM,CAACI,KAAK,CAACC,MAAM,GAAG,CAAC;MACvE,MAAMC,OAAO,GAAGN,MAAM,EAAEO,QAAQ,KAAK,IAAI;MACzCf,MAAM,CAACO,KAAK,IAAIE,QAAQ;MACxBR,WAAW,CAACM,KAAK,GAAGO,OAAO;IAC7B,CAAC,CAAC,OAAOE,CAAC,EAAE;MACVX,OAAO,CAACY,KAAK,CAACD,CAAC,CAAC;IAClB,CAAC,SAAS;MACRjB,OAAO,CAACQ,KAAK,GAAG,KAAK;IACvB;EACF,CAAC;EACD,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIf,QAAQ,EAAEA,QAAQ,CAACgB,UAAU,CAAC,CAAC;IACnChB,QAAQ,GAAG,IAAIiB,oBAAoB,CAAC,OAAO,CAACC,KAAK,CAAC,KAAK;MACrD,IAAIA,KAAK,CAACC,cAAc,IAAIrB,WAAW,CAACM,KAAK,IAAI,CAACR,OAAO,CAACQ,KAAK,EAAE;QAC/D,MAAMH,QAAQ,CAAC,CAAC;MAClB;IACF,CAAC,EAAE;MACDmB,SAAS,EAAE;IACb,CAAC,CAAC;IACF7B,KAAK,CAACQ,eAAe,EAAGsB,EAAE,IAAK;MAC7B,IAAIA,EAAE,EAAErB,QAAQ,CAACsB,OAAO,CAACD,EAAE,CAAC;IAC9B,CAAC,EAAE;MAAE1B,SAAS,EAAE;IAAK,CAAC,CAAC;EACzB,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACAH,eAAe,CAAC,MAAM;IACpB,IAAIQ,QAAQ,EAAEA,QAAQ,CAACgB,UAAU,CAAC,CAAC;EACrC,CAAC,CAAC;EACF,IAAIrB,SAAS,EAAEM,QAAQ,CAAC,CAAC;EACzB,OAAO;IACLL,OAAO;IACPE,WAAW;IACXC,eAAe;IACf;IACAgB;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}