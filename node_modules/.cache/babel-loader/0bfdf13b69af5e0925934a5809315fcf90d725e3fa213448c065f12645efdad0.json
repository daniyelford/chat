{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"msg\"\n};\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = {\n  key: 0\n};\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport { sendApi } from '@/utils/api';\nimport router from '@/router';\nexport default {\n  __name: 'SmsLoginForm',\n  props: {\n    phone: String\n  },\n  emits: ['back'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const emit = __emit;\n    const message = ref('');\n    const code = ref('');\n    const resendDisabled = ref(false);\n    const countdown = ref(0);\n    const props = __props;\n    const checkHasPhone = () => {\n      console.log(props.phone);\n      console.log(sessionStorage.getItem('phone'));\n    };\n    const editPhone = () => {\n      sessionStorage.setItem('login_step', '1');\n      code.value = '';\n      emit('back', true);\n    };\n    const submitCode = async () => {\n      try {\n        const response = await sendApi({\n          action: 'verify_sms_code',\n          data: {\n            phone: props.phone,\n            code: code.value\n          },\n          control: 'login'\n        });\n        if (response.status === 'success') {\n          sessionStorage.setItem('login_step', '2');\n          sessionStorage.removeItem('submit_phone_timer');\n          sessionStorage.removeItem('phone');\n          if (response.url === 'dashboard') {\n            sessionStorage.setItem('isLogin', true);\n            window.dispatchEvent(new Event(\"storage\"));\n            router.push({\n              name: 'dashboard'\n            });\n          } else if (response.url === 'register') {\n            router.push({\n              name: 'register'\n            });\n          } else {\n            message.value = 'مشخصات ناقص است. لطفاً دوباره تلاش کنید.';\n          }\n        } else {\n          message.value = 'کد وارد شده اشتباه است.';\n        }\n      } catch (error) {\n        message.value = 'خطا در تأیید کد.';\n        console.error(error);\n      }\n    };\n    const resendCode = async () => {\n      if (resendDisabled.value) return;\n      try {\n        const response = await sendApi({\n          action: 'send_phone_login',\n          data: props.phone,\n          control: 'login'\n        });\n        if (response.status === 'success') {\n          message.value = 'کد مجدداً ارسال شد.';\n          startCountdown();\n        } else {\n          message.value = response.message || 'ارسال مجدد موفق نبود';\n        }\n      } catch (error) {\n        message.value = 'خطا در ارسال مجدد کد.';\n        console.error(error);\n      }\n    };\n    let interval = null;\n    const startCountdown = () => {\n      const now = Date.now();\n      const expireTime = now + 60000;\n      sessionStorage.setItem('resend_code_timer', expireTime);\n      updatecountdown();\n      interval = setInterval(updatecountdown, 1000);\n    };\n    const updatecountdown = () => {\n      const expireTime = parseInt(sessionStorage.getItem('resend_code_timer') || 0);\n      const now = Date.now();\n      const diff = Math.ceil((expireTime - now) / 1000);\n      countdown.value = diff > 0 ? diff : 0;\n      if (countdown.value <= 0 && interval) {\n        resendDisabled.value = false;\n        clearInterval(interval);\n        interval = null;\n      } else {\n        resendDisabled.value = true;\n      }\n    };\n    onMounted(() => {\n      checkHasPhone();\n      updatecountdown();\n      interval = setInterval(updatecountdown, 1000);\n    });\n    onUnmounted(() => {\n      if (interval) clearInterval(interval);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"form\", {\n        onSubmit: _withModifiers(submitCode, [\"prevent\"])\n      }, [message.value ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString(message.value), 1)) : _createCommentVNode(\"\", true), _cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n        for: \"code\"\n      }, \"کد پیامک شده\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        id: \"code\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => code.value = $event),\n        type: \"text\",\n        placeholder: \"کد تأیید\",\n        required: \"\"\n      }, null, 512), [[_vModelText, code.value]]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n        type: \"submit\"\n      }, \"تأیید کد\", -1)), _createElementVNode(\"button\", {\n        type: \"button\",\n        onClick: editPhone,\n        style: {\n          \"width\": \"49%\",\n          \"background-color\": \"orangered\",\n          \"display\": \"inline-block\",\n          \"margin-left\": \"1%\"\n        }\n      }, \" ویرایش شماره \"), _createElementVNode(\"button\", {\n        type: \"button\",\n        onClick: resendCode,\n        disabled: resendDisabled.value,\n        style: {\n          \"width\": \"49%\",\n          \"background-color\": \"goldenrod\",\n          \"display\": \"inline-block\",\n          \"margin-right\": \"1%\"\n        }\n      }, [_cache[1] || (_cache[1] = _createTextVNode(\" ارسال مجدد کد \")), resendDisabled.value ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"(\" + _toDisplayString(countdown.value) + \" ثانیه)\", 1)) : _createCommentVNode(\"\", true)], 8, _hoisted_2)], 32);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","sendApi","router","emit","__emit","message","code","resendDisabled","countdown","props","__props","checkHasPhone","console","log","phone","sessionStorage","getItem","editPhone","setItem","value","submitCode","response","action","data","control","status","removeItem","url","window","dispatchEvent","Event","push","name","error","resendCode","startCountdown","interval","now","Date","expireTime","updatecountdown","setInterval","parseInt","diff","Math","ceil","clearInterval"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/home/PhoneLogin/SmsLoginForm.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"submitCode\">\r\n        <p class=\"msg\" v-if=\"message\">{{ message }}</p>\r\n        <label for=\"code\">کد پیامک شده</label>\r\n        <input\r\n            id=\"code\"\r\n            v-model=\"code\"\r\n            type=\"text\"\r\n            placeholder=\"کد تأیید\"\r\n            required\r\n        />\r\n        <button type=\"submit\">تأیید کد</button>\r\n        <button type=\"button\" @click=\"editPhone\" style=\"width: 49%;background-color: orangered;display: inline-block;margin-left: 1%;\">\r\n            ویرایش شماره\r\n        </button>\r\n        <button\r\n            type=\"button\"\r\n            @click=\"resendCode\"\r\n            :disabled=\"resendDisabled\"\r\n            style=\"width: 49%;background-color: goldenrod;display: inline-block;margin-right: 1%;\">\r\n            ارسال مجدد کد\r\n            <span v-if=\"resendDisabled\">({{ countdown }} ثانیه)</span>\r\n        </button>\r\n    </form>\r\n</template>\r\n<script setup>\r\n    import { ref,onMounted,onUnmounted,defineProps,defineEmits } from 'vue'\r\n    import { sendApi } from '@/utils/api'\r\n    import router from '@/router'\r\n    const emit = defineEmits(['back'])\r\n    const message=ref('')\r\n    const code=ref('') \r\n    const resendDisabled=ref(false)\r\n    const countdown=ref(0)\r\n    const props = defineProps({\r\n        phone: String\r\n    })\r\n    const checkHasPhone=()=>{\r\n        console.log(props.phone);\r\n        console.log(sessionStorage.getItem('phone'));\r\n\r\n    }\r\n    const editPhone = () => {\r\n        sessionStorage.setItem('login_step', '1')\r\n        code.value=''\r\n        emit('back',true)\r\n    }\r\n    const submitCode=async()=>{\r\n        try {\r\n            const response = await sendApi({\r\n                action: 'verify_sms_code',\r\n                data: { phone: props.phone, code: code.value },\r\n                control:'login'\r\n            })\r\n            if (response.status === 'success') {\r\n                sessionStorage.setItem('login_step', '2')\r\n                sessionStorage.removeItem('submit_phone_timer')\r\n                sessionStorage.removeItem('phone')\r\n                if (response.url === 'dashboard') {\r\n                    sessionStorage.setItem('isLogin', true);\r\n                    window.dispatchEvent(new Event(\"storage\"));\r\n                    router.push({ name: 'dashboard' })\r\n                } else if (response.url === 'register') {\r\n                    router.push({ name: 'register' })\r\n                } else {\r\n                    message.value = 'مشخصات ناقص است. لطفاً دوباره تلاش کنید.'\r\n                }\r\n            } else {\r\n                message.value = 'کد وارد شده اشتباه است.'\r\n            }\r\n        } catch (error) {\r\n            message.value = 'خطا در تأیید کد.'\r\n            console.error(error)\r\n        }\r\n    }\r\n    const resendCode = async () => {\r\n        if (resendDisabled.value) return\r\n        try {\r\n            const response = await sendApi({ \r\n                action: 'send_phone_login',\r\n                data: props.phone,\r\n                control:'login'\r\n            })\r\n            if (response.status === 'success') {\r\n                message.value = 'کد مجدداً ارسال شد.'\r\n                startCountdown()\r\n            } else {\r\n                message.value = response.message || 'ارسال مجدد موفق نبود'\r\n            }\r\n        } catch (error) {\r\n            message.value = 'خطا در ارسال مجدد کد.'\r\n            console.error(error)\r\n        }\r\n    }\r\n    let interval = null;\r\n    const startCountdown = () => {\r\n        const now = Date.now()\r\n        const expireTime = now + 60000 \r\n        sessionStorage.setItem('resend_code_timer', expireTime)\r\n        updatecountdown()\r\n        interval = setInterval(updatecountdown, 1000)\r\n    }\r\n    const updatecountdown = () => {\r\n        const expireTime = parseInt(sessionStorage.getItem('resend_code_timer') || 0)\r\n        const now = Date.now()\r\n        const diff = Math.ceil((expireTime - now) / 1000)\r\n        countdown.value = diff > 0 ? diff : 0\r\n        if (countdown.value <= 0 && interval) {\r\n            resendDisabled.value=false\r\n            clearInterval(interval)\r\n            interval = null\r\n        }else{\r\n            resendDisabled.value=true\r\n        }\r\n    }\r\n    onMounted(() => {\r\n        checkHasPhone()\r\n        updatecountdown()\r\n        interval = setInterval(updatecountdown, 1000)\r\n    })\r\n    onUnmounted(() => {\r\n        if (interval) clearInterval(interval)\r\n    })\r\n</script>\r\n<style scoped>\r\n    form {\r\n        width: 100%;\r\n    }\r\n    .msg{\r\n        border-radius: 10px;\r\n        background-color: #5e6295;\r\n        color: #fefff8;\r\n        padding: 10px;\r\n        text-align: center;\r\n        margin: 5px auto;\r\n    }\r\n    label,\r\n    input,\r\n    button {\r\n        display: block;\r\n        width: 100%;\r\n        margin-bottom: 10px;\r\n    }\r\n    label{\r\n        text-align: center;\r\n    }\r\n    button{\r\n        background-color: green;\r\n        color: white;\r\n        padding: 9px;\r\n        border-radius: 10px;\r\n        border: none;\r\n        margin-top: 10px;\r\n    }\r\n    button[disabled] {\r\n        opacity: 0.6;\r\n        background-color: rgb(143, 141, 141);\r\n        cursor: not-allowed;\r\n    }\r\n    input {\r\n        box-sizing: border-box;\r\n        padding: 7px;\r\n        border: none;\r\n        outline: none;\r\n        border-radius: 10px;\r\n        background-color: #edefff;\r\n    }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}