{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"category-selector\"\n};\nconst _hoisted_2 = {\n  class: \"category-list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  ref: \"loadTriggerRef\"\n};\nimport { ref, watch, onMounted } from 'vue';\nexport default {\n  __name: 'PlaceSlider',\n  props: {\n    categories: Array,\n    loadTriggerRef: Object,\n    modelValue: [String, Number],\n    // v-model:selectedCategoryId\n    search: String // v-model:search\n  },\n  emits: ['update:modelValue', 'update:search'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const props = __props;\n    const emit = __emit;\n    const selectedCategoryId = ref(props.modelValue);\n    const categorySearch = ref(props.search || '');\n    watch(() => props.modelValue, val => selectedCategoryId.value = val);\n    watch(selectedCategoryId, val => emit('update:modelValue', val));\n    watch(categorySearch, val => emit('update:search', val));\n\n    // useInfiniteScroll for loading more categories (if needed)\n    onMounted(() => {\n      if (props.loadTriggerRef?.value) {\n        const observer = new IntersectionObserver(entries => {\n          entries.forEach(entry => {\n            if (entry.isIntersecting) {\n              // Load more categories from store or emit event\n              console.log('Load more categories');\n            }\n          });\n        });\n        observer.observe(props.loadTriggerRef.value);\n      }\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => categorySearch.value = $event),\n        class: \"search-input\",\n        placeholder: \"جستجوی دسته‌بندی\"\n      }, null, 512), [[_vModelText, categorySearch.value]]), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.categories.filter(c => c.title.includes(categorySearch.value)), cat => {\n        return _openBlock(), _createElementBlock(\"button\", {\n          key: cat.id,\n          class: _normalizeClass([\"category-button\", {\n            active: selectedCategoryId.value === cat.id\n          }]),\n          onClick: $event => selectedCategoryId.value = cat.id\n        }, _toDisplayString(cat.title), 11, _hoisted_3);\n      }), 128))]), _createElementVNode(\"div\", _hoisted_4, null, 512)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","props","__props","emit","__emit","selectedCategoryId","modelValue","categorySearch","search","val","value","loadTriggerRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","console","log","observe"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/category/PlaceSlider.vue"],"sourcesContent":["  <!-- import PlaceSlider from '@/components/tooles/category/PlaceSlider.vue' -->\r\n<script setup>\r\nimport { ref, defineProps, defineEmits, watch, onMounted } from 'vue'\r\nconst props = defineProps({\r\n  categories: Array,\r\n  loadTriggerRef: Object,\r\n  modelValue: [String, Number], // v-model:selectedCategoryId\r\n  search: String // v-model:search\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue', 'update:search'])\r\n\r\nconst selectedCategoryId = ref(props.modelValue)\r\nconst categorySearch = ref(props.search || '')\r\n\r\nwatch(() => props.modelValue, val => selectedCategoryId.value = val)\r\nwatch(selectedCategoryId, val => emit('update:modelValue', val))\r\nwatch(categorySearch, val => emit('update:search', val))\r\n\r\n// useInfiniteScroll for loading more categories (if needed)\r\nonMounted(() => {\r\n  if (props.loadTriggerRef?.value) {\r\n    const observer = new IntersectionObserver(entries => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          // Load more categories from store or emit event\r\n          console.log('Load more categories')\r\n        }\r\n      })\r\n    })\r\n    observer.observe(props.loadTriggerRef.value)\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"category-selector\">\r\n    <input\r\n      v-model=\"categorySearch\"\r\n      class=\"search-input\"\r\n      placeholder=\"جستجوی دسته‌بندی\"\r\n    />\r\n\r\n    <div class=\"category-list\">\r\n      <button\r\n        v-for=\"cat in categories.filter(c => c.title.includes(categorySearch))\"\r\n        :key=\"cat.id\"\r\n        class=\"category-button\"\r\n        :class=\"{ active: selectedCategoryId === cat.id }\"\r\n        @click=\"selectedCategoryId = cat.id\"\r\n      >\r\n        {{ cat.title }}\r\n      </button>\r\n    </div>\r\n\r\n    <div ref=\"loadTriggerRef\"></div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.category-button.active {\r\n  background-color: #d1fae5;\r\n}\r\n</style>\r\n<!-- \r\n// v-model:selectedCategoryId=\"selectedCategoryId\"\r\n//       v-model:search=\"categorySearch\"\r\n//       :categories=\"placeStore.allCategories\"\r\n//       :load-trigger-ref=\"categoryLoadTrigger\"\r\n\r\n\r\n-->"],"mappings":";;;;;;;;;;;;;;AAEA,SAASA,GAA6B,EAAEC,KAAK,EAAEC,SAAS,QAAQ,KAAK;;;;;;;;;;;;;;IACrE,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,IAAI,GAAGC,MAAmD;IAEhE,MAAMC,kBAAkB,GAAGP,GAAG,CAACG,KAAK,CAACK,UAAU,CAAC;IAChD,MAAMC,cAAc,GAAGT,GAAG,CAACG,KAAK,CAACO,MAAM,IAAI,EAAE,CAAC;IAE9CT,KAAK,CAAC,MAAME,KAAK,CAACK,UAAU,EAAEG,GAAG,IAAIJ,kBAAkB,CAACK,KAAK,GAAGD,GAAG,CAAC;IACpEV,KAAK,CAACM,kBAAkB,EAAEI,GAAG,IAAIN,IAAI,CAAC,mBAAmB,EAAEM,GAAG,CAAC,CAAC;IAChEV,KAAK,CAACQ,cAAc,EAAEE,GAAG,IAAIN,IAAI,CAAC,eAAe,EAAEM,GAAG,CAAC,CAAC;;IAExD;IACAT,SAAS,CAAC,MAAM;MACd,IAAIC,KAAK,CAACU,cAAc,EAAED,KAAK,EAAE;QAC/B,MAAME,QAAQ,GAAG,IAAIC,oBAAoB,CAACC,OAAO,IAAI;UACnDA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;YACvB,IAAIA,KAAK,CAACC,cAAc,EAAE;cACxB;cACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;YACrC;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;QACFP,QAAQ,CAACQ,OAAO,CAACnB,KAAK,CAACU,cAAc,CAACD,KAAK,CAAC;MAC9C;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}