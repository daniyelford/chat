{"ast":null,"code":"import { createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bank-cards-section\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"no-cards\"\n};\nconst _hoisted_5 = {\n  class: \"card-list\"\n};\nconst _hoisted_6 = {\n  class: \"card-info\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"add-card\"\n};\nimport { ref, onMounted } from 'vue';\nimport { useWalletStore } from '@/stores/wallet';\nexport default {\n  __name: 'BankCardsSection',\n  setup(__props) {\n    const store = useWalletStore();\n    const newCard = ref({\n      shomare_cart: '',\n      shomare_shaba: ''\n    });\n    const addCard = async () => {\n      if (!newCard.value.shomare_cart || !newCard.value.shomare_shaba) {\n        return alert('لطفاً تمام فیلدها را پر کنید.');\n      }\n      const res = await store.addCard(newCard.value);\n      if (res.status === 'success') {\n        newCard.value = {\n          shomare_cart: '',\n          shomare_shaba: ''\n        };\n      } else {\n        alert(res.message || 'خطا در افزودن کارت');\n      }\n    };\n    const removeCard = async id => {\n      const confirmed = confirm('آیا از حذف این کارت مطمئن هستید؟');\n      if (!confirmed) return;\n      const res = await store.deleteCard(id);\n      if (res.status !== 'success') {\n        alert(res.message || 'خطا در حذف کارت');\n      }\n    };\n    onMounted(() => {\n      store.fetchCards();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", {\n        class: \"section-title\"\n      }, \"کارت‌های بانکی\", -1)), _unref(store).loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"در حال بارگذاری...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_unref(store).cards.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"کارت بانکی ثبت نشده است.\")) : _createCommentVNode(\"\", true), _createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(store).cards, card => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: card.id,\n          class: \"card-item\"\n        }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"شماره کارت:\", -1)), _createTextVNode(\" \" + _toDisplayString(card.shomare_cart), 1)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"شماره شبا:\", -1)), _createTextVNode(\" \" + _toDisplayString(card.shomare_shaba), 1)])]), _createElementVNode(\"button\", {\n          class: \"delete-btn\",\n          onClick: $event => removeCard(card.id)\n        }, \"حذف\", 8, _hoisted_7)]);\n      }), 128))]), _createElementVNode(\"div\", _hoisted_8, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"افزودن کارت جدید\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => newCard.value.shomare_cart = $event),\n        placeholder: \"شماره کارت\"\n      }, null, 512), [[_vModelText, newCard.value.shomare_cart]]), _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => newCard.value.shomare_shaba = $event),\n        placeholder: \"شماره شبا\"\n      }, null, 512), [[_vModelText, newCard.value.shomare_shaba]]), _createElementVNode(\"button\", {\n        onClick: addCard\n      }, \"ثبت کارت\")])]))]);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useWalletStore","store","newCard","shomare_cart","shomare_shaba","addCard","value","alert","res","status","message","removeCard","id","confirmed","confirm","deleteCard","fetchCards"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/dashboard/pagesContent/wallet/BankCardsSection.vue"],"sourcesContent":["<template>\r\n  <div class=\"bank-cards-section\">\r\n    <h2 class=\"section-title\">کارت‌های بانکی</h2>\r\n\r\n    <div v-if=\"store.loading\" class=\"loading\">در حال بارگذاری...</div>\r\n\r\n    <div v-else>\r\n      <div v-if=\"store.cards.length === 0\" class=\"no-cards\">کارت بانکی ثبت نشده است.</div>\r\n\r\n      <ul class=\"card-list\">\r\n        <li v-for=\"card in store.cards\" :key=\"card.id\" class=\"card-item\">\r\n          <div class=\"card-info\">\r\n            <p><strong>شماره کارت:</strong> {{ card.shomare_cart }}</p>\r\n            <p><strong>شماره شبا:</strong> {{ card.shomare_shaba }}</p>\r\n          </div>\r\n          <button class=\"delete-btn\" @click=\"removeCard(card.id)\">حذف</button>\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"add-card\">\r\n        <h3>افزودن کارت جدید</h3>\r\n        <input v-model=\"newCard.shomare_cart\" placeholder=\"شماره کارت\" />\r\n        <input v-model=\"newCard.shomare_shaba\" placeholder=\"شماره شبا\" />\r\n        <button @click=\"addCard\">ثبت کارت</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useWalletStore } from '@/stores/wallet'\r\n\r\nconst store = useWalletStore()\r\nconst newCard = ref({\r\n  shomare_cart: '',\r\n  shomare_shaba: ''\r\n})\r\n\r\nconst addCard = async () => {\r\n  if (!newCard.value.shomare_cart || !newCard.value.shomare_shaba) {\r\n    return alert('لطفاً تمام فیلدها را پر کنید.')\r\n  }\r\n\r\n  const res = await store.addCard(newCard.value)\r\n  if (res.status === 'success') {\r\n    newCard.value = { shomare_cart: '', shomare_shaba: '' }\r\n  } else {\r\n    alert(res.message || 'خطا در افزودن کارت')\r\n  }\r\n}\r\n\r\nconst removeCard = async (id) => {\r\n  const confirmed = confirm('آیا از حذف این کارت مطمئن هستید؟')\r\n  if (!confirmed) return\r\n\r\n  const res = await store.deleteCard(id)\r\n  if (res.status !== 'success') {\r\n    alert(res.message || 'خطا در حذف کارت')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  store.fetchCards()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.bank-cards-section {\r\n  padding: 1rem;\r\n}\r\n.section-title {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n}\r\n.card-list {\r\n  margin-top: 1rem;\r\n}\r\n.card-item {\r\n  border: 1px solid #ddd;\r\n  padding: 0.75rem;\r\n  margin-bottom: 0.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.add-card {\r\n  margin-top: 1rem;\r\n}\r\n.add-card input {\r\n  display: block;\r\n  margin: 0.5rem 0;\r\n  padding: 0.5rem;\r\n  width: 100%;\r\n}\r\n.delete-btn {\r\n  background-color: crimson;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.4rem 0.8rem;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,cAAc,QAAQ,iBAAiB;;;;IAEhD,MAAMC,KAAK,GAAGD,cAAc,CAAC,CAAC;IAC9B,MAAME,OAAO,GAAGJ,GAAG,CAAC;MAClBK,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE;IACjB,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI,CAACH,OAAO,CAACI,KAAK,CAACH,YAAY,IAAI,CAACD,OAAO,CAACI,KAAK,CAACF,aAAa,EAAE;QAC/D,OAAOG,KAAK,CAAC,+BAA+B,CAAC;MAC/C;MAEA,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACI,OAAO,CAACH,OAAO,CAACI,KAAK,CAAC;MAC9C,IAAIE,GAAG,CAACC,MAAM,KAAK,SAAS,EAAE;QAC5BP,OAAO,CAACI,KAAK,GAAG;UAAEH,YAAY,EAAE,EAAE;UAAEC,aAAa,EAAE;QAAG,CAAC;MACzD,CAAC,MAAM;QACLG,KAAK,CAACC,GAAG,CAACE,OAAO,IAAI,oBAAoB,CAAC;MAC5C;IACF,CAAC;IAED,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;MAC/B,MAAMC,SAAS,GAAGC,OAAO,CAAC,kCAAkC,CAAC;MAC7D,IAAI,CAACD,SAAS,EAAE;MAEhB,MAAML,GAAG,GAAG,MAAMP,KAAK,CAACc,UAAU,CAACH,EAAE,CAAC;MACtC,IAAIJ,GAAG,CAACC,MAAM,KAAK,SAAS,EAAE;QAC5BF,KAAK,CAACC,GAAG,CAACE,OAAO,IAAI,iBAAiB,CAAC;MACzC;IACF,CAAC;IAEDX,SAAS,CAAC,MAAM;MACdE,KAAK,CAACe,UAAU,CAAC,CAAC;IACpB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}