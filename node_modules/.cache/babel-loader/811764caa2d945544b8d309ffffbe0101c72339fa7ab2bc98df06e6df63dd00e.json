{"ast":null,"code":"import { createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-settings\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  key: 2,\n  class: \"error\"\n};\nimport { useUserStore } from '@/stores/user';\nimport { onMounted, ref } from 'vue';\nexport default {\n  __name: 'UsersSettingList',\n  setup(__props) {\n    const userStore = useUserStore();\n    const defaultAvatar = ref('/images/default-avatar.png');\n    const refreshUser = () => {\n      userStore.fetchUserInfo();\n    };\n    onMounted(() => {\n      userStore.fetchUserInfo();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"تنظیمات کاربر\", -1)), !_unref(userStore).isLoaded ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" در حال بارگذاری اطلاعات... \")) : _unref(userStore).users.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(userStore).users, user => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          class: \"user-info\",\n          key: user.id\n        }, [_createElementVNode(\"img\", {\n          src: user.image || defaultAvatar.value,\n          alt: \"User Avatar\",\n          class: \"avatar\"\n        }, null, 8, _hoisted_4), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"نام کامل:\", -1)), _createTextVNode(\" \" + _toDisplayString(user.fullName), 1)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"موبایل:\", -1)), _createTextVNode(\" \" + _toDisplayString(user.mobile), 1)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"موجودی کیف پول:\", -1)), _createTextVNode(\" \" + _toDisplayString(user.wallet) + \" تومان\", 1)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"امتیاز توکن:\", -1)), _createTextVNode(\" \" + _toDisplayString(user.tokenScore), 1)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"اثر انگشت فعال:\", -1)), _createTextVNode(\" \" + _toDisplayString(user.finger ? 'بله' : 'خیر'), 1)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"قوانین:\", -1)), _createTextVNode(\" \" + _toDisplayString(user.rule ? 'فعال' : 'غیرفعال'), 1)])]);\n      }), 128)), _createElementVNode(\"div\", {\n        class: \"actions\"\n      }, [_createElementVNode(\"button\", {\n        onClick: refreshUser\n      }, \"بروزرسانی اطلاعات\")])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" کاربری موجود نیست \"))]);\n    };\n  }\n};","map":{"version":3,"names":["useUserStore","onMounted","ref","userStore","defaultAvatar","refreshUser","fetchUserInfo"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/users/UsersSettingList.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-settings\">\r\n    <h2>تنظیمات کاربر</h2>\r\n\r\n    <div v-if=\"!userStore.isLoaded\">\r\n      در حال بارگذاری اطلاعات...\r\n    </div>\r\n\r\n    <div v-else-if=\"userStore.users.length>0\">\r\n      <div class=\"user-info\" v-for=\"user in userStore.users\" :key=\"user.id\">\r\n        <img :src=\"user.image || defaultAvatar\" alt=\"User Avatar\" class=\"avatar\" />\r\n        <p><strong>نام کامل:</strong> {{ user.fullName }}</p>\r\n        <p><strong>موبایل:</strong> {{ user.mobile }}</p>\r\n        <p><strong>موجودی کیف پول:</strong> {{ user.wallet }} تومان</p>\r\n        <p><strong>امتیاز توکن:</strong> {{ user.tokenScore }}</p>\r\n        <p><strong>اثر انگشت فعال:</strong> {{ user.finger ? 'بله' : 'خیر' }}</p>\r\n        <p><strong>قوانین:</strong> {{ user.rule ? 'فعال' : 'غیرفعال' }}</p>\r\n      </div>\r\n      <div class=\"actions\">\r\n        <button @click=\"refreshUser\">بروزرسانی اطلاعات</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"error\" v-else>\r\n        کاربری موجود نیست\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\n    import { useUserStore } from '@/stores/user'\r\n    import { onMounted, ref } from 'vue'\r\n    const userStore = useUserStore()\r\n    const defaultAvatar = ref('/images/default-avatar.png')\r\n    const refreshUser = () => {\r\n      userStore.fetchUserInfo()\r\n    }\r\n    onMounted(() => {\r\n        userStore.fetchUserInfo()\r\n    })\r\n</script>"],"mappings":";;;;;;;;;;;;;;;AA4BI,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,SAAS,EAAEC,GAAG,QAAQ,KAAK;;;;IACpC,MAAMC,SAAS,GAAGH,YAAY,CAAC,CAAC;IAChC,MAAMI,aAAa,GAAGF,GAAG,CAAC,4BAA4B,CAAC;IACvD,MAAMG,WAAW,GAAGA,CAAA,KAAM;MACxBF,SAAS,CAACG,aAAa,CAAC,CAAC;IAC3B,CAAC;IACDL,SAAS,CAAC,MAAM;MACZE,SAAS,CAACG,aAAa,CAAC,CAAC;IAC7B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}