{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"upload-box\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"progress-bar-wrapper\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"preview\"\n};\nconst _hoisted_4 = [\"href\"];\nimport { ref } from 'vue';\nimport { sendApi } from '@/utils/api';\nconst MAX_FILE_SIZE_MB = 10;\nexport default {\n  __name: 'UploadSinglePdf',\n  props: {\n    toAction: String,\n    url: String\n  },\n  setup(__props) {\n    const progress = ref(0);\n    const pdfUrl = ref('');\n    const props = __props;\n    const onFileChange = e => {\n      const file = e.target.files[0];\n      if (!file) return;\n      const sizeInMB = file.size / (1024 * 1024);\n      if (sizeInMB > MAX_FILE_SIZE_MB) {\n        alert(`اندازه فایل نباید بیشتر از ${MAX_FILE_SIZE_MB} مگابایت باشد`);\n        return;\n      }\n      progress.value = 0;\n      pdfUrl.value = '';\n      const reader = new FileReader();\n      reader.onprogress = event => {\n        if (event.lengthComputable) {\n          progress.value = event.loaded / event.total * 100;\n        }\n      };\n      reader.onload = async () => {\n        const base64Data = reader.result;\n        try {\n          const response = await sendApi({\n            action: 'upload_single_pdf',\n            data: {\n              data: base64Data,\n              url: props.url,\n              toAction: props.toAction\n            },\n            control: 'upload'\n          });\n          if (response.status === 'success' && response.url) {\n            pdfUrl.value = response.url;\n          } else {\n            alert(response.message || 'آپلود موفق نبود');\n          }\n        } catch (err) {\n          console.error('خطا در آپلود:', err);\n          alert('خطا در ارسال PDF');\n        }\n      };\n      reader.onerror = err => {\n        console.error('خطا در خواندن فایل:', err);\n        alert('خطا در خواندن فایل PDF');\n      };\n      reader.readAsDataURL(file);\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: onFileChange\n      }, null, 32), progress.value > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n        class: \"progress-bar\",\n        style: _normalizeStyle({\n          width: progress.value + '%'\n        })\n      }, null, 4), _createElementVNode(\"p\", null, _toDisplayString(progress.value.toFixed(0)) + \"%\", 1)])) : _createCommentVNode(\"\", true), pdfUrl.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[0] || (_cache[0] = _createElementVNode(\"p\", null, \"PDF آپلود شده:\", -1)), _createElementVNode(\"a\", {\n        href: pdfUrl.value,\n        target: \"_blank\",\n        class: \"pdf-link\"\n      }, \"مشاهده PDF\", 8, _hoisted_4)])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","sendApi","MAX_FILE_SIZE_MB","progress","pdfUrl","props","__props","onFileChange","e","file","target","files","sizeInMB","size","alert","value","reader","FileReader","onprogress","event","lengthComputable","loaded","total","onload","base64Data","result","response","action","data","url","toAction","control","status","message","err","console","error","onerror","readAsDataURL"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/tooles/upload/UploadSinglePdf.vue"],"sourcesContent":["<template>\r\n  <div class=\"upload-box\">\r\n    <input type=\"file\" accept=\"application/pdf\" @change=\"onFileChange\" />\r\n\r\n    <div v-if=\"progress > 0\" class=\"progress-bar-wrapper\">\r\n      <div class=\"progress-bar\" :style=\"{ width: progress + '%' }\"></div>\r\n      <p>{{ progress.toFixed(0) }}%</p>\r\n    </div>\r\n\r\n    <div v-if=\"pdfUrl\" class=\"preview\">\r\n      <p>PDF آپلود شده:</p>\r\n      <a :href=\"pdfUrl\" target=\"_blank\" class=\"pdf-link\">مشاهده PDF</a>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  import { ref,defineProps } from 'vue'\r\n  import { sendApi } from '@/utils/api'\r\n  const progress = ref(0)\r\n  const pdfUrl = ref('')\r\n  const MAX_FILE_SIZE_MB = 10\r\n  const props = defineProps({\r\n    toAction: String,\r\n    url: String\r\n  })\r\n  const onFileChange = (e) => {\r\n    const file = e.target.files[0]\r\n    if (!file) return\r\n    const sizeInMB = file.size / (1024 * 1024)\r\n    if (sizeInMB > MAX_FILE_SIZE_MB) {\r\n      alert(`اندازه فایل نباید بیشتر از ${MAX_FILE_SIZE_MB} مگابایت باشد`)\r\n      return\r\n    }\r\n    progress.value = 0\r\n    pdfUrl.value = ''\r\n    const reader = new FileReader()\r\n    reader.onprogress = (event) => {\r\n      if (event.lengthComputable) {\r\n        progress.value = (event.loaded / event.total) * 100\r\n      }\r\n    }\r\n    reader.onload = async () => {\r\n      const base64Data = reader.result\r\n      try {\r\n        const response = await sendApi(\r\n          {\r\n            action: 'upload_single_pdf',\r\n            data:{\r\n              data: base64Data,\r\n              url: props.url,\r\n              toAction:props.toAction,\r\n            },\r\n            control:'upload'\r\n          }\r\n        )\r\n        if (response.status === 'success' && response.url) {\r\n          pdfUrl.value = response.url\r\n        } else {\r\n          alert(response.message || 'آپلود موفق نبود')\r\n        }\r\n      } catch (err) {\r\n        console.error('خطا در آپلود:', err)\r\n        alert('خطا در ارسال PDF')\r\n      }\r\n    }\r\n    reader.onerror = (err) => {\r\n      console.error('خطا در خواندن فایل:', err)\r\n      alert('خطا در خواندن فایل PDF')\r\n    }\r\n    reader.readAsDataURL(file)\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.upload-box {\r\n  padding: 1rem;\r\n}\r\n.progress-bar-wrapper {\r\n  margin: 1rem 0;\r\n  width: 100%;\r\n  background: #ddd;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n.progress-bar {\r\n  height: 100%;\r\n  background: #4caf50;\r\n  transition: width 0.2s ease;\r\n}\r\n.progress-bar-wrapper p {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  margin: 0;\r\n  font-weight: bold;\r\n  color: #333;\r\n  line-height: 20px;\r\n}\r\n.preview {\r\n  margin-top: 1rem;\r\n}\r\n.pdf-link {\r\n  color: #2196f3;\r\n  text-decoration: underline;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;AAiBE,SAASA,GAAe,QAAQ,KAAK;AACrC,SAASC,OAAO,QAAQ,aAAa;AAGrC,MAAMC,gBAAgB,GAAG,EAAE;;;;;;;;IAF3B,MAAMC,QAAQ,GAAGH,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMI,MAAM,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAEtB,MAAMK,KAAK,GAAGC,OAGZ;IACF,MAAMC,YAAY,GAAIC,CAAC,IAAK;MAC1B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC9B,IAAI,CAACF,IAAI,EAAE;MACX,MAAMG,QAAQ,GAAGH,IAAI,CAACI,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC;MAC1C,IAAID,QAAQ,GAAGV,gBAAgB,EAAE;QAC/BY,KAAK,CAAC,8BAA8BZ,gBAAgB,eAAe,CAAC;QACpE;MACF;MACAC,QAAQ,CAACY,KAAK,GAAG,CAAC;MAClBX,MAAM,CAACW,KAAK,GAAG,EAAE;MACjB,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,UAAU,GAAIC,KAAK,IAAK;QAC7B,IAAIA,KAAK,CAACC,gBAAgB,EAAE;UAC1BjB,QAAQ,CAACY,KAAK,GAAII,KAAK,CAACE,MAAM,GAAGF,KAAK,CAACG,KAAK,GAAI,GAAG;QACrD;MACF,CAAC;MACDN,MAAM,CAACO,MAAM,GAAG,YAAY;QAC1B,MAAMC,UAAU,GAAGR,MAAM,CAACS,MAAM;QAChC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMzB,OAAO,CAC5B;YACE0B,MAAM,EAAE,mBAAmB;YAC3BC,IAAI,EAAC;cACHA,IAAI,EAAEJ,UAAU;cAChBK,GAAG,EAAExB,KAAK,CAACwB,GAAG;cACdC,QAAQ,EAACzB,KAAK,CAACyB;YACjB,CAAC;YACDC,OAAO,EAAC;UACV,CACF,CAAC;UACD,IAAIL,QAAQ,CAACM,MAAM,KAAK,SAAS,IAAIN,QAAQ,CAACG,GAAG,EAAE;YACjDzB,MAAM,CAACW,KAAK,GAAGW,QAAQ,CAACG,GAAG;UAC7B,CAAC,MAAM;YACLf,KAAK,CAACY,QAAQ,CAACO,OAAO,IAAI,iBAAiB,CAAC;UAC9C;QACF,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;UACnCpB,KAAK,CAAC,kBAAkB,CAAC;QAC3B;MACF,CAAC;MACDE,MAAM,CAACqB,OAAO,GAAIH,GAAG,IAAK;QACxBC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;QACzCpB,KAAK,CAAC,wBAAwB,CAAC;MACjC,CAAC;MACDE,MAAM,CAACsB,aAAa,CAAC7B,IAAI,CAAC;IAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}