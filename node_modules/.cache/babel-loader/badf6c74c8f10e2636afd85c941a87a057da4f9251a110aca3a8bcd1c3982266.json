{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { defineStore } from 'pinia';\nimport { ref } from 'vue';\nimport { sendApi } from '@/utils/api';\nexport const useCartableStore = defineStore('cartable', () => {\n  const allItems = ref([]);\n  const rule = ref(true);\n  const loading = ref(true);\n  const simplifyNews = items => Array.isArray(items) ? items.map(item => ({\n    id: item.id,\n    status: item.status,\n    updated_at: item.updated_at\n  })) : [];\n  const fetchCartables = async () => {\n    try {\n      const res = await sendApi({\n        control: 'news',\n        action: 'get_cartables'\n      });\n      if (res.status === 'success') {\n        const rawGroups = res.data || [];\n        allItems.value = rawGroups.map(group => {\n          const news = group.news;\n          const reports = group.report_list || [];\n          return {\n            id: news.id,\n            status: news.status,\n            updated_at: news.updated_at || '',\n            news: {\n              title: news.title || '',\n              description: news.description || '',\n              media: (news.news_media || []).map(m => ({\n                id: m.id,\n                url: m.url,\n                type: m.type\n              })),\n              address: {\n                address: news.address?.address || '',\n                lat: news.address?.lat || null,\n                long: news.address?.lon || null\n              },\n              news_user_name: news.user_name || '',\n              news_user_family: news.user_family || '',\n              news_user_phone: news.user_phone || '',\n              news_user_image_url: news.user_image_url || null,\n              category: news.category || []\n            },\n            reports: reports.map(r => ({\n              id: r.id,\n              description: r.description || '',\n              media: (r.report_media || []).map(m => ({\n                id: m.id,\n                url: m.url,\n                type: m.type\n              })),\n              user: {\n                name: r.user_name || '',\n                family: r.user_family || '',\n                phone: r.user_phone || '',\n                image: r.user_image_url || null\n              }\n            }))\n          };\n        });\n        rule.value = !!res.rule;\n      } else {\n        alert('خطا در دریافت اطلاعات: ' + res.message);\n      }\n    } catch (e) {\n      alert('خطا در ارتباط با سرور: ' + e.message);\n    }\n    loading.value = false;\n  };\n  const getCartableById = async id => {\n    try {\n      const res = await sendApi({\n        control: 'news',\n        action: 'get_cartable_by_id',\n        data: {\n          id\n        }\n      });\n      if (res.status === 'success' && res.data) {\n        const item = res.data;\n        return {\n          id: item.id,\n          has_rule: res.rule ?? false,\n          user: {\n            name: item.reporter_name || '',\n            family: item.reporter_family || '',\n            phone: item.reporter_phone || '',\n            image: item.reporter_user_image_url || null\n          },\n          news: {\n            description: item.news_description || '',\n            media: (item.news_media || []).map(m => ({\n              id: m.id,\n              url: m.url,\n              type: m.type\n            })),\n            address: {\n              address: item.address || '',\n              lat: item.address_lat || null,\n              long: item.address_lon || null\n            },\n            news_user_name: item.news_user_name || '',\n            news_user_family: item.news_user_family || '',\n            news_user_phone: item.news_user_phone || '',\n            news_user_image_url: item.news_user_image_url || null\n          },\n          report: {\n            description: item.report_description || '',\n            media: (item.report_media || []).map(m => ({\n              id: m.id,\n              url: m.url,\n              type: m.type\n            })),\n            created_at: item.created_at || '',\n            run_time: item.run_time || ''\n          },\n          category: (item.category || []).map(c => ({\n            id: c.id,\n            title: c.title\n          })),\n          status: item.status || '',\n          run_time: item.run_time || '',\n          created_at: item.created_at || '',\n          updated_at: item.updated_at || ''\n        };\n      } else {\n        alert('خطا در دریافت جزئیات: ' + res.message);\n        return null;\n      }\n    } catch (e) {\n      alert('خطا در ارتباط با سرور: ' + e.message);\n      return null;\n    }\n  };\n  const updateReport = async (id, description, mediaIds = []) => {\n    try {\n      const res = await sendApi({\n        control: 'news',\n        action: 'edit_report',\n        data: {\n          id,\n          description,\n          media_id: mediaIds\n        }\n      });\n      if (res.status === 'success') {\n        await fetchCartables(); // رفرش لیست\n        return true;\n      } else {\n        alert('خطا: ' + res.message);\n        return false;\n      }\n    } catch (e) {\n      alert('خطا در ارسال گزارش: ' + e.message);\n      return false;\n    }\n  };\n  return {\n    allItems,\n    loading,\n    rule,\n    fetchCartables,\n    getCartableById,\n    updateReport,\n    simplifyNews\n  };\n});","map":{"version":3,"names":["defineStore","ref","sendApi","useCartableStore","allItems","rule","loading","simplifyNews","items","Array","isArray","map","item","id","status","updated_at","fetchCartables","res","control","action","rawGroups","data","value","group","news","reports","report_list","title","description","media","news_media","m","url","type","address","lat","long","lon","news_user_name","user_name","news_user_family","user_family","news_user_phone","user_phone","news_user_image_url","user_image_url","category","r","report_media","user","name","family","phone","image","alert","message","e","getCartableById","has_rule","reporter_name","reporter_family","reporter_phone","reporter_user_image_url","news_description","address_lat","address_lon","report","report_description","created_at","run_time","c","updateReport","mediaIds","media_id"],"sources":["D:/GitHub/ci3-vue3/vue3/src/stores/cartable.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { ref } from 'vue'\r\nimport { sendApi } from '@/utils/api'\r\nexport const useCartableStore = defineStore('cartable', () => {\r\n  const allItems = ref([])\r\n  const rule = ref(true)\r\n  const loading = ref(true)\r\n  const simplifyNews = (items) => Array.isArray(items) ? items.map(item => ({\r\n    id: item.id,\r\n    status: item.status,\r\n    updated_at: item.updated_at\r\n  })): []\r\n  const fetchCartables = async () => {\r\n    try {\r\n      const res = await sendApi({ control: 'news', action: 'get_cartables' })\r\n      if (res.status === 'success') {\r\n        const rawGroups = res.data || []\r\n        allItems.value = rawGroups.map(group => {\r\n          const news = group.news\r\n          const reports = group.report_list || []\r\n          return {\r\n            id: news.id,\r\n            status: news.status,\r\n            updated_at: news.updated_at || '',\r\n            news: {\r\n              title: news.title || '',\r\n              description: news.description || '',\r\n              media: (news.news_media || []).map(m => ({\r\n                id: m.id,\r\n                url: m.url,\r\n                type: m.type\r\n              })),\r\n              address: {\r\n                address: news.address?.address || '',\r\n                lat: news.address?.lat || null,\r\n                long: news.address?.lon || null\r\n              },\r\n              news_user_name: news.user_name || '',\r\n              news_user_family: news.user_family || '',\r\n              news_user_phone: news.user_phone || '',\r\n              news_user_image_url: news.user_image_url || null,\r\n              category: news.category || []\r\n            },\r\n            reports: reports.map(r => ({\r\n              id: r.id,\r\n              description: r.description || '',\r\n              media: (r.report_media || []).map(m => ({\r\n                id: m.id,\r\n                url: m.url,\r\n                type: m.type\r\n              })),\r\n              user: {\r\n                name: r.user_name || '',\r\n                family: r.user_family || '',\r\n                phone: r.user_phone || '',\r\n                image: r.user_image_url || null\r\n              }\r\n            }))\r\n          }\r\n        })\r\n        rule.value = !!res.rule\r\n      } else {\r\n        alert('خطا در دریافت اطلاعات: ' + res.message)\r\n      }\r\n    } catch (e) {\r\n      alert('خطا در ارتباط با سرور: ' + e.message)\r\n    }\r\n    loading.value = false\r\n  }\r\n  const getCartableById = async (id) => {\r\n    try {\r\n      const res = await sendApi({\r\n        control: 'news',\r\n        action: 'get_cartable_by_id',\r\n        data: { id }\r\n      })\r\n      if (res.status === 'success' && res.data) {\r\n        const item = res.data\r\n        return {\r\n          id: item.id,\r\n          has_rule: res.rule ?? false,\r\n          user: {\r\n            name: item.reporter_name || '',\r\n            family: item.reporter_family || '',\r\n            phone: item.reporter_phone || '',\r\n            image: item.reporter_user_image_url || null\r\n          },\r\n          news: {\r\n            description: item.news_description || '',\r\n            media: (item.news_media || []).map(m => ({\r\n              id: m.id,\r\n              url: m.url,\r\n              type: m.type\r\n            })),\r\n            address: {\r\n              address: item.address || '',\r\n              lat: item.address_lat || null,\r\n              long: item.address_lon || null\r\n            },\r\n            news_user_name: item.news_user_name || '',\r\n            news_user_family: item.news_user_family || '',\r\n            news_user_phone: item.news_user_phone || '',\r\n            news_user_image_url: item.news_user_image_url || null\r\n          },\r\n          report: {\r\n            description: item.report_description || '',\r\n            media: (item.report_media || []).map(m => ({\r\n              id: m.id,\r\n              url: m.url,\r\n              type: m.type\r\n            })),\r\n            created_at: item.created_at || '',\r\n            run_time: item.run_time || ''\r\n          },\r\n          category: (item.category || []).map(c => ({\r\n            id: c.id,\r\n            title: c.title\r\n          })),\r\n          status: item.status || '',\r\n          run_time: item.run_time || '',\r\n          created_at: item.created_at || '',\r\n          updated_at: item.updated_at || ''\r\n        }\r\n      } else {\r\n        alert('خطا در دریافت جزئیات: ' + res.message)\r\n        return null\r\n      }\r\n    } catch (e) {\r\n      alert('خطا در ارتباط با سرور: ' + e.message)\r\n      return null\r\n    }\r\n  }\r\n  const updateReport = async (id, description, mediaIds = []) => {\r\n    try {\r\n      const res = await sendApi({\r\n        control: 'news',\r\n        action: 'edit_report',\r\n        data: {\r\n          id,\r\n          description,\r\n          media_id: mediaIds\r\n        }\r\n      })\r\n\r\n      if (res.status === 'success') {\r\n        await fetchCartables() // رفرش لیست\r\n        return true\r\n      } else {\r\n        alert('خطا: ' + res.message)\r\n        return false\r\n      }\r\n    } catch (e) {\r\n      alert('خطا در ارسال گزارش: ' + e.message)\r\n      return false\r\n    }\r\n  }\r\n  return {\r\n    allItems,\r\n    loading,\r\n    rule,\r\n    fetchCartables,\r\n    getCartableById,\r\n    updateReport,\r\n    simplifyNews\r\n  }\r\n})\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}