{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"msg\"\n};\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = {\n  key: 0\n};\nimport { ref, watch, onMounted, onUnmounted } from 'vue';\nimport { sendApi } from '@/utils/api';\nexport default {\n  __name: 'PhoneForm',\n  emits: ['success', 'valid'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const message = ref('');\n    const submitDisabled = ref(false);\n    const sentOnce = ref(false);\n    const showSend = ref(false);\n    const remainingTime = ref(0);\n    const emit = __emit;\n    const phone = ref('');\n    let interval = null;\n    watch(phone, async val => {\n      const isValid = /^09\\d{9}$/.test(val);\n      if (isValid && !sentOnce.value) {\n        try {\n          const response = await sendApi({\n            action: 'save_phone',\n            data: val,\n            control: 'login'\n          });\n          if (response.status === 'success') {\n            sentOnce.value = true;\n            showSend.value = true;\n            emit('valid', true);\n          }\n        } catch (e) {\n          console.error('خطا در ارسال شماره:', e);\n        }\n      } else if (!isValid && sentOnce.value) {\n        try {\n          const responseDel = await sendApi({\n            control: 'security',\n            action: 'delete_phone'\n          });\n          if (responseDel.status === 'success') {\n            sentOnce.value = false;\n            showSend.value = false;\n            emit('valid', false);\n          }\n        } catch (e) {\n          console.error('خطا در حذف شماره:', e);\n        }\n      }\n    });\n    const submitPhone = async () => {\n      if (submitDisabled.value) return;\n      try {\n        const response = await sendApi({\n          action: 'send_phone_login',\n          data: phone.value,\n          control: 'login'\n        });\n        if (response.status === 'success') {\n          message.value = 'شماره با موفقیت ارسال شد. لطفاً کد پیامکی را وارد کنید.';\n          sessionStorage.setItem('login_step', '2');\n          sessionStorage.setItem('phone', phone.value);\n          const now = Date.now();\n          const expireTime = now + 60000;\n          sessionStorage.setItem('resend_code_timer', expireTime);\n          startTimer();\n          emit('success', phone.value);\n          showSend.value = true;\n          sentOnce.value = true;\n        } else {\n          message.value = response.message || 'ارسال موفق نبود';\n        }\n      } catch (error) {\n        message.value = 'خطا در ارسال شماره.';\n        console.error(error);\n      }\n    };\n    const startTimer = () => {\n      const now = Date.now();\n      const expireTime = now + 30000;\n      sessionStorage.setItem('submit_phone_timer', expireTime);\n      updateRemainingTime();\n      interval = setInterval(updateRemainingTime, 1000);\n    };\n    const updateRemainingTime = () => {\n      submitDisabled.value = true;\n      const expireTime = parseInt(sessionStorage.getItem('submit_phone_timer') || 0);\n      const now = Date.now();\n      const diff = Math.ceil((expireTime - now) / 1000);\n      remainingTime.value = diff > 0 ? diff : 0;\n      if (remainingTime.value <= 0 && interval) {\n        submitDisabled.value = false;\n        clearInterval(interval);\n        interval = null;\n      }\n    };\n    onMounted(() => {\n      updateRemainingTime();\n      interval = setInterval(updateRemainingTime, 1000);\n    });\n    onUnmounted(() => {\n      if (interval) clearInterval(interval);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"form\", {\n        onSubmit: _withModifiers(submitPhone, [\"prevent\"])\n      }, [message.value ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString(message.value), 1)) : _createCommentVNode(\"\", true), _cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n        for: \"phone\"\n      }, \"شماره تلفن\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        id: \"phone\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => phone.value = $event),\n        type: \"tel\",\n        maxlength: \"11\",\n        pattern: \"[0-9]*\",\n        placeholder: \"09123456789\",\n        required: \"\"\n      }, null, 512), [[_vModelText, phone.value]]), showSend.value ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        disabled: submitDisabled.value,\n        type: \"submit\"\n      }, [_cache[1] || (_cache[1] = _createTextVNode(\" ارسال \")), submitDisabled.value ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"(\" + _toDisplayString(remainingTime.value) + \" ثانیه)\", 1)) : _createCommentVNode(\"\", true)], 8, _hoisted_2)) : _createCommentVNode(\"\", true)], 32);\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","onUnmounted","sendApi","message","submitDisabled","sentOnce","showSend","remainingTime","emit","__emit","phone","interval","val","isValid","test","value","response","action","data","control","status","e","console","error","responseDel","submitPhone","sessionStorage","setItem","now","Date","expireTime","startTimer","updateRemainingTime","setInterval","parseInt","getItem","diff","Math","ceil","clearInterval"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/home/PhoneLogin/PhoneForm.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"submitPhone\">\r\n        <p class=\"msg\" v-if=\"message\">{{ message }}</p>\r\n        <label for=\"phone\">شماره تلفن</label>\r\n        <input\r\n          id=\"phone\"\r\n          v-model=\"phone\"\r\n          type=\"tel\"\r\n          maxlength=\"11\"\r\n          pattern=\"[0-9]*\"\r\n          placeholder=\"09123456789\"\r\n          required\r\n        />\r\n        <button v-if=\"showSend\" :disabled=\"submitDisabled\" type=\"submit\">\r\n            ارسال\r\n            <span v-if=\"submitDisabled\">({{ remainingTime }} ثانیه)</span>\r\n        </button>\r\n    </form>\r\n</template>\r\n<script setup>\r\n    import { ref,watch,onMounted ,onUnmounted,defineEmits } from 'vue'\r\n    import { sendApi } from '@/utils/api'\r\n    const message=ref('')\r\n    const submitDisabled=ref(false)\r\n    const sentOnce=ref(false)\r\n    const showSend=ref(false)\r\n    const remainingTime=ref(0)\r\n    const emit = defineEmits(['success', 'valid'])\r\n    const phone=ref('')\r\n    let interval=null;\r\n    watch(phone,async (val) => {\r\n        const isValid = /^09\\d{9}$/.test(val)\r\n        if (isValid && !sentOnce.value) {\r\n            try {\r\n                const response = await sendApi({ \r\n                    action: 'save_phone',\r\n                    data: val,\r\n                    control:'login'\r\n                })\r\n                if (response.status === 'success') {\r\n                    sentOnce.value = true\r\n                    showSend.value = true\r\n                    emit('valid', true)\r\n                }\r\n            } catch (e) {\r\n                console.error('خطا در ارسال شماره:', e)\r\n            }\r\n        } else if (!isValid && sentOnce.value) {\r\n            try {\r\n                const responseDel = await sendApi({ \r\n                    control:'security',\r\n                    action: 'delete_phone'\r\n                })\r\n                if (responseDel.status === 'success') {\r\n                    sentOnce.value = false\r\n                    showSend.value = false\r\n                    emit('valid', false)\r\n                }\r\n            } catch (e) {\r\n                console.error('خطا در حذف شماره:', e)\r\n            }\r\n        }\r\n    })\r\n    const submitPhone= async () => {\r\n        if (submitDisabled.value) return\r\n        try {\r\n            const response = await sendApi({ \r\n                action: 'send_phone_login',\r\n                data: phone.value,\r\n                control:'login'\r\n            })\r\n            if (response.status === 'success') {\r\n                message.value = 'شماره با موفقیت ارسال شد. لطفاً کد پیامکی را وارد کنید.'\r\n                sessionStorage.setItem('login_step', '2')\r\n                sessionStorage.setItem('phone', phone.value)\r\n                const now = Date.now()\r\n                const expireTime = now + 60000 \r\n                sessionStorage.setItem('resend_code_timer', expireTime)\r\n                startTimer()\r\n                emit('success', phone.value)\r\n                showSend.value = true\r\n                sentOnce.value = true\r\n            } else {\r\n                message.value = response.message || 'ارسال موفق نبود'\r\n            }\r\n        } catch (error) {\r\n            message.value = 'خطا در ارسال شماره.'\r\n            console.error(error)\r\n        }\r\n    }\r\n    const startTimer = () => {\r\n        const now = Date.now()\r\n        const expireTime = now + 30000 \r\n        sessionStorage.setItem('submit_phone_timer', expireTime)\r\n        updateRemainingTime()\r\n        interval = setInterval(updateRemainingTime, 1000)\r\n    }\r\n    const updateRemainingTime = () => {\r\n        submitDisabled.value=true\r\n        const expireTime = parseInt(sessionStorage.getItem('submit_phone_timer') || 0)\r\n        const now = Date.now()\r\n        const diff = Math.ceil((expireTime - now) / 1000)\r\n        remainingTime.value = diff > 0 ? diff : 0\r\n        if (remainingTime.value <= 0 && interval) {\r\n            submitDisabled.value=false\r\n            clearInterval(interval)\r\n            interval = null\r\n        }\r\n    }\r\n    onMounted(() => {\r\n        updateRemainingTime()\r\n        interval = setInterval(updateRemainingTime, 1000)\r\n    })\r\n    onUnmounted(() => {\r\n        if (interval) clearInterval(interval)\r\n    })\r\n</script>\r\n<style scoped>\r\n    form {\r\n        width: 100%;\r\n    }\r\n    .msg{\r\n        border-radius: 10px;\r\n        background-color: #5e6295;\r\n        color: #fefff8;\r\n        padding: 10px;\r\n        text-align: center;\r\n        margin: 5px auto;\r\n    }\r\n    label,\r\n    input,\r\n    button {\r\n        display: block;\r\n        width: 100%;\r\n        margin-bottom: 10px;\r\n    }\r\n    label{\r\n        text-align: center;\r\n    }\r\n    button{\r\n        background-color: green;\r\n        color: white;\r\n        padding: 9px;\r\n        border-radius: 10px;\r\n        border: none;\r\n        margin-top: 10px;\r\n    }\r\n    button[disabled] {\r\n        opacity: 0.6;\r\n        background-color: rgb(143, 141, 141);\r\n        cursor: not-allowed;\r\n    }\r\n    input {\r\n        box-sizing: border-box;\r\n        padding: 7px;\r\n        border: none;\r\n        outline: none;\r\n        border-radius: 10px;\r\n        background-color: #edefff;\r\n    }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}