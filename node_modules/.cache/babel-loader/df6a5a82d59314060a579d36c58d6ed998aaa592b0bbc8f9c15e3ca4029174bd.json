{"ast":null,"code":"import { createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"transaction-list\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nimport { onMounted, onUnmounted, ref, computed } from 'vue';\nimport { useWalletStore } from '@/stores/wallet';\nconst perPage = 5;\nexport default {\n  __name: 'TransactionsSection',\n  setup(__props) {\n    const store = useWalletStore();\n    const currentPage = ref(1);\n    let pollingInterval = null;\n    const paginatedTransactions = computed(() => store.transactions.slice(0, currentPage.value * perPage));\n    const hasMore = computed(() => store.transactions.length > paginatedTransactions.value.length);\n    const loadMore = () => {\n      currentPage.value++;\n    };\n    const formatAmount = num => Number(num).toLocaleString('fa-IR');\n    const formatDate = datetime => new Date(datetime).toLocaleString('fa-IR');\n    const getStatus = status => {\n      switch (status) {\n        case 'do':\n          return 'انجام شده';\n        case 'dont':\n          return 'در انتظار';\n        default:\n          return 'نامشخص';\n      }\n    };\n    const getType = tx => {\n      // تشخیص این که کاربر پرداخت کرده یا دریافت\n      return tx.pay_money_user_account_id === store.userAccountId ? 'برداشت/خروج پول' : 'دریافت/ورود پول';\n    };\n    const startPolling = () => {\n      if (pollingInterval) return;\n      store.fetchTransactions();\n      pollingInterval = setInterval(() => {\n        store.fetchTransactions();\n      }, 10000);\n    };\n    const stopPolling = () => {\n      clearInterval(pollingInterval);\n      pollingInterval = null;\n    };\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        startPolling();\n      } else {\n        stopPolling();\n      }\n    };\n    onMounted(() => {\n      document.addEventListener('visibilitychange', handleVisibilityChange);\n      if (document.visibilityState === 'visible') {\n        startPolling();\n      }\n    });\n    onUnmounted(() => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      stopPolling();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"لیست تراکنش‌ها\", -1)), _unref(store).transactions.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"تراکنشی وجود ندارد.\")) : _createCommentVNode(\"\", true), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(paginatedTransactions.value, tx => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: tx.id,\n          class: \"transaction-item\"\n        }, [_createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"مبلغ:\", -1)), _createTextVNode(\" \" + _toDisplayString(formatAmount(tx.amount)) + \" تومان\", 1)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"نوع:\", -1)), _createTextVNode(\" \" + _toDisplayString(getType(tx)), 1)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"کارت مقصد:\", -1)), _createTextVNode(\" \" + _toDisplayString(tx.give_money_user_cart_id || '---'), 1)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"وضعیت:\", -1)), _createTextVNode(\" \" + _toDisplayString(getStatus(tx.status)), 1)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"تاریخ:\", -1)), _createTextVNode(\" \" + _toDisplayString(formatDate(tx.created_at)), 1)])]);\n      }), 128))]), hasMore.value ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        onClick: loadMore\n      }, \"نمایش بیشتر\")) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["onMounted","onUnmounted","ref","computed","useWalletStore","perPage","store","currentPage","pollingInterval","paginatedTransactions","transactions","slice","value","hasMore","length","loadMore","formatAmount","num","Number","toLocaleString","formatDate","datetime","Date","getStatus","status","getType","tx","pay_money_user_account_id","userAccountId","startPolling","fetchTransactions","setInterval","stopPolling","clearInterval","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/dashboard/pagesContent/wallet/TransactionsSection.vue"],"sourcesContent":["<template>\r\n  <div class=\"transaction-list\">\r\n    <h3>لیست تراکنش‌ها</h3>\r\n\r\n    <div v-if=\"store.transactions.length === 0\">تراکنشی وجود ندارد.</div>\r\n\r\n    <ul>\r\n      <li v-for=\"tx in paginatedTransactions\" :key=\"tx.id\" class=\"transaction-item\">\r\n        <p><strong>مبلغ:</strong> {{ formatAmount(tx.amount) }} تومان</p>\r\n        <p><strong>نوع:</strong> {{ getType(tx) }}</p>\r\n        <p><strong>کارت مقصد:</strong> {{ tx.give_money_user_cart_id || '---' }}</p>\r\n        <p><strong>وضعیت:</strong> {{ getStatus(tx.status) }}</p>\r\n        <p><strong>تاریخ:</strong> {{ formatDate(tx.created_at) }}</p>\r\n      </li>\r\n    </ul>\r\n\r\n    <button v-if=\"hasMore\" @click=\"loadMore\">نمایش بیشتر</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, onUnmounted, ref, computed } from 'vue'\r\nimport { useWalletStore } from '@/stores/wallet'\r\nconst store = useWalletStore()\r\nconst currentPage = ref(1)\r\nconst perPage = 5\r\nlet pollingInterval = null\r\n\r\nconst paginatedTransactions = computed(() =>\r\n  store.transactions.slice(0, currentPage.value * perPage)\r\n)\r\n\r\nconst hasMore = computed(() =>\r\n  store.transactions.length > paginatedTransactions.value.length\r\n)\r\n\r\nconst loadMore = () => {\r\n  currentPage.value++\r\n}\r\n\r\nconst formatAmount = (num) =>\r\n  Number(num).toLocaleString('fa-IR')\r\n\r\nconst formatDate = (datetime) =>\r\n  new Date(datetime).toLocaleString('fa-IR')\r\n\r\nconst getStatus = (status) => {\r\n  switch (status) {\r\n    case 'do': return 'انجام شده'\r\n    case 'dont': return 'در انتظار'\r\n    default: return 'نامشخص'\r\n  }\r\n}\r\n\r\nconst getType = (tx) => {\r\n  // تشخیص این که کاربر پرداخت کرده یا دریافت\r\n  return tx.pay_money_user_account_id === store.userAccountId\r\n    ? 'برداشت/خروج پول'\r\n    : 'دریافت/ورود پول'\r\n}\r\n\r\nconst startPolling = () => {\r\n  if (pollingInterval) return\r\n  store.fetchTransactions()\r\n  pollingInterval = setInterval(() => {\r\n    store.fetchTransactions()\r\n  }, 10000)\r\n}\r\n\r\nconst stopPolling = () => {\r\n  clearInterval(pollingInterval)\r\n  pollingInterval = null\r\n}\r\n\r\nconst handleVisibilityChange = () => {\r\n  if (document.visibilityState === 'visible') {\r\n    startPolling()\r\n  } else {\r\n    stopPolling()\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  document.addEventListener('visibilitychange', handleVisibilityChange)\r\n  if (document.visibilityState === 'visible') {\r\n    startPolling()\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n  stopPolling()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.transaction-list {\r\n  padding: 1rem;\r\n}\r\n.transaction-item {\r\n  border: 1px solid #ddd;\r\n  padding: 0.75rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;AAqBA,SAASA,SAAS,EAAEC,WAAW,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AAC3D,SAASC,cAAc,QAAQ,iBAAiB;AAGhD,MAAMC,OAAO,GAAG,CAAC;;;;IAFjB,MAAMC,KAAK,GAAGF,cAAc,CAAC,CAAC;IAC9B,MAAMG,WAAW,GAAGL,GAAG,CAAC,CAAC,CAAC;IAE1B,IAAIM,eAAe,GAAG,IAAI;IAE1B,MAAMC,qBAAqB,GAAGN,QAAQ,CAAC,MACrCG,KAAK,CAACI,YAAY,CAACC,KAAK,CAAC,CAAC,EAAEJ,WAAW,CAACK,KAAK,GAAGP,OAAO,CACzD,CAAC;IAED,MAAMQ,OAAO,GAAGV,QAAQ,CAAC,MACvBG,KAAK,CAACI,YAAY,CAACI,MAAM,GAAGL,qBAAqB,CAACG,KAAK,CAACE,MAC1D,CAAC;IAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACrBR,WAAW,CAACK,KAAK,EAAE;IACrB,CAAC;IAED,MAAMI,YAAY,GAAIC,GAAG,IACvBC,MAAM,CAACD,GAAG,CAAC,CAACE,cAAc,CAAC,OAAO,CAAC;IAErC,MAAMC,UAAU,GAAIC,QAAQ,IAC1B,IAAIC,IAAI,CAACD,QAAQ,CAAC,CAACF,cAAc,CAAC,OAAO,CAAC;IAE5C,MAAMI,SAAS,GAAIC,MAAM,IAAK;MAC5B,QAAQA,MAAM;QACZ,KAAK,IAAI;UAAE,OAAO,WAAW;QAC7B,KAAK,MAAM;UAAE,OAAO,WAAW;QAC/B;UAAS,OAAO,QAAQ;MAC1B;IACF,CAAC;IAED,MAAMC,OAAO,GAAIC,EAAE,IAAK;MACtB;MACA,OAAOA,EAAE,CAACC,yBAAyB,KAAKrB,KAAK,CAACsB,aAAa,GACvD,iBAAiB,GACjB,iBAAiB;IACvB,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIrB,eAAe,EAAE;MACrBF,KAAK,CAACwB,iBAAiB,CAAC,CAAC;MACzBtB,eAAe,GAAGuB,WAAW,CAAC,MAAM;QAClCzB,KAAK,CAACwB,iBAAiB,CAAC,CAAC;MAC3B,CAAC,EAAE,KAAK,CAAC;IACX,CAAC;IAED,MAAME,WAAW,GAAGA,CAAA,KAAM;MACxBC,aAAa,CAACzB,eAAe,CAAC;MAC9BA,eAAe,GAAG,IAAI;IACxB,CAAC;IAED,MAAM0B,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAIC,QAAQ,CAACC,eAAe,KAAK,SAAS,EAAE;QAC1CP,YAAY,CAAC,CAAC;MAChB,CAAC,MAAM;QACLG,WAAW,CAAC,CAAC;MACf;IACF,CAAC;IAEDhC,SAAS,CAAC,MAAM;MACdmC,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,EAAEH,sBAAsB,CAAC;MACrE,IAAIC,QAAQ,CAACC,eAAe,KAAK,SAAS,EAAE;QAC1CP,YAAY,CAAC,CAAC;MAChB;IACF,CAAC,CAAC;IAEF5B,WAAW,CAAC,MAAM;MAChBkC,QAAQ,CAACG,mBAAmB,CAAC,kBAAkB,EAAEJ,sBAAsB,CAAC;MACxEF,WAAW,CAAC,CAAC;IACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}