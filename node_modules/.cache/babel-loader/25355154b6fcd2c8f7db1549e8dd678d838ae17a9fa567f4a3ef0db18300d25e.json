{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nimport { ref, onMounted } from 'vue';\nimport { sendApi } from '@/utils/api';\nexport default {\n  __name: 'TransactionsSection',\n  setup(__props) {\n    const transactions = ref([]);\n    const loading = ref(false);\n    const loadTransactions = async () => {\n      loading.value = true;\n      try {\n        const res = await sendApi({\n          control: 'wallet',\n          action: 'transactions'\n        });\n        if (res.status === 'success') {\n          transactions.value = res.data;\n        } else {\n          alert('خطا در بارگذاری تراکنش‌ها: ' + res.message);\n        }\n      } catch (error) {\n        alert('خطا در ارتباط با سرور: ' + error.message);\n      }\n      loading.value = false;\n    };\n    onMounted(() => {\n      loadTransactions();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"section\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"تراکنش‌ها\", -1)), loading.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"در حال بارگذاری تراکنش‌ها...\")) : (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(transactions.value, tx => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: tx.id\n        }, _toDisplayString(tx.description) + \" - مبلغ: \" + _toDisplayString(tx.amount) + \" تومان - تاریخ: \" + _toDisplayString(tx.date), 1);\n      }), 128))]))]);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","sendApi","transactions","loading","loadTransactions","value","res","control","action","status","data","alert","message","error"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/dashboard/pagesContent/wallet/TransactionsSection.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <h2>تراکنش‌ها</h2>\r\n    <div v-if=\"loading\">در حال بارگذاری تراکنش‌ها...</div>\r\n    <ul v-else>\r\n      <li v-for=\"tx in transactions\" :key=\"tx.id\">\r\n        {{ tx.description }} - مبلغ: {{ tx.amount }} تومان - تاریخ: {{ tx.date }}\r\n      </li>\r\n    </ul>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { sendApi } from '@/utils/api'\r\n\r\nconst transactions = ref([])\r\nconst loading = ref(false)\r\n\r\nconst loadTransactions = async () => {\r\n  loading.value = true\r\n  try {\r\n    const res = await sendApi({ control: 'wallet', action: 'transactions' })\r\n    if (res.status === 'success') {\r\n      transactions.value = res.data\r\n    } else {\r\n      alert('خطا در بارگذاری تراکنش‌ها: ' + res.message)\r\n    }\r\n  } catch (error) {\r\n    alert('خطا در ارتباط با سرور: ' + error.message)\r\n  }\r\n  loading.value = false\r\n}\r\n\r\nonMounted(() => {\r\n  loadTransactions()\r\n})\r\n</script>\r\n"],"mappings":";;;;;;;AAaA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,OAAO,QAAQ,aAAa;;;;IAErC,MAAMC,YAAY,GAAGH,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMI,OAAO,GAAGJ,GAAG,CAAC,KAAK,CAAC;IAE1B,MAAMK,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnCD,OAAO,CAACE,KAAK,GAAG,IAAI;MACpB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAML,OAAO,CAAC;UAAEM,OAAO,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAe,CAAC,CAAC;QACxE,IAAIF,GAAG,CAACG,MAAM,KAAK,SAAS,EAAE;UAC5BP,YAAY,CAACG,KAAK,GAAGC,GAAG,CAACI,IAAI;QAC/B,CAAC,MAAM;UACLC,KAAK,CAAC,6BAA6B,GAAGL,GAAG,CAACM,OAAO,CAAC;QACpD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,KAAK,CAAC,yBAAyB,GAAGE,KAAK,CAACD,OAAO,CAAC;MAClD;MACAT,OAAO,CAACE,KAAK,GAAG,KAAK;IACvB,CAAC;IAEDL,SAAS,CAAC,MAAM;MACdI,gBAAgB,CAAC,CAAC;IACpB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}