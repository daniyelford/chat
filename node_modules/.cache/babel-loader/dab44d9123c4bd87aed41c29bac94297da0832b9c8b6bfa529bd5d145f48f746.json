{"ast":null,"code":"import { ref, onMounted, onBeforeUnmount } from 'vue';\nexport function usePollingWithCompare(fetchFn, {\n  intervalMs = 6000,\n  runOnStart = true,\n  isDifferent = (oldData, newData) => JSON.stringify(oldData) !== JSON.stringify(newData),\n  onChange = () => {}\n} = {}) {\n  const intervalId = ref(null);\n  const lastData = ref(null);\n  const poll = async () => {\n    try {\n      const result = await fetchFn();\n      if (isDifferent(lastData.value, result)) {\n        lastData.value = result;\n        onChange(result);\n      }\n    } catch (err) {\n      console.error('Polling error:', err);\n    }\n  };\n  const startPolling = () => {\n    stopPolling();\n    intervalId.value = setInterval(() => {\n      poll();\n    }, intervalMs);\n  };\n  const stopPolling = () => {\n    if (intervalId.value) {\n      clearInterval(intervalId.value);\n      intervalId.value = null;\n    }\n  };\n  const handleVisibilityChange = () => {\n    if (document.visibilityState === 'visible') {\n      if (runOnStart) poll();\n      startPolling();\n    } else {\n      stopPolling();\n    }\n  };\n  onMounted(() => {\n    if (runOnStart) poll();\n    startPolling();\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n  });\n  onBeforeUnmount(() => {\n    stopPolling();\n    document.removeEventListener('visibilitychange', handleVisibilityChange);\n  });\n  return {\n    startPolling,\n    stopPolling,\n    lastData\n  };\n}","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","usePollingWithCompare","fetchFn","intervalMs","runOnStart","isDifferent","oldData","newData","JSON","stringify","onChange","intervalId","lastData","poll","result","value","err","console","error","startPolling","stopPolling","setInterval","clearInterval","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener"],"sources":["D:/GitHub/chat/vue3/src/composables/usePollingWithCompare.js"],"sourcesContent":["import { ref, onMounted, onBeforeUnmount } from 'vue'\r\n\r\nexport function usePollingWithCompare(fetchFn, {\r\n    intervalMs = 6000,\r\n    runOnStart = true,\r\n    isDifferent = (oldData, newData) => JSON.stringify(oldData) !== JSON.stringify(newData),\r\n    onChange = () => {},\r\n} = {}) {\r\n    const intervalId = ref(null)\r\n    const lastData = ref(null)\r\n\r\n    const poll = async () => {\r\n        try {\r\n            const result = await fetchFn()\r\n            if (isDifferent(lastData.value, result)) {\r\n                lastData.value = result\r\n                onChange(result)\r\n            }\r\n        } catch (err) {\r\n            console.error('Polling error:', err)\r\n        }\r\n    }\r\n\r\n    const startPolling = () => {\r\n        stopPolling()\r\n        intervalId.value = setInterval(() => {\r\n            poll()\r\n        }, intervalMs)\r\n    }\r\n\r\n    const stopPolling = () => {\r\n        if (intervalId.value) {\r\n            clearInterval(intervalId.value)\r\n            intervalId.value = null\r\n        }\r\n    }\r\n\r\n    const handleVisibilityChange = () => {\r\n        if (document.visibilityState === 'visible') {\r\n            if (runOnStart) poll()\r\n            startPolling()\r\n        } else {\r\n            stopPolling()\r\n        }\r\n    }\r\n\r\n    onMounted(() => {\r\n        if (runOnStart) poll()\r\n        startPolling()\r\n        document.addEventListener('visibilitychange', handleVisibilityChange)\r\n    })\r\n\r\n    onBeforeUnmount(() => {\r\n        stopPolling()\r\n        document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n    })\r\n\r\n    return {\r\n        startPolling,\r\n        stopPolling,\r\n        lastData,\r\n    }\r\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,EAAEC,eAAe,QAAQ,KAAK;AAErD,OAAO,SAASC,qBAAqBA,CAACC,OAAO,EAAE;EAC3CC,UAAU,GAAG,IAAI;EACjBC,UAAU,GAAG,IAAI;EACjBC,WAAW,GAAGA,CAACC,OAAO,EAAEC,OAAO,KAAKC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,KAAKE,IAAI,CAACC,SAAS,CAACF,OAAO,CAAC;EACvFG,QAAQ,GAAGA,CAAA,KAAM,CAAC;AACtB,CAAC,GAAG,CAAC,CAAC,EAAE;EACJ,MAAMC,UAAU,GAAGb,GAAG,CAAC,IAAI,CAAC;EAC5B,MAAMc,QAAQ,GAAGd,GAAG,CAAC,IAAI,CAAC;EAE1B,MAAMe,IAAI,GAAG,MAAAA,CAAA,KAAY;IACrB,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMZ,OAAO,CAAC,CAAC;MAC9B,IAAIG,WAAW,CAACO,QAAQ,CAACG,KAAK,EAAED,MAAM,CAAC,EAAE;QACrCF,QAAQ,CAACG,KAAK,GAAGD,MAAM;QACvBJ,QAAQ,CAACI,MAAM,CAAC;MACpB;IACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;IACxC;EACJ,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvBC,WAAW,CAAC,CAAC;IACbT,UAAU,CAACI,KAAK,GAAGM,WAAW,CAAC,MAAM;MACjCR,IAAI,CAAC,CAAC;IACV,CAAC,EAAEV,UAAU,CAAC;EAClB,CAAC;EAED,MAAMiB,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIT,UAAU,CAACI,KAAK,EAAE;MAClBO,aAAa,CAACX,UAAU,CAACI,KAAK,CAAC;MAC/BJ,UAAU,CAACI,KAAK,GAAG,IAAI;IAC3B;EACJ,CAAC;EAED,MAAMQ,sBAAsB,GAAGA,CAAA,KAAM;IACjC,IAAIC,QAAQ,CAACC,eAAe,KAAK,SAAS,EAAE;MACxC,IAAIrB,UAAU,EAAES,IAAI,CAAC,CAAC;MACtBM,YAAY,CAAC,CAAC;IAClB,CAAC,MAAM;MACHC,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZ,IAAIK,UAAU,EAAES,IAAI,CAAC,CAAC;IACtBM,YAAY,CAAC,CAAC;IACdK,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,EAAEH,sBAAsB,CAAC;EACzE,CAAC,CAAC;EAEFvB,eAAe,CAAC,MAAM;IAClBoB,WAAW,CAAC,CAAC;IACbI,QAAQ,CAACG,mBAAmB,CAAC,kBAAkB,EAAEJ,sBAAsB,CAAC;EAC5E,CAAC,CAAC;EAEF,OAAO;IACHJ,YAAY;IACZC,WAAW;IACXR;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}