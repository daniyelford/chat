{"ast":null,"code":"import { sendApi } from \"@/utils/api\";\nimport { urlBase64ToUint8Array } from '@/utils/urlBase64ToUint8Array';\nconst publicVapidKey = 'BCqO9cq0iSx7R9EDVULhIo7MmNVvTjFnX4KxouSlzNvU9aY56i6hWXt6_DHeJw9YSQjQw_c-_B9_1I6ImTMGavI';\nexport async function subscribeToPush() {\n  if ('serviceWorker' in navigator && 'PushManager' in window) {\n    try {\n      const registration = await navigator.serviceWorker.ready;\n      const subscription = await registration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n      });\n      const response = await sendApi({\n        control: 'security',\n        action: 'subscribe',\n        data: subscription\n      });\n      if (!response.status !== 'success') throw new Error('Server failed to save subscription');\n      console.log('✅ Subscription sent to server.');\n    } catch (error) {\n      console.error('❌ Push Subscription Error:', error);\n    }\n  } else {\n    console.warn('❌ Push not supported in this browser.');\n  }\n}\n// import { initializeApp } from \"firebase/app\";\n// import { getMessaging, getToken, onMessage } from \"firebase/messaging\";\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyBXi3PuKCT1MWX19mA217DwuZ9rzOoPkNQ\",\n//   authDomain: \"news-4b9d0.firebaseapp.com\",\n//   projectId: \"news-4b9d0\",\n//   storageBucket: \"news-4b9d0.firebasestorage.app\",\n//   messagingSenderId: \"628286648570\",\n//   appId: \"1:628286648570:web:0d8246bce554f5ce595943\",\n//   measurementId: \"G-F0MC6LKRPW\"\n// };\n// const app = initializeApp(firebaseConfig);\n// const messaging = getMessaging(app);\n\n// export function requestPermissionAndGetToken() {\n//   return getToken(messaging, {\n//     vapidKey: \"Qc0NCwgka7W8ICz7__Cgv6_bnA_Lj5itqUVU6vhb4Ak\"\n//   });\n// }\n\n// export function listenForMessages(callback) {\n//   onMessage(messaging, callback);\n// }","map":{"version":3,"names":["sendApi","urlBase64ToUint8Array","publicVapidKey","subscribeToPush","navigator","window","registration","serviceWorker","ready","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","response","control","action","data","status","Error","console","log","error","warn"],"sources":["D:/GitHub/ci3-vue3/vue3/src/utils/pushService.js"],"sourcesContent":["import { sendApi } from \"@/utils/api\";\r\nimport { urlBase64ToUint8Array } from '@/utils/urlBase64ToUint8Array';\r\nconst publicVapidKey = 'BCqO9cq0iSx7R9EDVULhIo7MmNVvTjFnX4KxouSlzNvU9aY56i6hWXt6_DHeJw9YSQjQw_c-_B9_1I6ImTMGavI';\r\n\r\nexport async function subscribeToPush() {\r\n  if ('serviceWorker' in navigator && 'PushManager' in window) {\r\n    try {\r\n      const registration = await navigator.serviceWorker.ready;\r\n      const subscription = await registration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n      });\r\n      const response = await sendApi({ control: 'security', action: 'subscribe', data:subscription })\r\n      if (!response.status!=='success') throw new Error('Server failed to save subscription');\r\n      console.log('✅ Subscription sent to server.');\r\n    } catch (error) {\r\n      console.error('❌ Push Subscription Error:', error);\r\n    }\r\n  } else {\r\n    console.warn('❌ Push not supported in this browser.');\r\n  }\r\n}\r\n// import { initializeApp } from \"firebase/app\";\r\n// import { getMessaging, getToken, onMessage } from \"firebase/messaging\";\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyBXi3PuKCT1MWX19mA217DwuZ9rzOoPkNQ\",\r\n//   authDomain: \"news-4b9d0.firebaseapp.com\",\r\n//   projectId: \"news-4b9d0\",\r\n//   storageBucket: \"news-4b9d0.firebasestorage.app\",\r\n//   messagingSenderId: \"628286648570\",\r\n//   appId: \"1:628286648570:web:0d8246bce554f5ce595943\",\r\n//   measurementId: \"G-F0MC6LKRPW\"\r\n// };\r\n// const app = initializeApp(firebaseConfig);\r\n// const messaging = getMessaging(app);\r\n\r\n// export function requestPermissionAndGetToken() {\r\n//   return getToken(messaging, {\r\n//     vapidKey: \"Qc0NCwgka7W8ICz7__Cgv6_bnA_Lj5itqUVU6vhb4Ak\"\r\n//   });\r\n// }\r\n\r\n// export function listenForMessages(callback) {\r\n//   onMessage(messaging, callback);\r\n// }"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,MAAMC,cAAc,GAAG,yFAAyF;AAEhH,OAAO,eAAeC,eAAeA,CAAA,EAAG;EACtC,IAAI,eAAe,IAAIC,SAAS,IAAI,aAAa,IAAIC,MAAM,EAAE;IAC3D,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMF,SAAS,CAACG,aAAa,CAACC,KAAK;MACxD,MAAMC,YAAY,GAAG,MAAMH,YAAY,CAACI,WAAW,CAACC,SAAS,CAAC;QAC5DC,eAAe,EAAE,IAAI;QACrBC,oBAAoB,EAAEZ,qBAAqB,CAACC,cAAc;MAC5D,CAAC,CAAC;MACF,MAAMY,QAAQ,GAAG,MAAMd,OAAO,CAAC;QAAEe,OAAO,EAAE,UAAU;QAAEC,MAAM,EAAE,WAAW;QAAEC,IAAI,EAACR;MAAa,CAAC,CAAC;MAC/F,IAAI,CAACK,QAAQ,CAACI,MAAM,KAAG,SAAS,EAAE,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;MACvFC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC,MAAM;IACLF,OAAO,CAACG,IAAI,CAAC,uCAAuC,CAAC;EACvD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}