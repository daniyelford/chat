{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport { onMounted } from 'vue';\nimport { BASE_URL } from '@/config';\nexport default {\n  __name: 'App',\n  setup(__props) {\n    onMounted(() => {\n      if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.register(`${BASE_URL}/assets/sw.js`).then(reg => {\n          console.log('SW registered:', reg);\n        }).catch(err => {\n          console.error('SW registration failed:', err);\n        });\n      }\n    });\n    return (_ctx, _cache) => {\n      const _component_router_view = _resolveComponent(\"router-view\");\n      return _openBlock(), _createBlock(_component_router_view);\n    };\n  }\n};","map":{"version":3,"names":["onMounted","BASE_URL","navigator","serviceWorker","register","then","reg","console","log","catch","err","error"],"sources":["D:/GitHub/ci3-vue3/vue3/src/App.vue"],"sourcesContent":["<template>\r\n  <router-view />\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted } from 'vue';\r\nimport { BASE_URL } from '@/config';\r\n\r\nonMounted(() => {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register(`${BASE_URL}/assets/sw.js`)\r\n      .then(reg => {\r\n        console.log('SW registered:', reg);\r\n      })\r\n      .catch(err => {\r\n        console.error('SW registration failed:', err);\r\n      });\r\n  }\r\n});\r\n</script>\r\n"],"mappings":";AAKA,SAASA,SAAS,QAAQ,KAAK;AAC/B,SAASC,QAAQ,QAAQ,UAAU;;;;IAEnCD,SAAS,CAAC,MAAM;MACd,IAAI,eAAe,IAAIE,SAAS,EAAE;QAChCA,SAAS,CAACC,aAAa,CAACC,QAAQ,CAAC,GAAGH,QAAQ,eAAe,CAAC,CACzDI,IAAI,CAACC,GAAG,IAAI;UACXC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,GAAG,CAAC;QACpC,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAI;UACZH,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAED,GAAG,CAAC;QAC/C,CAAC,CAAC;MACN;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}