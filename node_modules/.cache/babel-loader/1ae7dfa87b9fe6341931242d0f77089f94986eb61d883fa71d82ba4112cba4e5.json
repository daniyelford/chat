{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"section\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nimport { ref, watch, computed } from 'vue';\nimport RadioGroup from '@/components/tooles/news/address/RadioGroup.vue';\nimport MapPicker from '@/components/tooles/news/address/MapPicker.vue';\nimport { fullAddress } from '@/utils/geo';\nexport default {\n  __name: 'AddressSelector ',\n  props: {\n    loginCity: String,\n    modelValue: Object\n  },\n  emits: ['update', 'loading'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const emit = __emit;\n    const props = __props;\n    const addressModes = computed(() => [{\n      id: 'city',\n      label: `شهر فعلی ${props.loginCity || ''}`\n    }, {\n      id: 'location',\n      label: 'انتخاب از نقشه'\n    }]);\n    const selectedMode = ref(props.modelValue?.type || 'city');\n    const location = ref(props.modelValue?.value || {\n      lat: '',\n      lng: '',\n      address: ''\n    });\n    const loading = ref(false);\n    const handleMapSelect = async ({\n      lat,\n      lng\n    }) => {\n      location.value.lat = lat;\n      location.value.lng = lng;\n      loading.value = true;\n      try {\n        const result = await fullAddress(lat, lng);\n        location.value.total = result || '';\n        location.value.address = result.display_name || '';\n        emit('update', {\n          type: 'location',\n          value: location.value\n        });\n      } catch (e) {\n        location.value.address = 'خطا در دریافت آدرس';\n      } finally {\n        loading.value = false;\n      }\n    };\n    watch([selectedMode, location], () => {\n      let value = null;\n      if (selectedMode.value === 'city') {\n        value = {\n          type: 'city',\n          value: props.loginCity\n        };\n      } else if (selectedMode.value === 'location') {\n        value = {\n          type: 'location',\n          value: location.value\n        };\n      }\n      emit('update', value);\n    });\n    watch(loading, () => {\n      emit('loading', loading.value);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n        class: \"address-label\"\n      }, \"نوع آدرس:\", -1)), _createVNode(RadioGroup, {\n        modelValue: selectedMode.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => selectedMode.value = $event),\n        options: addressModes.value,\n        name: \"address-mode\"\n      }, null, 8, [\"modelValue\", \"options\"]), selectedMode.value === 'location' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n        class: \"text\"\n      }, \"موقعیت مکانی:\", -1)), _createVNode(MapPicker, {\n        onPick: handleMapSelect\n      }), loading.value ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"در حال دریافت آدرس از نقشه...\")) : _createCommentVNode(\"\", true), !loading.value ? _withDirectives((_openBlock(), _createElementBlock(\"textarea\", {\n        key: 1,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => location.value.address = $event),\n        rows: \"3\",\n        class: \"textarea\",\n        placeholder: \"آدرس انتخاب ‌شده را کامل کنید...\"\n      }, \"      \", 512)), [[_vModelText, location.value.address]]) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","computed","RadioGroup","MapPicker","fullAddress","emit","__emit","props","__props","addressModes","id","label","loginCity","selectedMode","modelValue","type","location","value","lat","lng","address","loading","handleMapSelect","result","total","display_name","e"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/tooles/news/AddressSelector .vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label class=\"address-label\">نوع آدرس:</label>\r\n    <RadioGroup\r\n      v-model=\"selectedMode\"\r\n      :options=\"addressModes\"\r\n      name=\"address-mode\"\r\n    />\r\n    <div class=\"section\" v-if=\"selectedMode === 'location'\">\r\n      <label class=\"text\">موقعیت مکانی:</label>\r\n      <MapPicker @pick=\"handleMapSelect\" />\r\n      <p v-if=\"loading\">در حال دریافت آدرس از نقشه...</p>\r\n      <textarea\r\n        v-if=\"!loading\"\r\n        v-model=\"location.address\"\r\n        rows=\"3\"\r\n        class=\"textarea\"\r\n        placeholder=\"آدرس انتخاب ‌شده را کامل کنید...\">\r\n      </textarea>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\n  import { ref, watch, defineEmits, defineProps, computed } from 'vue'\r\n  import RadioGroup from '@/components/tooles/news/address/RadioGroup.vue'\r\n  import MapPicker from '@/components/tooles/news/address/MapPicker.vue'\r\n  import { fullAddress } from '@/utils/geo'\r\n  const emit = defineEmits(['update','loading'])\r\n  const props = defineProps({\r\n    loginCity: String,\r\n    modelValue: Object,\r\n  })\r\n  const addressModes = computed(() => [\r\n    { id: 'city', label: `شهر فعلی ${props.loginCity || ''}` },\r\n    { id: 'location', label: 'انتخاب از نقشه' },\r\n  ])\r\n  const selectedMode = ref(props.modelValue?.type || 'city')\r\n  const location = ref(props.modelValue?.value || { lat: '', lng: '', address: '' })\r\n  const loading = ref(false)\r\n  const handleMapSelect = async ({ lat, lng }) => {\r\n    location.value.lat = lat\r\n    location.value.lng = lng\r\n    loading.value = true\r\n    try {\r\n      const result = await fullAddress(lat, lng)\r\n      location.value.total = result || ''\r\n      location.value.address = result.display_name || ''\r\n      emit('update', { type: 'location', value: location.value })\r\n    } catch (e) {\r\n      location.value.address = 'خطا در دریافت آدرس'\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n  watch([selectedMode, location], () => {\r\n    let value = null\r\n    if (selectedMode.value === 'city') {\r\n      value = { type: 'city', value: props.loginCity }\r\n    } else if (selectedMode.value === 'location') {\r\n      value = { type: 'location', value: location.value }\r\n    }\r\n    emit('update', value)\r\n  })\r\n  watch(loading, () => {\r\n    emit('loading', loading.value)\r\n  })\r\n</script>\r\n\r\n<style scoped>\r\n  .address-label {\r\n    font-weight: bold;\r\n    margin-bottom: 0.5rem;\r\n    display: block;\r\n  }\r\n  .section {\r\n    margin-top: 1rem;\r\n  }\r\n  .text {\r\n    font-size: 0.875rem;\r\n    margin-bottom: 0.25rem;\r\n    display: block;\r\n  }\r\n  .textarea {\r\n    border: 1px solid #ccc;\r\n    border-radius: 0.375rem;\r\n    padding: 0.5rem;\r\n    width: 100%;\r\n    resize: vertical;\r\n    margin-top: 0.5rem;\r\n  }\r\n</style>"],"mappings":";;;;;;;;AAuBE,SAASA,GAAG,EAAEC,KAA+B,EAAEC,QAAQ,QAAQ,KAAK;AACpE,OAAOC,UAAU,MAAM,iDAAiD;AACxE,OAAOC,SAAS,MAAM,gDAAgD;AACtE,SAASC,WAAW,QAAQ,aAAa;;;;;;;;;;;IACzC,MAAMC,IAAI,GAAGC,MAAiC;IAC9C,MAAMC,KAAK,GAAGC,OAGZ;IACF,MAAMC,YAAY,GAAGR,QAAQ,CAAC,MAAM,CAClC;MAAES,EAAE,EAAE,MAAM;MAAEC,KAAK,EAAE,YAAYJ,KAAK,CAACK,SAAS,IAAI,EAAE;IAAG,CAAC,EAC1D;MAAEF,EAAE,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAiB,CAAC,CAC5C,CAAC;IACF,MAAME,YAAY,GAAGd,GAAG,CAACQ,KAAK,CAACO,UAAU,EAAEC,IAAI,IAAI,MAAM,CAAC;IAC1D,MAAMC,QAAQ,GAAGjB,GAAG,CAACQ,KAAK,CAACO,UAAU,EAAEG,KAAK,IAAI;MAAEC,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;IAClF,MAAMC,OAAO,GAAGtB,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMuB,eAAe,GAAG,MAAAA,CAAO;MAAEJ,GAAG;MAAEC;IAAI,CAAC,KAAK;MAC9CH,QAAQ,CAACC,KAAK,CAACC,GAAG,GAAGA,GAAG;MACxBF,QAAQ,CAACC,KAAK,CAACE,GAAG,GAAGA,GAAG;MACxBE,OAAO,CAACJ,KAAK,GAAG,IAAI;MACpB,IAAI;QACF,MAAMM,MAAM,GAAG,MAAMnB,WAAW,CAACc,GAAG,EAAEC,GAAG,CAAC;QAC1CH,QAAQ,CAACC,KAAK,CAACO,KAAK,GAAGD,MAAM,IAAI,EAAE;QACnCP,QAAQ,CAACC,KAAK,CAACG,OAAO,GAAGG,MAAM,CAACE,YAAY,IAAI,EAAE;QAClDpB,IAAI,CAAC,QAAQ,EAAE;UAAEU,IAAI,EAAE,UAAU;UAAEE,KAAK,EAAED,QAAQ,CAACC;QAAM,CAAC,CAAC;MAC7D,CAAC,CAAC,OAAOS,CAAC,EAAE;QACVV,QAAQ,CAACC,KAAK,CAACG,OAAO,GAAG,oBAAoB;MAC/C,CAAC,SAAS;QACRC,OAAO,CAACJ,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;IACDjB,KAAK,CAAC,CAACa,YAAY,EAAEG,QAAQ,CAAC,EAAE,MAAM;MACpC,IAAIC,KAAK,GAAG,IAAI;MAChB,IAAIJ,YAAY,CAACI,KAAK,KAAK,MAAM,EAAE;QACjCA,KAAK,GAAG;UAAEF,IAAI,EAAE,MAAM;UAAEE,KAAK,EAAEV,KAAK,CAACK;QAAU,CAAC;MAClD,CAAC,MAAM,IAAIC,YAAY,CAACI,KAAK,KAAK,UAAU,EAAE;QAC5CA,KAAK,GAAG;UAAEF,IAAI,EAAE,UAAU;UAAEE,KAAK,EAAED,QAAQ,CAACC;QAAM,CAAC;MACrD;MACAZ,IAAI,CAAC,QAAQ,EAAEY,KAAK,CAAC;IACvB,CAAC,CAAC;IACFjB,KAAK,CAACqB,OAAO,EAAE,MAAM;MACnBhB,IAAI,CAAC,SAAS,EAAEgB,OAAO,CAACJ,KAAK,CAAC;IAChC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}