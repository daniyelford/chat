{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport { ref, onMounted, onBeforeUnmount } from \"vue\";\nimport Hammer from \"hammerjs\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'TouchPage',\n  props: {\n    gestures: {\n      type: Object,\n      default: () => ({\n        left: null,\n        right: null,\n        up: null,\n        down: null,\n        tap: null,\n        doubletap: null\n      })\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const router = useRouter();\n    const swipeArea = ref(null);\n    let hammerInstance = null;\n    onMounted(() => {\n      if (swipeArea.value) {\n        hammerInstance = new Hammer(swipeArea.value);\n        hammerInstance.get(\"swipe\").set({\n          direction: Hammer.DIRECTION_ALL\n        });\n        hammerInstance.get(\"tap\").set({\n          taps: 1\n        });\n        hammerInstance.add(new Hammer.Tap({\n          event: \"doubletap\",\n          taps: 2\n        }));\n        hammerInstance.on(\"swipeleft swiperight swipeup swipedown tap doubletap\", ev => {\n          switch (ev.type) {\n            case \"swipeleft\":\n              if (props.gestures.left) router.push({\n                name: props.gestures.left\n              });\n              break;\n            case \"swiperight\":\n              if (props.gestures.right) router.push({\n                name: props.gestures.right\n              });\n              break;\n            case \"swipeup\":\n              if (props.gestures.up) router.push({\n                name: props.gestures.up\n              });\n              break;\n            case \"swipedown\":\n              if (props.gestures.down) router.push({\n                name: props.gestures.down\n              });\n              break;\n            case \"tap\":\n              if (props.gestures.tap) router.push({\n                name: props.gestures.tap\n              });\n              break;\n            case \"doubletap\":\n              if (props.gestures.doubletap) router.push({\n                name: props.gestures.doubletap\n              });\n              break;\n          }\n        });\n      }\n    });\n    onBeforeUnmount(() => {\n      if (hammerInstance) {\n        hammerInstance.destroy();\n      }\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        ref_key: \"swipeArea\",\n        ref: swipeArea,\n        class: \"swipe-area\"\n      }, [_renderSlot(_ctx.$slots, \"default\")], 512);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","Hammer","useRouter","props","__props","router","swipeArea","hammerInstance","value","get","set","direction","DIRECTION_ALL","taps","add","Tap","event","on","ev","type","gestures","left","push","name","right","up","down","tap","doubletap","destroy"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/touch/TouchPage.vue"],"sourcesContent":["<template>\r\n    <div ref=\"swipeArea\" class=\"swipe-area\">\r\n        <slot />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { ref, onMounted, onBeforeUnmount, defineProps } from \"vue\"\r\n    import Hammer from \"hammerjs\"\r\n    import { useRouter } from \"vue-router\"\r\n    const props = defineProps({\r\n        gestures: {\r\n            type: Object,\r\n            default: () => ({\r\n                left: null,\r\n                right: null,\r\n                up: null,\r\n                down: null,\r\n                tap: null,\r\n                doubletap: null\r\n            })\r\n        }\r\n    })\r\n    const router = useRouter()\r\n    const swipeArea = ref(null)\r\n    let hammerInstance = null\r\n    onMounted(() => {\r\n    if (swipeArea.value) {\r\n        hammerInstance = new Hammer(swipeArea.value)\r\n        hammerInstance.get(\"swipe\").set({ direction: Hammer.DIRECTION_ALL })\r\n        hammerInstance.get(\"tap\").set({ taps: 1 })\r\n        hammerInstance.add(new Hammer.Tap({ event: \"doubletap\", taps: 2 }))\r\n        hammerInstance.on(\"swipeleft swiperight swipeup swipedown tap doubletap\", (ev) => {\r\n            switch (ev.type) {\r\n                case \"swipeleft\":\r\n                    if (props.gestures.left) router.push({ name:props.gestures.left })\r\n                    break\r\n                case \"swiperight\":\r\n                    if (props.gestures.right) router.push({ name:props.gestures.right })\r\n                    break\r\n                case \"swipeup\":\r\n                    if (props.gestures.up) router.push({ name:props.gestures.up })\r\n                    break\r\n                case \"swipedown\":\r\n                    if (props.gestures.down) router.push({ name:props.gestures.down })\r\n                    break\r\n                case \"tap\":\r\n                    if (props.gestures.tap) router.push({ name:props.gestures.tap })\r\n                    break\r\n                case \"doubletap\":\r\n                    if (props.gestures.doubletap) router.push({ name:props.gestures.doubletap })\r\n                    break\r\n            }\r\n        })\r\n    }\r\n    })\r\n\r\n    onBeforeUnmount(() => {\r\n        if (hammerInstance) {\r\n            hammerInstance.destroy()\r\n        }\r\n    })\r\n</script>\r\n\r\n<style>\r\n    .swipe-area {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n</style>\r\n"],"mappings":";;AAOI,SAASA,GAAG,EAAEC,SAAS,EAAEC,eAA4B,QAAQ,KAAK;AAClE,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,SAAS,QAAQ,YAAY;;;;;;;;;;;;;;;;;IACtC,MAAMC,KAAK,GAAGC,OAYZ;IACF,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,SAAS,GAAGR,GAAG,CAAC,IAAI,CAAC;IAC3B,IAAIS,cAAc,GAAG,IAAI;IACzBR,SAAS,CAAC,MAAM;MAChB,IAAIO,SAAS,CAACE,KAAK,EAAE;QACjBD,cAAc,GAAG,IAAIN,MAAM,CAACK,SAAS,CAACE,KAAK,CAAC;QAC5CD,cAAc,CAACE,GAAG,CAAC,OAAO,CAAC,CAACC,GAAG,CAAC;UAAEC,SAAS,EAAEV,MAAM,CAACW;QAAc,CAAC,CAAC;QACpEL,cAAc,CAACE,GAAG,CAAC,KAAK,CAAC,CAACC,GAAG,CAAC;UAAEG,IAAI,EAAE;QAAE,CAAC,CAAC;QAC1CN,cAAc,CAACO,GAAG,CAAC,IAAIb,MAAM,CAACc,GAAG,CAAC;UAAEC,KAAK,EAAE,WAAW;UAAEH,IAAI,EAAE;QAAE,CAAC,CAAC,CAAC;QACnEN,cAAc,CAACU,EAAE,CAAC,sDAAsD,EAAGC,EAAE,IAAK;UAC9E,QAAQA,EAAE,CAACC,IAAI;YACX,KAAK,WAAW;cACZ,IAAIhB,KAAK,CAACiB,QAAQ,CAACC,IAAI,EAAEhB,MAAM,CAACiB,IAAI,CAAC;gBAAEC,IAAI,EAACpB,KAAK,CAACiB,QAAQ,CAACC;cAAK,CAAC,CAAC;cAClE;YACJ,KAAK,YAAY;cACb,IAAIlB,KAAK,CAACiB,QAAQ,CAACI,KAAK,EAAEnB,MAAM,CAACiB,IAAI,CAAC;gBAAEC,IAAI,EAACpB,KAAK,CAACiB,QAAQ,CAACI;cAAM,CAAC,CAAC;cACpE;YACJ,KAAK,SAAS;cACV,IAAIrB,KAAK,CAACiB,QAAQ,CAACK,EAAE,EAAEpB,MAAM,CAACiB,IAAI,CAAC;gBAAEC,IAAI,EAACpB,KAAK,CAACiB,QAAQ,CAACK;cAAG,CAAC,CAAC;cAC9D;YACJ,KAAK,WAAW;cACZ,IAAItB,KAAK,CAACiB,QAAQ,CAACM,IAAI,EAAErB,MAAM,CAACiB,IAAI,CAAC;gBAAEC,IAAI,EAACpB,KAAK,CAACiB,QAAQ,CAACM;cAAK,CAAC,CAAC;cAClE;YACJ,KAAK,KAAK;cACN,IAAIvB,KAAK,CAACiB,QAAQ,CAACO,GAAG,EAAEtB,MAAM,CAACiB,IAAI,CAAC;gBAAEC,IAAI,EAACpB,KAAK,CAACiB,QAAQ,CAACO;cAAI,CAAC,CAAC;cAChE;YACJ,KAAK,WAAW;cACZ,IAAIxB,KAAK,CAACiB,QAAQ,CAACQ,SAAS,EAAEvB,MAAM,CAACiB,IAAI,CAAC;gBAAEC,IAAI,EAACpB,KAAK,CAACiB,QAAQ,CAACQ;cAAU,CAAC,CAAC;cAC5E;UACR;QACJ,CAAC,CAAC;MACN;IACA,CAAC,CAAC;IAEF5B,eAAe,CAAC,MAAM;MAClB,IAAIO,cAAc,EAAE;QAChBA,cAAc,CAACsB,OAAO,CAAC,CAAC;MAC5B;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}