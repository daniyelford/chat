{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { defineStore } from 'pinia';\nimport { sendApi } from '@/utils/api';\nexport const useNewsStore = defineStore('news', {\n  state: () => ({\n    cards: [],\n    total: 0,\n    lastUpdate: null,\n    isLoaded: false,\n    hasRule: false\n  }),\n  actions: {\n    async fetchNews({\n      limit = 10,\n      offset = 0,\n      append = false\n    } = {}) {\n      const res = await sendApi({\n        action: 'get_news',\n        control: 'news',\n        data: {\n          limit,\n          offset\n        }\n      });\n      if (res.status === 'success') {\n        const newCards = res.data.map(item => ({\n          id: item.id,\n          description: item.description,\n          created_at: item.created_at,\n          location: {\n            city: item.city || null,\n            lat: item.address_lat || null,\n            lon: item.address_lon || null,\n            address: item.address || null\n          },\n          category: Array.isArray(item.category) ? item.category.map(c => ({\n            id: c.id,\n            title: c.title\n          })) : [],\n          user: {\n            id: item.user_account_id || null,\n            name: item.user_name || '',\n            family: item.user_family || '',\n            phone: item.user_phone || '',\n            image: item.user_image_url || null\n          },\n          medias: Array.isArray(item.media) ? item.media.map(m => ({\n            type: m.type,\n            url: m.url\n          })) : []\n        }));\n\n        // حذف کارت‌هایی که user.id ندارند (ایمنی بیشتر)\n        const filteredCards = newCards.filter(card => card.user.id);\n\n        // افزودن به لیست\n        this.cards = append ? [...this.cards, ...filteredCards] : [...filteredCards, ...this.cards];\n\n        // سایر مقادیر\n        this.total = res.count_all || filteredCards.length;\n        this.lastUpdate = new Date().toISOString();\n        this.isLoaded = true;\n        this.hasRule = res.rule ?? false;\n        return filteredCards;\n      }\n      return [];\n    },\n    async fetchNewsById(id) {\n      const res = await sendApi({\n        action: 'get_news_by_id',\n        control: 'news',\n        data: {\n          id\n        }\n      });\n      if (res.status === 'success') {\n        const item = res.data;\n        return {\n          id: item.id,\n          description: item.description,\n          created_at: item.created_at,\n          status: item.status,\n          privacy: item.privacy,\n          location: {\n            city: item.city,\n            lat: item.address_lat,\n            lon: item.address_lon,\n            address: item.address\n          },\n          category: Array.isArray(item.category) ? item.category.map(category => ({\n            id: category.id,\n            title: category.title\n          })) : [],\n          user: {\n            id: item.user_account_id,\n            name: item.user_name,\n            family: item.user_family,\n            phone: item.user_phone,\n            image: item.user_image_url\n          },\n          medias: Array.isArray(item.media) ? item.media.map(media => ({\n            type: media.type,\n            url: media.url\n          })) : []\n        };\n      }\n      return null;\n    },\n    async fetchLatestNewsRaw(limit = 5, offset = 0) {\n      const res = await sendApi({\n        action: 'get_news',\n        control: 'news',\n        data: {\n          limit,\n          offset\n        }\n      });\n      return res.status === 'success' ? res.data : [];\n    },\n    async scheduleNewsRunTime(news_id, run_time) {\n      const res = await sendApi({\n        action: 'add_news_to_list',\n        control: 'news',\n        data: {\n          news_id,\n          run_time: run_time ?? null\n        }\n      });\n      return res;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sendApi","useNewsStore","state","cards","total","lastUpdate","isLoaded","hasRule","actions","fetchNews","limit","offset","append","res","action","control","data","status","newCards","map","item","id","description","created_at","location","city","lat","address_lat","lon","address_lon","address","category","Array","isArray","c","title","user","user_account_id","name","user_name","family","user_family","phone","user_phone","image","user_image_url","medias","media","m","type","url","filteredCards","filter","card","count_all","length","Date","toISOString","rule","fetchNewsById","privacy","fetchLatestNewsRaw","scheduleNewsRunTime","news_id","run_time"],"sources":["D:/GitHub/ci3-vue3/vue3/src/stores/news.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { sendApi } from '@/utils/api'\r\nexport const useNewsStore = defineStore('news', {\r\n  state: () => ({\r\n    cards: [],\r\n    total:0,\r\n    lastUpdate: null,\r\n    isLoaded: false,\r\n    hasRule: false\r\n  }),\r\n  actions: {\r\n    async fetchNews({ limit = 10, offset = 0, append = false } = {}) {\r\n      const res = await sendApi({\r\n        action: 'get_news',\r\n        control: 'news',\r\n        data: { limit, offset }\r\n      })\r\n      \r\n      if (res.status === 'success') {\r\n        const newCards = res.data.map(item => ({\r\n          id: item.id,\r\n          description: item.description,\r\n          created_at: item.created_at,\r\n          location: {\r\n            city: item.city || null,\r\n            lat: item.address_lat || null,\r\n            lon: item.address_lon || null,\r\n            address: item.address || null,\r\n          },\r\n          category: Array.isArray(item.category)\r\n            ? item.category.map(c => ({\r\n                id: c.id,\r\n                title: c.title\r\n              }))\r\n            : [],\r\n          user: {\r\n            id: item.user_account_id || null,\r\n            name: item.user_name || '',\r\n            family: item.user_family || '',\r\n            phone: item.user_phone || '',\r\n            image: item.user_image_url || null,\r\n          },\r\n          medias: Array.isArray(item.media)\r\n            ? item.media.map(m => ({\r\n                type: m.type,\r\n                url: m.url\r\n              }))\r\n            : []\r\n        }))\r\n\r\n        // حذف کارت‌هایی که user.id ندارند (ایمنی بیشتر)\r\n        const filteredCards = newCards.filter(card => card.user.id)\r\n\r\n        // افزودن به لیست\r\n        this.cards = append ? [...this.cards, ...filteredCards] : [...filteredCards, ...this.cards]\r\n\r\n        // سایر مقادیر\r\n        this.total = res.count_all || filteredCards.length\r\n        this.lastUpdate = new Date().toISOString()\r\n        this.isLoaded = true\r\n        this.hasRule = res.rule ?? false\r\n        return filteredCards\r\n      }\r\n      return []\r\n    },\r\n    async fetchNewsById(id) {\r\n      const res = await sendApi({\r\n        action: 'get_news_by_id',\r\n        control: 'news',\r\n        data: { id }\r\n      })\r\n\r\n      if (res.status === 'success') {\r\n        const item = res.data\r\n\r\n        return {\r\n          id: item.id,\r\n          description: item.description,\r\n          created_at: item.created_at,\r\n          status:item.status,\r\n          privacy:item.privacy,\r\n          location: {\r\n            city: item.city,\r\n            lat: item.address_lat,\r\n            lon: item.address_lon,\r\n            address: item.address,\r\n          },\r\n          category: Array.isArray(item.category) ? item.category.map(category => ({\r\n            id: category.id,\r\n            title: category.title\r\n          })) : [],\r\n          user: {\r\n            id: item.user_account_id,\r\n            name: item.user_name,\r\n            family: item.user_family,\r\n            phone: item.user_phone,\r\n            image: item.user_image_url,\r\n          },\r\n          medias: Array.isArray(item.media) ? item.media.map(media => ({\r\n            type: media.type,\r\n            url: media.url\r\n          })) : []\r\n        }\r\n      }\r\n      return null\r\n    },\r\n    async fetchLatestNewsRaw(limit = 5, offset = 0) {\r\n      const res = await sendApi({\r\n        action: 'get_news',\r\n        control: 'news',\r\n        data: { limit, offset }\r\n      })\r\n      return res.status === 'success' ? res.data : []\r\n    },\r\n    async scheduleNewsRunTime(news_id, run_time) {\r\n      const res = await sendApi({\r\n        action: 'add_news_to_list',\r\n        control: 'news',\r\n        data: {\r\n          news_id,\r\n          run_time: run_time ?? null,\r\n        }\r\n      })\r\n      return res\r\n    }\r\n  }\r\n})\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}