{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  key: 2\n};\nconst _hoisted_6 = {\n  key: 3\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = [\"src\"];\nimport { ref, onMounted } from 'vue';\nimport { sendApi } from '@/utils/api';\nexport default {\n  __name: 'AddNewsForm',\n  setup(__props) {\n    const form = ref({\n      category_id: '',\n      user_address_id: '',\n      privacy: 'private',\n      media_id: '',\n      description: '',\n      type: 'normal',\n      location: {\n        lat: '',\n        lng: ''\n      }\n    });\n    const mediaPreview = ref(null);\n    const isImage = ref(true);\n    const handleMediaBase64 = event => {\n      const file = event.target.files[0];\n      if (!file) return;\n      const reader = new FileReader();\n      reader.onload = () => {\n        const base64 = reader.result;\n        form.value.media_id = base64;\n        mediaPreview.value = base64;\n        isImage.value = file.type.startsWith('image/');\n      };\n      reader.readAsDataURL(file);\n    };\n    const categories = ref([]);\n    const addresses = ref([]);\n    const rule = ref(false);\n    const useMap = ref(false);\n    onMounted(async () => {\n      const catRes = await sendApi({\n        control: 'news',\n        action: 'use_category'\n      });\n      if (catRes.status === 'success') {\n        categories.value = catRes.data;\n        rule.value = catRes.rule;\n        if (rule.value && catRes.data.length > 0) {\n          form.value.category_id = catRes.data[0].id;\n          form.value.privacy = 'public';\n        }\n      }\n      const addrRes = await sendApi({\n        control: 'news',\n        action: 'user_address'\n      });\n      if (addrRes.status === 'success') {\n        addresses.value = addrRes.data;\n      }\n    });\n    const submitForm = async () => {\n      const finalData = {\n        ...form.value,\n        location: useMap.value ? form.value.location : null\n      };\n      try {\n        const res = await sendApi({\n          control: 'news',\n          action: 'add_news',\n          data: finalData\n        });\n        if (res.status === 'success') {\n          alert('خبر با موفقیت ثبت شد!');\n        } else {\n          alert('خطا در ثبت خبر: ' + res.message);\n        }\n      } catch (err) {\n        alert('خطا در ارسال: ' + err.message);\n      }\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"form\", {\n        onSubmit: _withModifiers(submitForm, [\"prevent\"]),\n        class: \"space-y-4 max-w-md mx-auto\"\n      }, [!rule.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"دسته‌بندی:\", -1)), _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => form.value.category_id = $event),\n        required: \"\"\n      }, [_cache[8] || (_cache[8] = _createElementVNode(\"option\", {\n        disabled: \"\",\n        value: \"\"\n      }, \"انتخاب کنید\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(categories.value, cat => {\n        return _openBlock(), _createElementBlock(\"option\", {\n          key: cat.id,\n          value: cat.id\n        }, _toDisplayString(cat.name), 9, _hoisted_2);\n      }), 128))], 512), [[_vModelSelect, form.value.category_id]])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[10] || (_cache[10] = [_createElementVNode(\"p\", null, \"دسته‌بندی به‌صورت خودکار انتخاب شده است.\", -1)]))), _createElementVNode(\"div\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", null, \"آدرس:\", -1)), _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => form.value.user_address_id = $event)\n      }, [_cache[11] || (_cache[11] = _createElementVNode(\"option\", {\n        disabled: \"\",\n        value: \"\"\n      }, \"انتخاب آدرس ثبت‌شده\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(addresses.value, addr => {\n        return _openBlock(), _createElementBlock(\"option\", {\n          key: addr.id,\n          value: addr.id\n        }, _toDisplayString(addr.label), 9, _hoisted_4);\n      }), 128))], 512), [[_vModelSelect, form.value.user_address_id]]), _createElementVNode(\"button\", {\n        type: \"button\",\n        onClick: _cache[2] || (_cache[2] = $event => useMap.value = true)\n      }, \"انتخاب از نقشه\")]), useMap.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", null, \"موقعیت مکانی (مختصات):\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => form.value.location.lat = $event),\n        type: \"text\",\n        placeholder: \"عرض جغرافیایی (lat)\"\n      }, null, 512), [[_vModelText, form.value.location.lat]]), _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => form.value.location.lng = $event),\n        type: \"text\",\n        placeholder: \"طول جغرافیایی (lng)\"\n      }, null, 512), [[_vModelText, form.value.location.lng]])])) : _createCommentVNode(\"\", true), !rule.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", null, \"سطح دسترسی:\", -1)), _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => form.value.privacy = $event)\n      }, _cache[14] || (_cache[14] = [_createElementVNode(\"option\", {\n        value: \"public\"\n      }, \"عمومی\", -1), _createElementVNode(\"option\", {\n        value: \"private\"\n      }, \"خصوصی\", -1)]), 512), [[_vModelSelect, form.value.privacy]])])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", null, [_cache[17] || (_cache[17] = _createElementVNode(\"label\", null, \"نوع خبر:\", -1)), _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => form.value.type = $event)\n      }, _cache[16] || (_cache[16] = [_createElementVNode(\"option\", {\n        value: \"normal\"\n      }, \"معمولی\", -1), _createElementVNode(\"option\", {\n        value: \"force\"\n      }, \"فوری\", -1)]), 512), [[_vModelSelect, form.value.type]])]), _createElementVNode(\"div\", null, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", null, \"توضیحات:\", -1)), _withDirectives(_createElementVNode(\"textarea\", {\n        \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => form.value.description = $event),\n        rows: \"4\",\n        required: \"\"\n      }, null, 512), [[_vModelText, form.value.description]])]), _createElementVNode(\"div\", null, [_cache[20] || (_cache[20] = _createElementVNode(\"label\", null, \"انتخاب مدیا (دوربین یا گالری):\", -1)), _createElementVNode(\"input\", {\n        type: \"file\",\n        accept: \"image/*,video/*\",\n        capture: \"\",\n        onChange: handleMediaBase64\n      }, null, 32), mediaPreview.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_cache[19] || (_cache[19] = _createElementVNode(\"p\", null, \"پیش‌نمایش:\", -1)), isImage.value ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: mediaPreview.value,\n        style: {\n          \"max-width\": \"100px\"\n        }\n      }, null, 8, _hoisted_8)) : _createCommentVNode(\"\", true), !isImage.value ? (_openBlock(), _createElementBlock(\"video\", {\n        key: 1,\n        src: mediaPreview.value,\n        controls: \"\",\n        style: {\n          \"max-width\": \"150px\"\n        }\n      }, null, 8, _hoisted_9)) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true)]), _cache[21] || (_cache[21] = _createElementVNode(\"button\", {\n        type: \"submit\"\n      }, \"ثبت خبر\", -1))], 32);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","sendApi","form","category_id","user_address_id","privacy","media_id","description","type","location","lat","lng","mediaPreview","isImage","handleMediaBase64","event","file","target","files","reader","FileReader","onload","base64","result","value","startsWith","readAsDataURL","categories","addresses","rule","useMap","catRes","control","action","status","data","length","id","addrRes","submitForm","finalData","res","alert","message","err"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/dashboard/pagesContent/AddNewsForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"submitForm\" class=\"space-y-4 max-w-md mx-auto\">\r\n    <!-- Category -->\r\n    <div v-if=\"!rule\">\r\n      <label>دسته‌بندی:</label>\r\n      <select v-model=\"form.category_id\" required>\r\n        <option disabled value=\"\">انتخاب کنید</option>\r\n        <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.id\">\r\n          {{ cat.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div v-else>\r\n      <p>دسته‌بندی به‌صورت خودکار انتخاب شده است.</p>\r\n    </div>\r\n\r\n    <!-- Address -->\r\n    <div>\r\n      <label>آدرس:</label>\r\n      <select v-model=\"form.user_address_id\">\r\n        <option disabled value=\"\">انتخاب آدرس ثبت‌شده</option>\r\n        <option v-for=\"addr in addresses\" :key=\"addr.id\" :value=\"addr.id\">\r\n          {{ addr.label }}\r\n        </option>\r\n      </select>\r\n      <button type=\"button\" @click=\"useMap = true\">انتخاب از نقشه</button>\r\n    </div>\r\n\r\n    <!-- اگر نقشه فعال شد -->\r\n    <div v-if=\"useMap\">\r\n      <label>موقعیت مکانی (مختصات):</label>\r\n      <input v-model=\"form.location.lat\" type=\"text\" placeholder=\"عرض جغرافیایی (lat)\" />\r\n      <input v-model=\"form.location.lng\" type=\"text\" placeholder=\"طول جغرافیایی (lng)\" />\r\n    </div>\r\n\r\n    <!-- Privacy فقط اگر rule = false باشه -->\r\n    <div v-if=\"!rule\">\r\n      <label>سطح دسترسی:</label>\r\n      <select v-model=\"form.privacy\">\r\n        <option value=\"public\">عمومی</option>\r\n        <option value=\"private\">خصوصی</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Type -->\r\n    <div>\r\n      <label>نوع خبر:</label>\r\n      <select v-model=\"form.type\">\r\n        <option value=\"normal\">معمولی</option>\r\n        <option value=\"force\">فوری</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Description -->\r\n    <div>\r\n      <label>توضیحات:</label>\r\n      <textarea v-model=\"form.description\" rows=\"4\" required></textarea>\r\n    </div>\r\n\r\n    <!-- Media -->\r\n    <div>\r\n        <label>انتخاب مدیا (دوربین یا گالری):</label>\r\n        <input type=\"file\" accept=\"image/*,video/*\" capture @change=\"handleMediaBase64\" />\r\n        <div v-if=\"mediaPreview\">\r\n            <p>پیش‌نمایش:</p>\r\n            <img v-if=\"isImage\" :src=\"mediaPreview\" style=\"max-width: 100px;\" />\r\n            <video v-if=\"!isImage\" :src=\"mediaPreview\" controls style=\"max-width: 150px;\" />\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Submit -->\r\n    <button type=\"submit\">ثبت خبر</button>\r\n  </form>\r\n</template>\r\n\r\n<script setup>\r\n    import { ref, onMounted } from 'vue'\r\n    import { sendApi } from '@/utils/api'\r\n    const form = ref({\r\n        category_id: '',\r\n        user_address_id: '',\r\n        privacy: 'private',\r\n        media_id: '',\r\n        description: '',\r\n        type: 'normal',\r\n        location: { lat: '', lng: '' },\r\n    })\r\n    \r\n    const mediaPreview = ref(null)\r\n    const isImage = ref(true)\r\n    const handleMediaBase64 = (event) => {\r\n        const file = event.target.files[0]\r\n        if (!file) return\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            const base64 = reader.result\r\n            form.value.media_id = base64\r\n            mediaPreview.value = base64\r\n            isImage.value = file.type.startsWith('image/')\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    const categories = ref([])\r\n    const addresses = ref([])\r\n    const rule = ref(false)\r\n    const useMap = ref(false)\r\n    onMounted(async () => {\r\n        const catRes = await sendApi({ control: 'news', action: 'use_category' })\r\n        if (catRes.status === 'success') {\r\n            categories.value = catRes.data\r\n            rule.value = catRes.rule\r\n            if (rule.value && catRes.data.length > 0) {\r\n                form.value.category_id = catRes.data[0].id\r\n                form.value.privacy = 'public'\r\n            }\r\n        }\r\n        const addrRes = await sendApi({ control: 'news', action: 'user_address' })\r\n        if (addrRes.status === 'success') {\r\n            addresses.value = addrRes.data\r\n        }\r\n    })\r\n    const submitForm = async () => {\r\n        const finalData = {\r\n            ...form.value,\r\n            location: useMap.value ? form.value.location : null,\r\n        }\r\n        try {\r\n            const res = await sendApi({\r\n                control: 'news',\r\n                action: 'add_news',\r\n                data: finalData,\r\n            })\r\n            if (res.status === 'success') {\r\n                alert('خبر با موفقیت ثبت شد!')\r\n            } else {\r\n                alert('خطا در ثبت خبر: ' + res.message)\r\n            }\r\n        } catch (err) {\r\n            alert('خطا در ارسال: ' + err.message)\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    form input,\r\n    form select,\r\n    form textarea {\r\n        width: 100%;\r\n        padding: 0.5rem;\r\n        margin-top: 0.25rem;\r\n    }\r\n    button {\r\n        padding: 0.5rem 1rem;\r\n        background-color: #10b981;\r\n        color: white;\r\n        border: none;\r\n        border-radius: 0.375rem;\r\n        cursor: pointer;\r\n        margin-top: 0.5rem;\r\n    }\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AA4EI,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,OAAO,QAAQ,aAAa;;;;IACrC,MAAMC,IAAI,GAAGH,GAAG,CAAC;MACbI,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,OAAO,EAAE,SAAS;MAClBC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,GAAG,EAAE;MAAG;IACjC,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAGb,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMc,OAAO,GAAGd,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMe,iBAAiB,GAAIC,KAAK,IAAK;MACjC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAI,CAACF,IAAI,EAAE;MACX,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QAClB,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAM;QAC5BrB,IAAI,CAACsB,KAAK,CAAClB,QAAQ,GAAGgB,MAAM;QAC5BV,YAAY,CAACY,KAAK,GAAGF,MAAM;QAC3BT,OAAO,CAACW,KAAK,GAAGR,IAAI,CAACR,IAAI,CAACiB,UAAU,CAAC,QAAQ,CAAC;MAClD,CAAC;MACDN,MAAM,CAACO,aAAa,CAACV,IAAI,CAAC;IAC9B,CAAC;IAED,MAAMW,UAAU,GAAG5B,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAM6B,SAAS,GAAG7B,GAAG,CAAC,EAAE,CAAC;IACzB,MAAM8B,IAAI,GAAG9B,GAAG,CAAC,KAAK,CAAC;IACvB,MAAM+B,MAAM,GAAG/B,GAAG,CAAC,KAAK,CAAC;IACzBC,SAAS,CAAC,YAAY;MAClB,MAAM+B,MAAM,GAAG,MAAM9B,OAAO,CAAC;QAAE+B,OAAO,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAe,CAAC,CAAC;MACzE,IAAIF,MAAM,CAACG,MAAM,KAAK,SAAS,EAAE;QAC7BP,UAAU,CAACH,KAAK,GAAGO,MAAM,CAACI,IAAI;QAC9BN,IAAI,CAACL,KAAK,GAAGO,MAAM,CAACF,IAAI;QACxB,IAAIA,IAAI,CAACL,KAAK,IAAIO,MAAM,CAACI,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UACtClC,IAAI,CAACsB,KAAK,CAACrB,WAAW,GAAG4B,MAAM,CAACI,IAAI,CAAC,CAAC,CAAC,CAACE,EAAE;UAC1CnC,IAAI,CAACsB,KAAK,CAACnB,OAAO,GAAG,QAAQ;QACjC;MACJ;MACA,MAAMiC,OAAO,GAAG,MAAMrC,OAAO,CAAC;QAAE+B,OAAO,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAe,CAAC,CAAC;MAC1E,IAAIK,OAAO,CAACJ,MAAM,KAAK,SAAS,EAAE;QAC9BN,SAAS,CAACJ,KAAK,GAAGc,OAAO,CAACH,IAAI;MAClC;IACJ,CAAC,CAAC;IACF,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,SAAS,GAAG;QACd,GAAGtC,IAAI,CAACsB,KAAK;QACbf,QAAQ,EAAEqB,MAAM,CAACN,KAAK,GAAGtB,IAAI,CAACsB,KAAK,CAACf,QAAQ,GAAG;MACnD,CAAC;MACD,IAAI;QACA,MAAMgC,GAAG,GAAG,MAAMxC,OAAO,CAAC;UACtB+B,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE,UAAU;UAClBE,IAAI,EAAEK;QACV,CAAC,CAAC;QACF,IAAIC,GAAG,CAACP,MAAM,KAAK,SAAS,EAAE;UAC1BQ,KAAK,CAAC,uBAAuB,CAAC;QAClC,CAAC,MAAM;UACHA,KAAK,CAAC,kBAAkB,GAAGD,GAAG,CAACE,OAAO,CAAC;QAC3C;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVF,KAAK,CAAC,gBAAgB,GAAGE,GAAG,CAACD,OAAO,CAAC;MACzC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}