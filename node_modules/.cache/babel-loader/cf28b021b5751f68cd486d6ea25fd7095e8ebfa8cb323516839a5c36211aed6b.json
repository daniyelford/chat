{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map-wrapper\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error\"\n};\nimport { ref, onMounted, watch, createApp, nextTick } from 'vue';\nimport MediaSlider from '@/components/tooles/media/MediaSlider.vue';\nimport PlacePopup from '@/components/tooles/places/PlacePopup.vue';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport { BASE_URL, ORS_API_KEY } from '@/config';\nexport default {\n  __name: 'SinglePlaceMap',\n  props: {\n    userCenter: {\n      type: Object,\n      required: true\n    },\n    place: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const mapId = `map-${Math.random().toString(36).substring(2, 10)}`;\n    const map = ref(null);\n    const markerRef = ref(null);\n    const routingControl = ref(null);\n    const routeError = ref(null);\n    const markerIcon = L.icon({\n      iconUrl: BASE_URL + '/assets/images/marker.svg',\n      iconSize: [32, 32],\n      iconAnchor: [16, 32]\n    });\n    function createORSRouter(apiKey, profile = 'driving-car') {\n      return {\n        route(waypoints, callback, context) {\n          const inputWaypoints = waypoints.map(wp => {\n            if (wp.latLng) {\n              return L.Routing.waypoint(wp.latLng);\n            }\n            return L.Routing.waypoint(L.latLng(wp.lat, wp.lng));\n          });\n\n          // const coordinates = waypoints.map(wp => {\n          //   const latlng = wp.latLng || L.latLng(wp.lat, wp.lng)\n          //   return [latlng.lng, latlng.lat]\n          // })\n\n          if (inputWaypoints.length < 2) {\n            routeError.value = 'مبدا و مقصد مشخص نیستند.';\n            callback.call(context || this, null, []);\n            return;\n          }\n          if (inputWaypoints[0][0] === inputWaypoints[1][0] && inputWaypoints[0][1] === inputWaypoints[1][1]) {\n            routeError.value = 'شما در محل هستید.';\n            callback.call(context || this, null, []);\n            return;\n          }\n          fetch(`https://api.openrouteservice.org/v2/directions/${profile}/geojson`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': apiKey\n            },\n            body: JSON.stringify({\n              inputWaypoints,\n              instructions: false\n            })\n          }).then(res => res.json()).then(data => {\n            const coords = data.features?.[0]?.geometry?.coordinates || [];\n            const summary = data.features?.[0]?.properties?.summary || {};\n            if (!coords.length) {\n              routeError.value = 'مسیر یافت نشد.';\n              callback.call(context || this, null, []);\n              return;\n            }\n            const latlngs = coords.map(([lng, lat]) => L.latLng(lat, lng));\n            const route = {\n              name: '',\n              coordinates: latlngs,\n              instructions: [],\n              summary: {\n                totalDistance: summary.distance ?? 0,\n                totalTime: summary.duration ?? 0\n              },\n              inputWaypoints: inputWaypoints,\n              waypoints: latlngs\n            };\n            console.log('Final route:', route);\n            callback.call(context || this, null, [route]);\n\n            // const route = {\n            //   name: '',\n            //   coordinates: latlngs,\n            //   instructions: [],\n            //   summary: {\n            //     totalDistance: summary.distance ?? 0,\n            //     totalTime: summary.duration ?? 0\n            //   },\n            //   inputWaypoints: waypoints,\n            //   waypoints: latlngs\n            // }\n\n            // callback.call(context || this, null, [route])\n            routeError.value = null;\n          }).catch(err => {\n            console.error('Routing error', err);\n            routeError.value = 'خطا در رسم مسیر.';\n            callback.call(context || this, err);\n          });\n        }\n      };\n    }\n\n    // function createORSRouter(apiKey, profile = 'driving-car') {\n    //   return {\n    //     route(waypoints, callback, context) {\n    //       const coordinates = waypoints.map(wp => {\n    //         const latlng = wp.latLng || L.latLng(wp.lat, wp.lng)\n    //         return [latlng.lng, latlng.lat]\n    //       })\n\n    //       if (coordinates.length < 2) {\n    //         routeError.value = 'مبدا و مقصد مشخص نیستند.'\n    //         callback.call(context || this, null, [])\n    //         return\n    //       }\n\n    //       if (coordinates[0][0] === coordinates[1][0] && coordinates[0][1] === coordinates[1][1]) {\n    //         routeError.value = 'شما در محل هستید.'\n    //         callback.call(context || this, null, [])\n    //         return\n    //       }\n\n    //       fetch(`https://api.openrouteservice.org/v2/directions/${profile}/geojson`, {\n    //         method: 'POST',\n    //         headers: {\n    //           'Content-Type': 'application/json',\n    //           'Authorization': apiKey\n    //         },\n    //         body: JSON.stringify({ coordinates, instructions: false })\n    //       })\n    //       .then(res => res.json())\n    //       .then(data => {\n    //         const coords = data.features?.[0]?.geometry?.coordinates || []\n    //         if (!coords.length) {\n    //           routeError.value = 'مسیر یافت نشد.'\n    //           callback.call(context || this, null, [])\n    //           return\n    //         }\n\n    //         // فقط مختصات GeoJSON تبدیل به L.LatLng و به صورت route آماده بده\n    //         const latlngs = coords.map(([lng, lat]) => L.latLng(lat, lng))\n    //         callback.call(context || this, null, [{\n    //           name: '',\n    //           coordinates: latlngs\n    //         }])\n    //         routeError.value = null\n    //       })\n    //       .catch(err => {\n    //         console.error('Routing error', err)\n    //         routeError.value = 'خطا در رسم مسیر.'\n    //         callback.call(context || this, err)\n    //       })\n    //     }\n    //   }\n    // }\n\n    // function createORSRouter(apiKey, profile = 'driving-car') {\n    //   return {\n    //     route(waypoints, callback, context) {\n    //       console.log(waypoints);\n\n    //       const coordinates = waypoints.map(wp => {\n    //         if (wp.latLng) {\n    //           return [wp.latLng.lng, wp.latLng.lat]\n    //         }\n    //         if (wp.lng !== undefined && wp.lat !== undefined) {\n    //           return [wp.lng, wp.lat]\n    //         }\n    //         return [0, 0]\n    //       })\n    //       console.log(coordinates);\n\n    //       if (coordinates.length < 2) {\n    //         routeError.value = 'مبدا و مقصد مشخص نیستند.'\n    //         callback.call(context || this, null, [])\n    //         return\n    //       }\n    //       if (coordinates[0][0] === coordinates[1][0] && coordinates[0][1] === coordinates[1][1]) {\n    //         routeError.value = 'شما در محل هستید.'\n    //         callback.call(context || this, null, [])\n    //         return\n    //       }\n    //       fetch(`https://api.openrouteservice.org/v2/directions/${profile}/geojson`, {\n    //         method: 'POST',\n    //         headers: {\n    //           'Content-Type': 'application/json',\n    //           'Authorization': apiKey\n    //         },\n    //         body: JSON.stringify({ coordinates, instructions: false })\n    //       })\n    //       .then(res => res.json())\n    //       .then(data => {\n    //         console.log(data);\n\n    //         const coords = data.features?.[0]?.geometry?.coordinates || []\n    //         const latlngs = coords.map(([lng, lat]) => L.latLng(lat, lng))\n    //         const summary = data.features?.[0]?.properties?.summary || {}\n    //         if (!latlngs.length) {\n    //           routeError.value = 'مسیر یافت نشد.'\n    //           callback.call(context || this, null, [])\n    //           return\n    //         }\n    //         callback.call(context || this, null, [{\n    //           name: '',\n    //           coordinates: latlngs,\n    //           instructions: [],\n    //           summary: {\n    //             totalDistance: summary.distance ?? 0,\n    //             totalTime: summary.duration ?? 0\n    //           }\n    //         }])\n\n    //         // const inputWaypoints = waypoints.map(wp => L.Routing.waypoint(L.latLng(wp.lat, wp.lng)))\n    //         // const route = {\n    //         //   name: '',\n    //         //   coordinates: latlngs,\n    //         //   instructions: [],\n    //         //   summary: {\n    //         //     totalDistance: summary.distance ?? 0,\n    //         //     totalTime: summary.duration ?? 0\n    //         //   },\n    //         //   inputWaypoints: inputWaypoints,\n    //         //   waypoints: latlngs\n    //         // }\n    //         // callback.call(context || this, null, [route])\n    //         routeError.value = null\n    //       })\n    //       .catch(err => {\n    //         console.error('Routing error', err)\n    //         routeError.value = 'خطا در رسم مسیر.'\n    //         callback.call(context || this, err)\n    //       })        \n    //     }\n    //   }\n    // }\n    function drawRoute(from, to) {\n      if (!map.value || !from?.lat || !from?.lon || !to?.lat || !to?.lon) {\n        console.warn('Route not drawn. Invalid coordinates or map not ready.');\n        return;\n      }\n      try {\n        if (routingControl.value) {\n          map.value.removeControl(routingControl.value);\n        }\n        if (from.lat === to.lat && from.lon === to.lon) {\n          routeError.value = 'شما در محل هستید.';\n          return;\n        }\n        routingControl.value = L.Routing.control({\n          waypoints: [L.latLng(from.lat, from.lon), L.latLng(to.lat, to.lon)],\n          router: createORSRouter(ORS_API_KEY),\n          addWaypoints: false,\n          draggableWaypoints: false,\n          routeWhileDragging: false,\n          show: false,\n          createMarker: () => null\n        });\n        routingControl.value.addTo(map.value);\n      } catch (err) {\n        console.warn('Route drawing failed', err);\n        routeError.value = 'خطا در نمایش مسیر.';\n      }\n    }\n    function initMap() {\n      if (map.value) return;\n      map.value = L.map(mapId).setView([props.place.lat, props.place.lon], 13);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n      }).addTo(map.value);\n      const container = document.createElement('div');\n      container.style.maxWidth = '250px';\n      const app = createApp(PlacePopup, {\n        place: props.place\n      });\n      app.component('MediaSlider', MediaSlider);\n      app.mount(container);\n      markerRef.value = L.marker([props.place.lat, props.place.lon], {\n        icon: markerIcon\n      }).addTo(map.value).bindPopup(container).openPopup();\n      drawRoute(props.userCenter, props.place);\n      if (navigator.geolocation) {\n        navigator.geolocation.watchPosition(position => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          map.value.setView([lat, lon], 13);\n          drawRoute({\n            lat,\n            lon\n          }, props.place);\n        }, error => {\n          console.warn('GPS error', error);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 5000,\n          maximumAge: 1000\n        });\n      } else {\n        console.warn('Geolocation is not supported');\n      }\n    }\n    watch(() => props.userCenter, val => {\n      if (map.value && val?.lat && val?.lon) {\n        drawRoute(val, props.place);\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => props.place, val => {\n      if (val?.lat && val?.lon && map.value) {\n        map.value.setView([val.lat, val.lon], 13);\n        if (markerRef.value) {\n          markerRef.value.setLatLng([val.lat, val.lon]);\n        } else {\n          const container = document.createElement('div');\n          container.style.maxWidth = '250px';\n          const app = createApp(PlacePopup, {\n            place: props.place\n          });\n          app.component('MediaSlider', MediaSlider);\n          app.mount(container);\n          markerRef.value = L.marker([val.lat, val.lon], {\n            icon: markerIcon\n          }).addTo(map.value).bindPopup(container).openPopup();\n        }\n        drawRoute(props.userCenter, val);\n      }\n    }, {\n      immediate: true\n    });\n    onMounted(async () => {\n      await nextTick();\n      const el = document.getElementById(mapId);\n      if (!el) {\n        console.warn('Map container not found:', mapId);\n        return;\n      }\n      initMap();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n        id: mapId,\n        class: \"map\"\n      }), routeError.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(routeError.value), 1)) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","createApp","nextTick","MediaSlider","PlacePopup","L","BASE_URL","ORS_API_KEY","props","__props","mapId","Math","random","toString","substring","map","markerRef","routingControl","routeError","markerIcon","icon","iconUrl","iconSize","iconAnchor","createORSRouter","apiKey","profile","route","waypoints","callback","context","inputWaypoints","wp","latLng","Routing","waypoint","lat","lng","length","value","call","fetch","method","headers","body","JSON","stringify","instructions","then","res","json","data","coords","features","geometry","coordinates","summary","properties","latlngs","name","totalDistance","distance","totalTime","duration","console","log","catch","err","error","drawRoute","from","to","lon","warn","removeControl","control","router","addWaypoints","draggableWaypoints","routeWhileDragging","show","createMarker","addTo","initMap","setView","place","tileLayer","attribution","container","document","createElement","style","maxWidth","app","component","mount","marker","bindPopup","openPopup","userCenter","navigator","geolocation","watchPosition","position","latitude","longitude","enableHighAccuracy","timeout","maximumAge","val","immediate","setLatLng","el","getElementById"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/places/SinglePlaceMap.vue"],"sourcesContent":["<script setup>\r\n  import { ref, onMounted, watch, createApp, defineProps, nextTick } from 'vue'\r\n  import MediaSlider from '@/components/tooles/media/MediaSlider.vue'\r\n  import PlacePopup from '@/components/tooles/places/PlacePopup.vue'\r\n  import L from 'leaflet'\r\n  import 'leaflet/dist/leaflet.css'\r\n  import 'leaflet-routing-machine'\r\n  import 'leaflet-routing-machine/dist/leaflet-routing-machine.css'\r\n  import { BASE_URL, ORS_API_KEY } from '@/config'\r\n  const props = defineProps({\r\n    userCenter: { type: Object, required: true },\r\n    place: { type: Object, required: true }\r\n  })\r\n  const mapId = `map-${Math.random().toString(36).substring(2, 10)}`\r\n  const map = ref(null)\r\n  const markerRef = ref(null)\r\n  const routingControl = ref(null)\r\n  const routeError = ref(null)\r\n  const markerIcon = L.icon({\r\n    iconUrl: BASE_URL + '/assets/images/marker.svg',\r\n    iconSize: [32, 32],\r\n    iconAnchor: [16, 32]\r\n  })\r\nfunction createORSRouter(apiKey, profile = 'driving-car') {\r\n  return {\r\n    route(waypoints, callback, context) {\r\n      const inputWaypoints = waypoints.map(wp => {\r\n        if (wp.latLng) {\r\n          return L.Routing.waypoint(wp.latLng)\r\n        }\r\n        return L.Routing.waypoint(L.latLng(wp.lat, wp.lng))\r\n      })\r\n\r\n      // const coordinates = waypoints.map(wp => {\r\n      //   const latlng = wp.latLng || L.latLng(wp.lat, wp.lng)\r\n      //   return [latlng.lng, latlng.lat]\r\n      // })\r\n\r\n      if (inputWaypoints.length < 2) {\r\n        routeError.value = 'مبدا و مقصد مشخص نیستند.'\r\n        callback.call(context || this, null, [])\r\n        return\r\n      }\r\n\r\n      if (inputWaypoints[0][0] === inputWaypoints[1][0] && inputWaypoints[0][1] === inputWaypoints[1][1]) {\r\n        routeError.value = 'شما در محل هستید.'\r\n        callback.call(context || this, null, [])\r\n        return\r\n      }\r\n\r\n      \r\n      fetch(`https://api.openrouteservice.org/v2/directions/${profile}/geojson`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': apiKey\r\n        },\r\n        body: JSON.stringify({ inputWaypoints, instructions: false })\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const coords = data.features?.[0]?.geometry?.coordinates || []\r\n          const summary = data.features?.[0]?.properties?.summary || {}\r\n\r\n          if (!coords.length) {\r\n            routeError.value = 'مسیر یافت نشد.'\r\n            callback.call(context || this, null, [])\r\n            return\r\n          }\r\n\r\n          const latlngs = coords.map(([lng, lat]) => L.latLng(lat, lng))\r\n          const route = {\r\n            name: '',\r\n            coordinates: latlngs,\r\n            instructions: [],\r\n            summary: {\r\n              totalDistance: summary.distance ?? 0,\r\n              totalTime: summary.duration ?? 0\r\n            },\r\n            inputWaypoints: inputWaypoints,\r\n            waypoints: latlngs\r\n          }\r\n          console.log('Final route:', route)\r\n          callback.call(context || this, null, [route])\r\n\r\n          // const route = {\r\n          //   name: '',\r\n          //   coordinates: latlngs,\r\n          //   instructions: [],\r\n          //   summary: {\r\n          //     totalDistance: summary.distance ?? 0,\r\n          //     totalTime: summary.duration ?? 0\r\n          //   },\r\n          //   inputWaypoints: waypoints,\r\n          //   waypoints: latlngs\r\n          // }\r\n\r\n          // callback.call(context || this, null, [route])\r\n          routeError.value = null\r\n        })\r\n        .catch(err => {\r\n          console.error('Routing error', err)\r\n          routeError.value = 'خطا در رسم مسیر.'\r\n          callback.call(context || this, err)\r\n        })\r\n    }\r\n  }\r\n}\r\n\r\n  // function createORSRouter(apiKey, profile = 'driving-car') {\r\n  //   return {\r\n  //     route(waypoints, callback, context) {\r\n  //       const coordinates = waypoints.map(wp => {\r\n  //         const latlng = wp.latLng || L.latLng(wp.lat, wp.lng)\r\n  //         return [latlng.lng, latlng.lat]\r\n  //       })\r\n\r\n  //       if (coordinates.length < 2) {\r\n  //         routeError.value = 'مبدا و مقصد مشخص نیستند.'\r\n  //         callback.call(context || this, null, [])\r\n  //         return\r\n  //       }\r\n\r\n  //       if (coordinates[0][0] === coordinates[1][0] && coordinates[0][1] === coordinates[1][1]) {\r\n  //         routeError.value = 'شما در محل هستید.'\r\n  //         callback.call(context || this, null, [])\r\n  //         return\r\n  //       }\r\n\r\n  //       fetch(`https://api.openrouteservice.org/v2/directions/${profile}/geojson`, {\r\n  //         method: 'POST',\r\n  //         headers: {\r\n  //           'Content-Type': 'application/json',\r\n  //           'Authorization': apiKey\r\n  //         },\r\n  //         body: JSON.stringify({ coordinates, instructions: false })\r\n  //       })\r\n  //       .then(res => res.json())\r\n  //       .then(data => {\r\n  //         const coords = data.features?.[0]?.geometry?.coordinates || []\r\n  //         if (!coords.length) {\r\n  //           routeError.value = 'مسیر یافت نشد.'\r\n  //           callback.call(context || this, null, [])\r\n  //           return\r\n  //         }\r\n    \r\n  //         // فقط مختصات GeoJSON تبدیل به L.LatLng و به صورت route آماده بده\r\n  //         const latlngs = coords.map(([lng, lat]) => L.latLng(lat, lng))\r\n  //         callback.call(context || this, null, [{\r\n  //           name: '',\r\n  //           coordinates: latlngs\r\n  //         }])\r\n  //         routeError.value = null\r\n  //       })\r\n  //       .catch(err => {\r\n  //         console.error('Routing error', err)\r\n  //         routeError.value = 'خطا در رسم مسیر.'\r\n  //         callback.call(context || this, err)\r\n  //       })\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // function createORSRouter(apiKey, profile = 'driving-car') {\r\n  //   return {\r\n  //     route(waypoints, callback, context) {\r\n  //       console.log(waypoints);\r\n        \r\n  //       const coordinates = waypoints.map(wp => {\r\n  //         if (wp.latLng) {\r\n  //           return [wp.latLng.lng, wp.latLng.lat]\r\n  //         }\r\n  //         if (wp.lng !== undefined && wp.lat !== undefined) {\r\n  //           return [wp.lng, wp.lat]\r\n  //         }\r\n  //         return [0, 0]\r\n  //       })\r\n  //       console.log(coordinates);\r\n        \r\n  //       if (coordinates.length < 2) {\r\n  //         routeError.value = 'مبدا و مقصد مشخص نیستند.'\r\n  //         callback.call(context || this, null, [])\r\n  //         return\r\n  //       }\r\n  //       if (coordinates[0][0] === coordinates[1][0] && coordinates[0][1] === coordinates[1][1]) {\r\n  //         routeError.value = 'شما در محل هستید.'\r\n  //         callback.call(context || this, null, [])\r\n  //         return\r\n  //       }\r\n  //       fetch(`https://api.openrouteservice.org/v2/directions/${profile}/geojson`, {\r\n  //         method: 'POST',\r\n  //         headers: {\r\n  //           'Content-Type': 'application/json',\r\n  //           'Authorization': apiKey\r\n  //         },\r\n  //         body: JSON.stringify({ coordinates, instructions: false })\r\n  //       })\r\n  //       .then(res => res.json())\r\n  //       .then(data => {\r\n  //         console.log(data);\r\n          \r\n  //         const coords = data.features?.[0]?.geometry?.coordinates || []\r\n  //         const latlngs = coords.map(([lng, lat]) => L.latLng(lat, lng))\r\n  //         const summary = data.features?.[0]?.properties?.summary || {}\r\n  //         if (!latlngs.length) {\r\n  //           routeError.value = 'مسیر یافت نشد.'\r\n  //           callback.call(context || this, null, [])\r\n  //           return\r\n  //         }\r\n  //         callback.call(context || this, null, [{\r\n  //           name: '',\r\n  //           coordinates: latlngs,\r\n  //           instructions: [],\r\n  //           summary: {\r\n  //             totalDistance: summary.distance ?? 0,\r\n  //             totalTime: summary.duration ?? 0\r\n  //           }\r\n  //         }])\r\n\r\n  //         // const inputWaypoints = waypoints.map(wp => L.Routing.waypoint(L.latLng(wp.lat, wp.lng)))\r\n  //         // const route = {\r\n  //         //   name: '',\r\n  //         //   coordinates: latlngs,\r\n  //         //   instructions: [],\r\n  //         //   summary: {\r\n  //         //     totalDistance: summary.distance ?? 0,\r\n  //         //     totalTime: summary.duration ?? 0\r\n  //         //   },\r\n  //         //   inputWaypoints: inputWaypoints,\r\n  //         //   waypoints: latlngs\r\n  //         // }\r\n  //         // callback.call(context || this, null, [route])\r\n  //         routeError.value = null\r\n  //       })\r\n  //       .catch(err => {\r\n  //         console.error('Routing error', err)\r\n  //         routeError.value = 'خطا در رسم مسیر.'\r\n  //         callback.call(context || this, err)\r\n  //       })        \r\n  //     }\r\n  //   }\r\n  // }\r\n  function drawRoute(from, to) {\r\n    if (!map.value || !from?.lat || !from?.lon || !to?.lat || !to?.lon) {\r\n      console.warn('Route not drawn. Invalid coordinates or map not ready.')\r\n      return\r\n    }\r\n    try {\r\n      if (routingControl.value) {\r\n        map.value.removeControl(routingControl.value)\r\n      }\r\n      if(from.lat===to.lat && from.lon===to.lon){\r\n        routeError.value = 'شما در محل هستید.'\r\n        return\r\n      }\r\n      routingControl.value = L.Routing.control({\r\n        waypoints: [\r\n          L.latLng(from.lat, from.lon),\r\n          L.latLng(to.lat, to.lon)\r\n        ],\r\n        router: createORSRouter(ORS_API_KEY),\r\n        addWaypoints: false,\r\n        draggableWaypoints: false,\r\n        routeWhileDragging: false,\r\n        show: false,\r\n        createMarker: () => null\r\n      })\r\n      routingControl.value.addTo(map.value)\r\n    } catch (err) {\r\n      console.warn('Route drawing failed', err)\r\n      routeError.value = 'خطا در نمایش مسیر.'\r\n    }\r\n  }\r\n  function initMap() {\r\n    if (map.value) return\r\n    map.value = L.map(mapId).setView([props.place.lat, props.place.lon], 13)\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; OpenStreetMap contributors'\r\n    }).addTo(map.value)\r\n    const container = document.createElement('div')\r\n    container.style.maxWidth = '250px'\r\n    const app = createApp(PlacePopup, { place: props.place })\r\n    app.component('MediaSlider', MediaSlider)\r\n    app.mount(container)\r\n    markerRef.value = L.marker([props.place.lat, props.place.lon], { icon: markerIcon })\r\n      .addTo(map.value)\r\n      .bindPopup(container)\r\n      .openPopup()\r\n    drawRoute(props.userCenter, props.place)\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.watchPosition(\r\n        position => {\r\n          const lat = position.coords.latitude\r\n          const lon = position.coords.longitude\r\n          map.value.setView([lat, lon], 13)\r\n          drawRoute({ lat, lon }, props.place)\r\n        },\r\n        error => {\r\n          console.warn('GPS error', error)\r\n        },\r\n        {\r\n          enableHighAccuracy: true,\r\n          timeout: 5000,\r\n          maximumAge: 1000\r\n        }\r\n      )\r\n    } else {\r\n      console.warn('Geolocation is not supported')\r\n    }\r\n  }\r\n  watch(\r\n    () => props.userCenter,\r\n    val => {\r\n      if (map.value && val?.lat && val?.lon) {\r\n        drawRoute(val, props.place)\r\n      }\r\n    },\r\n    { immediate: true }\r\n  )\r\n  watch(\r\n    () => props.place,\r\n    val => {\r\n      if (val?.lat && val?.lon && map.value) {\r\n        map.value.setView([val.lat, val.lon], 13)\r\n        if (markerRef.value) {\r\n          markerRef.value.setLatLng([val.lat, val.lon])\r\n        } else {\r\n          const container = document.createElement('div')\r\n          container.style.maxWidth = '250px'\r\n          const app = createApp(PlacePopup, { place: props.place })\r\n          app.component('MediaSlider', MediaSlider)\r\n          app.mount(container)\r\n          markerRef.value = L.marker([val.lat, val.lon], { icon: markerIcon })\r\n            .addTo(map.value)\r\n            .bindPopup(container).openPopup()\r\n        }\r\n        drawRoute(props.userCenter, val)\r\n      }\r\n    },\r\n    { immediate: true }\r\n  )\r\n  onMounted(async () => {\r\n    await nextTick()\r\n    const el = document.getElementById(mapId)\r\n    if (!el) {\r\n      console.warn('Map container not found:', mapId)\r\n      return\r\n    }\r\n    initMap()\r\n  })\r\n</script>\r\n<template>\r\n  <div class=\"map-wrapper\">\r\n    <div :id=\"mapId\" class=\"map\"></div>\r\n    <div v-if=\"routeError\" class=\"error\">{{ routeError }}</div>\r\n  </div>\r\n</template>\r\n<style scoped>\r\n  .map-wrapper {\r\n    width: 100%;\r\n    height: 400px;\r\n    position: relative;\r\n  }\r\n  .map {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n    z-index: 1;\r\n  }\r\n  .error {\r\n    position: absolute;\r\n    bottom: 10px;\r\n    right: 10px;\r\n    background: #ffdddd;\r\n    color: #d00;\r\n    padding: 6px 12px;\r\n    border-radius: 6px;\r\n    font-size: 0.85rem;\r\n    z-index: 9999;\r\n  }\r\n</style>"],"mappings":"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ACG,GAAG,EAAEC,GAAG,CAAC,CAAC;YAC9D,MAAMV,KAAK,GAAG;cACZgC,IAAI,EAAE,EAAE;cACRJ,WAAW,EAAEG,OAAO;cACpBX,YAAY,EAAE,EAAE;cAChBS,OAAO,EAAE;gBACPI,aAAa,EAAEJ,OAAO,CAACK,QAAQ,IAAI,CAAC;gBACpCC,SAAS,EAAEN,OAAO,CAACO,QAAQ,IAAI;cACjC,CAAC;cACDhC,cAAc,EAAEA,cAAc;cAC9BH,SAAS,EAAE8B;YACb,CAAC;YACDM,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEtC,KAAK,CAAC;YAClCE,QAAQ,CAACW,IAAI,CAACV,OAAO,IAAI,IAAI,EAAE,IAAI,EAAE,CAACH,KAAK,CAAC,CAAC;;YAE7C;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;;YAEA;YACAT,UAAU,CAACqB,KAAK,GAAG,IAAI;UACzB,CAAC,CAAC,CACD2B,KAAK,CAACC,GAAG,IAAI;YACZH,OAAO,CAACI,KAAK,CAAC,eAAe,EAAED,GAAG,CAAC;YACnCjD,UAAU,CAACqB,KAAK,GAAG,kBAAkB;YACrCV,QAAQ,CAACW,IAAI,CAACV,OAAO,IAAI,IAAI,EAAEqC,GAAG,CAAC;UACrC,CAAC,CAAC;QACN;MACF,CAAC;IACH;;IAEE;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}