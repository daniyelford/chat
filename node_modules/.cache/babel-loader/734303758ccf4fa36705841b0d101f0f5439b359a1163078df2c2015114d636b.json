{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-inner\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"msg\"\n};\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"msg\"\n};\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.step === 1 ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.submitPhone && $options.submitPhone(...args), [\"prevent\"]))\n  }, [$data.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.message), 1)) : _createCommentVNode(\"\", true), _cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"phone\"\n  }, \"شماره تلفن\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"phone\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.phone = $event),\n    type: \"tel\",\n    maxlength: \"11\",\n    pattern: \"[0-9]*\",\n    placeholder: \"09123456789\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.phone]]), $data.showSend ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    disabled: $data.submitDisabled,\n    type: \"submit\"\n  }, [_cache[6] || (_cache[6] = _createTextVNode(\" ارسال \")), $data.submitDisabled ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"(\" + _toDisplayString($data.submitCountdown) + \" ثانیه)\", 1)) : _createCommentVNode(\"\", true)], 8, _hoisted_3)) : _createCommentVNode(\"\", true)], 32)) : $data.step === 2 ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 1,\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.submitCode && $options.submitCode(...args), [\"prevent\"]))\n  }, [$data.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.message), 1)) : _createCommentVNode(\"\", true), _cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"code\"\n  }, \"کد پیامک شده\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"code\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.code = $event),\n    type: \"text\",\n    placeholder: \"کد تأیید\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.code]]), _cache[10] || (_cache[10] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"تأیید کد\", -1)), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.editPhone && $options.editPhone(...args))\n  }, \" ویرایش شماره \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.resendCode && $options.resendCode(...args)),\n    disabled: $data.resendDisabled\n  }, [_cache[8] || (_cache[8] = _createTextVNode(\" ارسال مجدد کد \")), $data.resendDisabled ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"(\" + _toDisplayString($data.countdown) + \" ثانیه)\", 1)) : _createCommentVNode(\"\", true)], 8, _hoisted_6)], 32)) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","step","onSubmit","_cache","_withModifiers","args","$options","submitPhone","message","_hoisted_2","_toDisplayString","_createCommentVNode","_createElementVNode","for","id","$event","phone","type","maxlength","pattern","placeholder","required","showSend","disabled","submitDisabled","_createTextVNode","_hoisted_4","submitCountdown","_hoisted_3","submitCode","_hoisted_5","code","onClick","editPhone","resendCode","resendDisabled","_hoisted_7","countdown","_hoisted_6"],"sources":["D:\\GitHub\\ci3-vue3\\vue3\\src\\components\\home\\PhoneLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-inner\">\r\n    <form v-if=\"step === 1\" @submit.prevent=\"submitPhone\">\r\n      <p class=\"msg\" v-if=\"message\">{{ message }}</p>\r\n      <label for=\"phone\">شماره تلفن</label>\r\n      <input\r\n        id=\"phone\"\r\n        v-model=\"phone\"\r\n        type=\"tel\"\r\n        maxlength=\"11\"\r\n        pattern=\"[0-9]*\"\r\n        placeholder=\"09123456789\"\r\n        required\r\n      />\r\n      <button v-if=\"showSend\" :disabled=\"submitDisabled\" type=\"submit\">\r\n        ارسال\r\n        <span v-if=\"submitDisabled\">({{ submitCountdown }} ثانیه)</span>\r\n      </button>\r\n    </form>\r\n\r\n    <form v-else-if=\"step === 2\" @submit.prevent=\"submitCode\">\r\n      <p class=\"msg\" v-if=\"message\">{{ message }}</p>\r\n      <label for=\"code\">کد پیامک شده</label>\r\n      <input\r\n        id=\"code\"\r\n        v-model=\"code\"\r\n        type=\"text\"\r\n        placeholder=\"کد تأیید\"\r\n        required\r\n      />\r\n      <button type=\"submit\">تأیید کد</button>\r\n      <button type=\"button\" @click=\"editPhone\">\r\n        ویرایش شماره\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        @click=\"resendCode\"\r\n        :disabled=\"resendDisabled\"\r\n      >\r\n        ارسال مجدد کد\r\n        <span v-if=\"resendDisabled\">({{ countdown }} ثانیه)</span>\r\n      </button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { sendApi } from '@/utils/api'\r\n\r\nexport default {\r\n  name: 'PhoneLogin',\r\n  data() {\r\n    return {\r\n      phone: '',\r\n      code: '',\r\n      message: '',\r\n      step: 1,\r\n      sentOnce: false,\r\n      showSend: false,\r\n      resendDisabled: true,\r\n      countdown: 120,\r\n      countdownInterval: null,\r\n      submitDisabled: false,\r\n      submitCountdown: 60,\r\n      submitInterval: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    const savedPhone = sessionStorage.getItem('phone')\r\n    const sentAt = sessionStorage.getItem('sent_at')\r\n    if (savedPhone && sentAt) {\r\n      const elapsed = Math.floor((Date.now() - Number(sentAt)) / 1000)\r\n      if (elapsed < 300) {\r\n        this.phone = savedPhone\r\n        this.step = 2\r\n        this.showSend = true\r\n        this.sentOnce = true\r\n        this.startCountdown(120 - elapsed)\r\n      } else {\r\n        sessionStorage.removeItem('phone')\r\n        sessionStorage.removeItem('sent_at')\r\n      }\r\n    }\r\n    const submitLockedAt = localStorage.getItem('submit_locked_at')\r\n    const submitCountdownStored = localStorage.getItem('submit_countdown')\r\n    if (submitLockedAt && submitCountdownStored) {\r\n      const submitElapsed = Math.floor((Date.now() - Number(submitLockedAt)) / 1000)\r\n      const remaining = Number(submitCountdownStored) - submitElapsed\r\n      if (remaining > 0) {\r\n        this.startSubmitLock(remaining)\r\n      } else {\r\n        localStorage.removeItem('submit_locked_at')\r\n        localStorage.removeItem('submit_countdown')\r\n      }\r\n    }\r\n  },\r\n  // only check phone and time for send\r\n  watch: {\r\n    phone: {\r\n      handler: async function (newVal) {\r\n        const isValid = /^09\\d{9}$/.test(newVal)\r\n        if (isValid && !this.sentOnce) {\r\n          try {\r\n            const response = await sendApi({ \r\n              action: 'save_phone',\r\n              data: newVal,\r\n              control:'login'\r\n            })\r\n            if (response.status === 'success') {\r\n              this.sentOnce = true\r\n              this.showSend = true\r\n              this.$emit('validPhone', true)\r\n            }\r\n          } catch (e) {\r\n            console.error('خطا در ارسال شماره:', e)\r\n          }\r\n        } else if (!isValid && this.sentOnce) {\r\n          try {\r\n            const responseDel = await sendApi({ \r\n              control:'security',\r\n              action: 'delete_phone'\r\n            })\r\n            if (responseDel.status === 'success') {\r\n              this.sentOnce = false\r\n              this.showSend = false\r\n              this.$emit('validPhone', false)\r\n            }\r\n          } catch (e) {\r\n            console.error('خطا در حذف شماره:', e)\r\n          }\r\n        }\r\n      },\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    \r\n    startCountdown(seconds = 120) {\r\n      this.resendDisabled = true\r\n      this.countdown = seconds\r\n      if (this.countdownInterval) clearInterval(this.countdownInterval)\r\n      this.countdownInterval = setInterval(() => {\r\n        this.countdown--\r\n        if (this.countdown <= 0) {\r\n          this.resendDisabled = false\r\n          clearInterval(this.countdownInterval)\r\n        }\r\n      }, 1000)\r\n    },\r\n    startSubmitLock(seconds = 60) {\r\n      this.submitDisabled = true\r\n      this.submitCountdown = seconds\r\n      localStorage.setItem('submit_locked_at', Date.now().toString())\r\n      localStorage.setItem('submit_countdown', this.submitCountdown.toString())\r\n      if (this.submitInterval) clearInterval(this.submitInterval)\r\n      this.submitInterval = setInterval(() => {\r\n        this.submitCountdown--\r\n        localStorage.setItem('submit_countdown', this.submitCountdown.toString())\r\n        if (this.submitCountdown <= 0) {\r\n          this.submitDisabled = false\r\n          clearInterval(this.submitInterval)\r\n          localStorage.removeItem('submit_locked_at')\r\n          localStorage.removeItem('submit_countdown')\r\n        }\r\n      }, 1000)\r\n    },\r\n    async submitPhone() {\r\n      if (this.submitDisabled) return\r\n      try {\r\n        const response = await sendApi({ \r\n          action: 'send_phone_login',\r\n          data: this.phone,\r\n          control:'login'\r\n         })\r\n        if (response.status === 'success') {\r\n          this.message = 'شماره با موفقیت ارسال شد. لطفاً کد پیامکی را وارد کنید.'\r\n          this.step = 2\r\n          this.showSend = true\r\n          this.sentOnce = true\r\n          this.startCountdown()\r\n          this.startSubmitLock()\r\n          sessionStorage.setItem('phone', this.phone)\r\n          sessionStorage.setItem('sent_at', Date.now().toString())\r\n        } else {\r\n          this.message = response.message || 'ارسال موفق نبود'\r\n        }\r\n      } catch (error) {\r\n        this.message = 'خطا در ارسال شماره.'\r\n        console.error(error)\r\n      }\r\n    },\r\n    async submitCode() {\r\n      try {\r\n        const response = await sendApi(\r\n          {\r\n            action: 'verify_sms_code',\r\n            data: { phone: this.phone, code: this.code },\r\n            control:'login'\r\n          }\r\n        )\r\n        if (response.status === 'success') {\r\n          sessionStorage.removeItem('phone')\r\n          sessionStorage.removeItem('sent_at')\r\n          localStorage.removeItem('submit_locked_at')\r\n          localStorage.removeItem('submit_countdown')\r\n          if (response.url === 'dashboard') {\r\n            localStorage.setItem('isLogin', true);\r\n            window.dispatchEvent(new Event(\"storage\"));\r\n            this.$router.push({ name: 'dashboard' })\r\n          } else if (response.url === 'register') {\r\n            this.$router.push({ name: 'register' })\r\n          } else {\r\n            this.message = 'مشخصات ناقص است. لطفاً دوباره تلاش کنید.'\r\n          }\r\n        } else {\r\n          this.message = 'کد وارد شده اشتباه است.'\r\n        }\r\n      } catch (error) {\r\n        this.message = 'خطا در تأیید کد.'\r\n        console.error(error)\r\n      }\r\n    },\r\n    editPhone() {\r\n      this.step = 1\r\n      this.message = ''\r\n      this.code = ''\r\n      this.sentOnce = false\r\n      this.showSend = true\r\n      sessionStorage.removeItem('phone')\r\n      sessionStorage.removeItem('sent_at')\r\n      if (this.countdownInterval) clearInterval(this.countdownInterval)\r\n      localStorage.removeItem('submit_locked_at')\r\n      localStorage.removeItem('submit_countdown')\r\n      this.startSubmitLock()\r\n    },\r\n    async resendCode() {\r\n      if (this.resendDisabled) return\r\n      try {\r\n        const response = await sendApi({ \r\n          action: 'send_phone_login',\r\n          data: this.phone,\r\n          control:'login'\r\n        })\r\n        if (response.status === 'success') {\r\n          this.message = 'کد مجدداً ارسال شد.'\r\n          this.startCountdown()\r\n          sessionStorage.setItem('sent_at', Date.now().toString())\r\n        } else {\r\n          this.message = response.message || 'ارسال مجدد موفق نبود'\r\n        }\r\n      } catch (error) {\r\n        this.message = 'خطا در ارسال مجدد کد.'\r\n        console.error(error)\r\n      }\r\n    },\r\n  },\r\n  beforeUnmount() {\r\n    if (this.countdownInterval) clearInterval(this.countdownInterval)\r\n    if (this.submitInterval) clearInterval(this.submitInterval)\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .login-inner{\r\n    border-radius: 10px;\r\n    background: #e0e4ed;\r\n    padding: 20px;\r\n    box-shadow: 0 0 10px grey;\r\n  }\r\n  form {\r\n    max-width: 300px;\r\n    margin: auto;\r\n  }\r\n  .msg{\r\n    border-radius: 10px;\r\n    background-color: rgb(102, 255, 0);\r\n    color: rgb(174, 182, 130);\r\n    padding: 10px;\r\n    text-align: center;\r\n    margin: 5px auto;\r\n  }\r\n  label,\r\n  input,\r\n  button {\r\n    display: block;\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n  }\r\n  label{\r\n    text-align: center;\r\n  }\r\n  button{\r\n    background-color: green;\r\n    color: white;\r\n    padding: 9px;\r\n    border-radius: 10px;\r\n    border: none;\r\n    margin-top: 10px;\r\n  }\r\n  button:nth-child(2),button:nth-child(3){\r\n    width: 50%;\r\n    display: inline-block;\r\n  }\r\n  button[disabled] {\r\n    opacity: 0.6;\r\n    background-color: rgb(143, 141, 141);\r\n    cursor: not-allowed;\r\n  }\r\n  input {\r\n    box-sizing: border-box;\r\n    padding: 7px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 10px;\r\n    background-color: #edefff;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}