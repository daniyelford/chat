{"ast":null,"code":"import { createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nimport { onMounted, onUnmounted, ref, computed } from 'vue';\nimport { useWalletStore } from '@/stores/walletStore';\nconst perPage = 5;\nexport default {\n  __name: 'TransactionsSection',\n  setup(__props) {\n    const store = useWalletStore();\n    const currentPage = ref(1);\n    let pollingInterval = null;\n\n    // onMounted(async () => {\n    //   if (!store.transactionsLoaded) await store.fetchTransactions()\n    //   store.startPolling()\n    // })\n    // onUnmounted(() => {\n    //   store.stopPolling()\n    // })\n    const paginatedTransactions = computed(() => {\n      return store.transactions.slice(0, currentPage.value * perPage);\n    });\n    const hasMore = computed(() => {\n      return store.transactions.length > paginatedTransactions.value.length;\n    });\n    const loadMore = () => {\n      currentPage.value++;\n    };\n    const startPolling = () => {\n      if (pollingInterval) return;\n      store.fetchTransactions();\n      pollingInterval = setInterval(() => {\n        store.fetchData();\n      }, 10000);\n    };\n    const stopPolling = () => {\n      clearInterval(pollingInterval);\n      pollingInterval = null;\n    };\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        startPolling();\n      } else {\n        stopPolling();\n      }\n    };\n    onMounted(() => {\n      document.addEventListener('visibilitychange', handleVisibilityChange);\n      if (document.visibilityState === 'visible') {\n        startPolling();\n      }\n    });\n    onUnmounted(() => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      stopPolling();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"لیست تراکنش‌ها\", -1)), _unref(store).transactions.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"تراکنشی وجود ندارد.\")) : _createCommentVNode(\"\", true), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(paginatedTransactions.value, tx => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: tx.id\n        }, _toDisplayString(tx.amount) + \" تومان - \" + _toDisplayString(tx.type), 1);\n      }), 128))]), hasMore.value ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        onClick: loadMore\n      }, \"نمایش بیشتر\")) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["onMounted","onUnmounted","ref","computed","useWalletStore","perPage","store","currentPage","pollingInterval","paginatedTransactions","transactions","slice","value","hasMore","length","loadMore","startPolling","fetchTransactions","setInterval","fetchData","stopPolling","clearInterval","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/dashboard/pagesContent/wallet/TransactionsSection.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h3>لیست تراکنش‌ها</h3>\r\n    <div v-if=\"store.transactions.length === 0\">تراکنشی وجود ندارد.</div>\r\n    <ul>\r\n      <li v-for=\"tx in paginatedTransactions\" :key=\"tx.id\">\r\n        {{ tx.amount }} تومان - {{ tx.type }}\r\n      </li>\r\n    </ul>\r\n    <button v-if=\"hasMore\" @click=\"loadMore\">نمایش بیشتر</button>\r\n  </div>\r\n</template>\r\n<script setup>\r\n  import { onMounted, onUnmounted, ref, computed } from 'vue'\r\n  import { useWalletStore } from '@/stores/walletStore'\r\n  const store = useWalletStore()\r\n  const currentPage = ref(1)\r\n  const perPage = 5\r\n  let pollingInterval = null\r\n\r\n  // onMounted(async () => {\r\n  //   if (!store.transactionsLoaded) await store.fetchTransactions()\r\n  //   store.startPolling()\r\n  // })\r\n  // onUnmounted(() => {\r\n  //   store.stopPolling()\r\n  // })\r\n  const paginatedTransactions = computed(() => {\r\n    return store.transactions.slice(0, currentPage.value * perPage)\r\n  })\r\n  const hasMore = computed(() => {\r\n    return store.transactions.length > paginatedTransactions.value.length\r\n  })\r\n  const loadMore = () => {\r\n    currentPage.value++\r\n  }\r\n  \r\n  const startPolling = () => {\r\n    if (pollingInterval) return\r\n    store.fetchTransactions()\r\n    pollingInterval = setInterval(() => {\r\n      store.fetchData()\r\n    }, 10000)\r\n  }\r\n\r\n  const stopPolling = () => {\r\n    clearInterval(pollingInterval)\r\n    pollingInterval = null\r\n  }\r\n\r\n  const handleVisibilityChange = () => {\r\n    if (document.visibilityState === 'visible') {\r\n      startPolling()\r\n    } else {\r\n      stopPolling()\r\n    }\r\n  }\r\n\r\n  onMounted(() => {\r\n    document.addEventListener('visibilitychange', handleVisibilityChange)\r\n    if (document.visibilityState === 'visible') {\r\n      startPolling()\r\n    }\r\n  })\r\n\r\n  onUnmounted(() => {\r\n    document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n    stopPolling()\r\n  })\r\n  \r\n</script>"],"mappings":";;;;AAaE,SAASA,SAAS,EAAEC,WAAW,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AAC3D,SAASC,cAAc,QAAQ,sBAAsB;AAGrD,MAAMC,OAAO,GAAG,CAAC;;;;IAFjB,MAAMC,KAAK,GAAGF,cAAc,CAAC,CAAC;IAC9B,MAAMG,WAAW,GAAGL,GAAG,CAAC,CAAC,CAAC;IAE1B,IAAIM,eAAe,GAAG,IAAI;;IAE1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,qBAAqB,GAAGN,QAAQ,CAAC,MAAM;MAC3C,OAAOG,KAAK,CAACI,YAAY,CAACC,KAAK,CAAC,CAAC,EAAEJ,WAAW,CAACK,KAAK,GAAGP,OAAO,CAAC;IACjE,CAAC,CAAC;IACF,MAAMQ,OAAO,GAAGV,QAAQ,CAAC,MAAM;MAC7B,OAAOG,KAAK,CAACI,YAAY,CAACI,MAAM,GAAGL,qBAAqB,CAACG,KAAK,CAACE,MAAM;IACvE,CAAC,CAAC;IACF,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACrBR,WAAW,CAACK,KAAK,EAAE;IACrB,CAAC;IAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIR,eAAe,EAAE;MACrBF,KAAK,CAACW,iBAAiB,CAAC,CAAC;MACzBT,eAAe,GAAGU,WAAW,CAAC,MAAM;QAClCZ,KAAK,CAACa,SAAS,CAAC,CAAC;MACnB,CAAC,EAAE,KAAK,CAAC;IACX,CAAC;IAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxBC,aAAa,CAACb,eAAe,CAAC;MAC9BA,eAAe,GAAG,IAAI;IACxB,CAAC;IAED,MAAMc,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAIC,QAAQ,CAACC,eAAe,KAAK,SAAS,EAAE;QAC1CR,YAAY,CAAC,CAAC;MAChB,CAAC,MAAM;QACLI,WAAW,CAAC,CAAC;MACf;IACF,CAAC;IAEDpB,SAAS,CAAC,MAAM;MACduB,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,EAAEH,sBAAsB,CAAC;MACrE,IAAIC,QAAQ,CAACC,eAAe,KAAK,SAAS,EAAE;QAC1CR,YAAY,CAAC,CAAC;MAChB;IACF,CAAC,CAAC;IAEFf,WAAW,CAAC,MAAM;MAChBsB,QAAQ,CAACG,mBAAmB,CAAC,kBAAkB,EAAEJ,sBAAsB,CAAC;MACxEF,WAAW,CAAC,CAAC;IACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}