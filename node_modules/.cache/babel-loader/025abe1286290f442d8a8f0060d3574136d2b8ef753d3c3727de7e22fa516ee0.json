{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { defineStore } from 'pinia';\nimport { sendApi } from '@/utils/api';\nexport const useNewsStore = defineStore('news', {\n  state: () => ({\n    cards: [],\n    lastUpdate: null,\n    isLoaded: false,\n    hasRule: false\n  }),\n  actions: {\n    async fetchNews() {\n      const res = await sendApi({\n        action: 'get_news',\n        control: 'news'\n      });\n      if (res.status === 'success') {\n        const newCards = res.data.map(item => ({\n          id: item.id,\n          location: item.location,\n          category: item.category ?? 'کلی',\n          description: item.description,\n          created_at: item.created_at,\n          medias: item.media.map(media => ({\n            type: media.type,\n            url: media.url\n          }))\n        }));\n        this.hasRule = res.rule;\n        const changed = JSON.stringify(newCards) !== JSON.stringify(this.cards);\n        if (changed) {\n          this.cards = newCards;\n          this.lastUpdate = new Date().toISOString();\n        }\n        this.isLoaded = true;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sendApi","useNewsStore","state","cards","lastUpdate","isLoaded","hasRule","actions","fetchNews","res","action","control","status","newCards","data","map","item","id","location","category","description","created_at","medias","media","type","url","rule","changed","JSON","stringify","Date","toISOString"],"sources":["D:/GitHub/ci3-vue3/vue3/src/stores/news.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { sendApi } from '@/utils/api'\r\n\r\nexport const useNewsStore = defineStore('news', {\r\n  state: () => ({\r\n    cards: [],\r\n    lastUpdate: null,\r\n    isLoaded: false,\r\n    hasRule:false\r\n  }),\r\n  actions: {\r\n    async fetchNews() {\r\n      const res = await sendApi({ action: 'get_news', control: 'news' })\r\n      if (res.status === 'success') {\r\n        const newCards = res.data.map(item => ({\r\n          id: item.id,\r\n          location: item.location,\r\n          category: item.category ?? 'کلی',\r\n          description: item.description,\r\n          created_at: item.created_at,\r\n          medias: item.media.map(media => ({\r\n            type: media.type,\r\n            url: media.url \r\n          })),\r\n        }))\r\n        this.hasRule=res.rule\r\n        const changed = JSON.stringify(newCards) !== JSON.stringify(this.cards)\r\n        if (changed) {\r\n          this.cards = newCards\r\n          this.lastUpdate = new Date().toISOString()\r\n        }\r\n        this.isLoaded=true\r\n      }\r\n    }\r\n  }\r\n})\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC,MAAM,EAAE;EAC9CG,KAAK,EAAEA,CAAA,MAAO;IACZC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,KAAK;IACfC,OAAO,EAAC;EACV,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,MAAMC,GAAG,GAAG,MAAMT,OAAO,CAAC;QAAEU,MAAM,EAAE,UAAU;QAAEC,OAAO,EAAE;MAAO,CAAC,CAAC;MAClE,IAAIF,GAAG,CAACG,MAAM,KAAK,SAAS,EAAE;QAC5B,MAAMC,QAAQ,GAAGJ,GAAG,CAACK,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;UACrCC,EAAE,EAAED,IAAI,CAACC,EAAE;UACXC,QAAQ,EAAEF,IAAI,CAACE,QAAQ;UACvBC,QAAQ,EAAEH,IAAI,CAACG,QAAQ,IAAI,KAAK;UAChCC,WAAW,EAAEJ,IAAI,CAACI,WAAW;UAC7BC,UAAU,EAAEL,IAAI,CAACK,UAAU;UAC3BC,MAAM,EAAEN,IAAI,CAACO,KAAK,CAACR,GAAG,CAACQ,KAAK,KAAK;YAC/BC,IAAI,EAAED,KAAK,CAACC,IAAI;YAChBC,GAAG,EAAEF,KAAK,CAACE;UACb,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAACnB,OAAO,GAACG,GAAG,CAACiB,IAAI;QACrB,MAAMC,OAAO,GAAGC,IAAI,CAACC,SAAS,CAAChB,QAAQ,CAAC,KAAKe,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC1B,KAAK,CAAC;QACvE,IAAIwB,OAAO,EAAE;UACX,IAAI,CAACxB,KAAK,GAAGU,QAAQ;UACrB,IAAI,CAACT,UAAU,GAAG,IAAI0B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC5C;QACA,IAAI,CAAC1B,QAAQ,GAAC,IAAI;MACpB;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}