{"ast":null,"code":"// import axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      users: [],\n      categories: [],\n      form: {\n        id: null,\n        name: \"\",\n        category_id: null,\n        status: \"active\"\n      }\n    };\n  },\n  mounted() {\n    // this.getUsers();\n    // this.getCategories();\n  },\n  methods: {\n    async getUsers() {\n      // const res = await axios.get(\"/api/users\");\n      // this.users = res.data;\n    },\n    async getCategories() {\n      // const res = await axios.get(\"/api/categories\");\n      // this.categories = res.data;\n    },\n    async saveUser() {\n      if (this.form.id) {\n        // await axios.put(`/api/users/update/${this.form.id}`, this.form);\n      } else {\n        // await axios.post(`/api/users/store`, this.form);\n      }\n      // this.resetForm();\n      // this.getUsers();\n    },\n    editUser(u) {\n      this.form = {\n        ...u\n      };\n    },\n    async banUser(id) {\n      // await axios.post(`/api/users/ban/${id}`);\n      this.getUsers();\n    },\n    async deleteUser(id) {\n      if (confirm(\"ÿ¢€åÿß ŸÖÿ∑ŸÖÿ¶ŸÜ Ÿáÿ≥ÿ™€åÿØÿü\")) {\n        // await axios.delete(`/api/users/delete/${id}`);\n        // this.getUsers();\n      }\n    },\n    resetForm() {\n      this.form = {\n        id: null,\n        name: \"\",\n        category_id: null,\n        status: \"active\"\n      };\n    }\n  }\n};","map":{"version":3,"names":["data","users","categories","form","id","name","category_id","status","mounted","methods","getUsers","getCategories","saveUser","editUser","u","banUser","deleteUser","confirm","resetForm"],"sources":["D:\\GitHub\\chat\\vue3\\src\\components\\tooles\\users\\UsersSettingList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>ŸÖÿØ€åÿ±€åÿ™ ⁄©ÿßÿ±ÿ®ÿ±ÿßŸÜ</h1>\r\n\r\n    <!-- ŸÅÿ±ŸÖ -->\r\n    <form @submit.prevent=\"saveUser\">\r\n      <input v-model=\"form.name\" placeholder=\"ŸÜÿßŸÖ ⁄©ÿßÿ±ÿ®ÿ±\" required />\r\n      <select v-model=\"form.category_id\">\r\n        <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.id\">\r\n          {{ cat.name }}\r\n        </option>\r\n      </select>\r\n      <button type=\"submit\">{{ form.id ? 'Ÿà€åÿ±ÿß€åÿ¥' : 'ÿßŸÅÿ≤ŸàÿØŸÜ' }}</button>\r\n    </form>\r\n\r\n    <!-- ÿ¨ÿØŸàŸÑ -->\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>ŸÜÿßŸÖ</th>\r\n          <th>ÿØÿ≥ÿ™Ÿá‚Äåÿ®ŸÜÿØ€å</th>\r\n          <th>Ÿàÿ∂ÿπ€åÿ™</th>\r\n          <th>ÿπŸÖŸÑ€åÿßÿ™</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"u in users\" :key=\"u.id\">\r\n          <td>{{ u.name }}</td>\r\n          <td>{{ u.category_name }}</td>\r\n          <td>{{ u.status }}</td>\r\n          <td>\r\n            <button @click=\"editUser(u)\">‚úèÔ∏è</button>\r\n            <button @click=\"banUser(u.id)\">üö´</button>\r\n            <button @click=\"deleteUser(u.id)\">üóëÔ∏è</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: [],\r\n      categories: [],\r\n      form: { id: null, name: \"\", category_id: null, status: \"active\" }\r\n    };\r\n  },\r\n  mounted() {\r\n    // this.getUsers();\r\n    // this.getCategories();\r\n  },\r\n  methods: {\r\n    async getUsers() {\r\n      // const res = await axios.get(\"/api/users\");\r\n      // this.users = res.data;\r\n    },\r\n    async getCategories() {\r\n      // const res = await axios.get(\"/api/categories\");\r\n      // this.categories = res.data;\r\n    },\r\n    async saveUser() {\r\n      if (this.form.id) {\r\n        // await axios.put(`/api/users/update/${this.form.id}`, this.form);\r\n      } else {\r\n        // await axios.post(`/api/users/store`, this.form);\r\n      }\r\n      // this.resetForm();\r\n      // this.getUsers();\r\n    },\r\n    editUser(u) {\r\n      this.form = { ...u };\r\n    },\r\n    async banUser(id) {\r\n      // await axios.post(`/api/users/ban/${id}`);\r\n      this.getUsers();\r\n    },\r\n    async deleteUser(id) {\r\n      if (confirm(\"ÿ¢€åÿß ŸÖÿ∑ŸÖÿ¶ŸÜ Ÿáÿ≥ÿ™€åÿØÿü\")) {\r\n        // await axios.delete(`/api/users/delete/${id}`);\r\n        // this.getUsers();\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.form = { id: null, name: \"\", category_id: null, status: \"active\" };\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA0CA;;AAEA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE;QAAEC,EAAE,EAAE,IAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAS;IAClE,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA;EAAA,CACD;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf;MACA;IAAA,CACD;IACD,MAAMC,aAAaA,CAAA,EAAG;MACpB;MACA;IAAA,CACD;IACD,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,IAAI,CAACT,IAAI,CAACC,EAAE,EAAE;QAChB;MAAA,CACF,MAAO;QACL;MAAA;MAEF;MACA;IACF,CAAC;IACDS,QAAQA,CAACC,CAAC,EAAE;MACV,IAAI,CAACX,IAAG,GAAI;QAAE,GAAGW;MAAE,CAAC;IACtB,CAAC;IACD,MAAMC,OAAOA,CAACX,EAAE,EAAE;MAChB;MACA,IAAI,CAACM,QAAQ,CAAC,CAAC;IACjB,CAAC;IACD,MAAMM,UAAUA,CAACZ,EAAE,EAAE;MACnB,IAAIa,OAAO,CAAC,kBAAkB,CAAC,EAAE;QAC/B;QACA;MAAA;IAEJ,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACf,IAAG,GAAI;QAAEC,EAAE,EAAE,IAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAS,CAAC;IACzE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}