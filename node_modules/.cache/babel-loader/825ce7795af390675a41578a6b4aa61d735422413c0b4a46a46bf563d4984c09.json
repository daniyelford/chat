{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"direction\": \"rtl\",\n    \"text-align\": \"center\",\n    \"max-width\": \"250px\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin-bottom\": \"5px\"\n  }\n};\nconst _hoisted_3 = {\n  key: 0,\n  style: {\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"margin\": \"5px 0\",\n    \"padding\": \"0\",\n    \"list-style\": \"none\"\n  }\n};\nconst _hoisted_4 = {\n  style: {\n    \"margin\": \"5px 0\"\n  }\n};\nimport MediaSlider from '@/components/tooles/media/MediaSlider.vue';\nexport default {\n  __name: 'PlacePopup',\n  props: {\n    place: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const truncateText = (text, max = 50) => {\n      if (!text) return '';\n      return text.length > max ? text.slice(0, max) + '...' : text;\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h4\", _hoisted_2, _toDisplayString(__props.place.title), 1), _createVNode(MediaSlider, {\n        medias: __props.place.medias || []\n      }, null, 8, [\"medias\"]), __props.place.categories?.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.place.categories, cat => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: cat.id,\n          style: {\n            \"background\": \"#f3f3f3\",\n            \"margin\": \"2px 0\",\n            \"padding\": \"3px 5px\",\n            \"border-radius\": \"4px\",\n            \"font-size\": \"11px\"\n          }\n        }, _toDisplayString(cat.title), 1);\n      }), 128))])) : _createCommentVNode(\"\", true), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(truncateText(__props.place.description)), 1), _createElementVNode(\"small\", null, _toDisplayString(__props.place.address), 1)]);\n    };\n  }\n};","map":{"version":3,"names":["MediaSlider","props","__props","truncateText","text","max","length","slice"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/places/PlacePopup.vue"],"sourcesContent":["<template>\r\n  <div style=\"direction: rtl; text-align: center; max-width: 250px;\">\r\n    <h4 style=\"margin-bottom: 5px;\">{{ place.title }}</h4>\r\n    <MediaSlider :medias=\"place.medias || []\" />\r\n    <ul v-if=\"place.categories?.length\"\r\n        style=\"display:flex;justify-content: center;margin: 5px 0; padding: 0; list-style: none;\">\r\n      <li v-for=\"cat in place.categories\" :key=\"cat.id\"\r\n          style=\"background: #f3f3f3; margin: 2px 0; padding: 3px 5px; border-radius: 4px; font-size: 11px;\">\r\n        {{ cat.title }}\r\n      </li>\r\n    </ul>\r\n    <p style=\"margin: 5px 0;\">{{ truncateText(place.description) }}</p>\r\n    <small>{{ place.address }}</small>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue'\r\nimport MediaSlider from '@/components/tooles/media/MediaSlider.vue'\r\n\r\nconst props = defineProps({\r\n  place: { type: Object, required: true }\r\n})\r\n\r\nconst truncateText = (text, max = 50) => {\r\n  if (!text) return ''\r\n  return text.length > max ? text.slice(0, max) + '...' : text\r\n}\r\n</script>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,WAAW,MAAM,2CAA2C;;;;;;;;;;IAEnE,MAAMC,KAAK,GAAGC,OAEZ;IAEF,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,GAAG,GAAG,EAAE,KAAK;MACvC,IAAI,CAACD,IAAI,EAAE,OAAO,EAAE;MACpB,OAAOA,IAAI,CAACE,MAAM,GAAGD,GAAG,GAAGD,IAAI,CAACG,KAAK,CAAC,CAAC,EAAEF,GAAG,CAAC,GAAG,KAAK,GAAGD,IAAI;IAC9D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}