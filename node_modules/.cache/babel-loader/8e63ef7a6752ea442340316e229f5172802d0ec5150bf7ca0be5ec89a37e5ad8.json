{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"badge\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"news-list\"\n};\nimport { ref, computed, onMounted } from 'vue';\nimport moment from 'moment-jalaali';\nimport { sendApi } from '@/utils/api';\nexport default {\n  __name: 'ReportList',\n  setup(__props) {\n    moment.loadPersian({\n      dialect: 'persian-modern',\n      usePersianDigits: false\n    });\n    const today = moment();\n    const year = today.jYear();\n    const month = today.jMonth(); // 0-based for jalali month\n\n    const selectedDate = ref(null);\n    const allNews = ref([]); // همه خبرها\n    const newsCountByDay = ref({}); // تعداد خبر هر روز، به صورت { '1404-03-05': 3, ... }\n\n    // تعداد روزهای ماه جاری شمسی\n    function getDaysInMonth(year, month) {\n      const days = [];\n      const daysInThisMonth = moment.jDaysInMonth(year, month + 1); // jDaysInMonth سال و ماه (1-based)\n      for (let day = 1; day <= daysInThisMonth; day++) {\n        const date = moment(`${year}/${month + 1}/${day}`, 'jYYYY/jM/jD');\n        const isoDate = date.format('jYYYY-MM-DD');\n        days.push({\n          date: isoDate,\n          day: day,\n          isToday: isoDate === today.format('jYYYY-MM-DD'),\n          count: newsCountByDay.value[isoDate] || 0\n        });\n      }\n      return days;\n    }\n    const daysInMonth = computed(() => getDaysInMonth(year, month));\n    onMounted(async () => {\n      const data = await sendApi({\n        control: 'news',\n        action: 'get_news_for_month'\n      });\n      if (data.status === 'success') {\n        const converted = data.news.map(n => {\n          const jDate = moment(n.date).format('jYYYY-MM-DD');\n          return {\n            ...n,\n            date: jDate\n          };\n        });\n        allNews.value = converted;\n        newsCountByDay.value = {};\n        converted.forEach(n => {\n          newsCountByDay.value[n.date] = (newsCountByDay.value[n.date] || 0) + 1;\n        });\n      }\n    });\n    const selectDate = date => {\n      selectedDate.value = date;\n    };\n    const newsByDate = computed(() => {\n      return allNews.value.filter(n => n.date === selectedDate.value);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"تقویم اخبار\", -1)), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(daysInMonth.value, day => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          class: _normalizeClass([\"day\", {\n            today: day.isToday,\n            selected: day.date === selectedDate.value\n          }]),\n          key: day.date,\n          onClick: $event => selectDate(day.date)\n        }, [_createElementVNode(\"span\", null, _toDisplayString(day.day), 1), day.count > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(day.count), 1)) : _createCommentVNode(\"\", true)], 10, _hoisted_2);\n      }), 128))]), selectedDate.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h3\", null, \"خبرهای \" + _toDisplayString(selectedDate.value), 1), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(newsByDate.value, news => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: news.id\n        }, _toDisplayString(news.title), 1);\n      }), 128))])])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","moment","sendApi","loadPersian","dialect","usePersianDigits","today","year","jYear","month","jMonth","selectedDate","allNews","newsCountByDay","getDaysInMonth","days","daysInThisMonth","jDaysInMonth","day","date","isoDate","format","push","isToday","count","value","daysInMonth","data","control","action","status","converted","news","map","n","jDate","forEach","selectDate","newsByDate","filter"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/dashboard/pagesContent/ReportList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>تقویم اخبار</h2>\r\n    <div class=\"calendar\">\r\n      <div class=\"day\" \r\n           v-for=\"day in daysInMonth\" \r\n           :key=\"day.date\"\r\n           :class=\"{ today: day.isToday, selected: day.date === selectedDate }\"\r\n           @click=\"selectDate(day.date)\"\r\n      >\r\n        <span>{{ day.day }}</span>\r\n        <div v-if=\"day.count > 0\" class=\"badge\">{{ day.count }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"selectedDate\" class=\"news-list\">\r\n      <h3>خبرهای {{ selectedDate }}</h3>\r\n      <ul>\r\n        <li v-for=\"news in newsByDate\" :key=\"news.id\">{{ news.title }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport moment from 'moment-jalaali'\r\nimport { sendApi } from '@/utils/api'\r\n\r\nmoment.loadPersian({ dialect: 'persian-modern', usePersianDigits: false })\r\n\r\nconst today = moment()\r\nconst year = today.jYear()\r\nconst month = today.jMonth()  // 0-based for jalali month\r\n\r\nconst selectedDate = ref(null)\r\nconst allNews = ref([])  // همه خبرها\r\nconst newsCountByDay = ref({})  // تعداد خبر هر روز، به صورت { '1404-03-05': 3, ... }\r\n\r\n// تعداد روزهای ماه جاری شمسی\r\nfunction getDaysInMonth(year, month) {\r\n  const days = []\r\n  const daysInThisMonth = moment.jDaysInMonth(year, month + 1) // jDaysInMonth سال و ماه (1-based)\r\n  for (let day = 1; day <= daysInThisMonth; day++) {\r\n    const date = moment(`${year}/${month + 1}/${day}`, 'jYYYY/jM/jD')\r\n    const isoDate = date.format('jYYYY-MM-DD')\r\n    days.push({\r\n      date: isoDate,\r\n      day: day,\r\n      isToday: isoDate === today.format('jYYYY-MM-DD'),\r\n      count: newsCountByDay.value[isoDate] || 0,\r\n    })\r\n  }\r\n  return days\r\n}\r\n\r\nconst daysInMonth = computed(() => getDaysInMonth(year, month))\r\n\r\nonMounted(async () => {\r\n  const data = await sendApi({ control: 'news', action: 'get_news_for_month' })\r\n  if (data.status === 'success') {\r\n    const converted = data.news.map(n => {\r\n      const jDate = moment(n.date).format('jYYYY-MM-DD')\r\n      return { ...n, date: jDate }\r\n    })\r\n\r\n    allNews.value = converted\r\n\r\n    newsCountByDay.value = {}\r\n    converted.forEach(n => {\r\n      newsCountByDay.value[n.date] = (newsCountByDay.value[n.date] || 0) + 1\r\n    })\r\n  }\r\n})\r\n\r\n\r\n\r\nconst selectDate = (date) => {\r\n  selectedDate.value = date\r\n}\r\n\r\nconst newsByDate = computed(() => {\r\n  return allNews.value.filter(n => n.date === selectedDate.value)\r\n})\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.calendar {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 8px;\r\n  max-width: 400px;\r\n  margin-bottom: 20px;\r\n}\r\n.day {\r\n  position: relative;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  border-radius: 6px;\r\n  background: #f9f9f9;\r\n  transition: background-color 0.3s;\r\n}\r\n.day.today {\r\n  border-color: #3b82f6;\r\n  font-weight: bold;\r\n}\r\n.day.selected {\r\n  background-color: #3b82f6;\r\n  color: white;\r\n}\r\n.badge {\r\n  position: absolute;\r\n  top: 4px;\r\n  right: 6px;\r\n  background: #ef4444;\r\n  color: white;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n}\r\n.news-list ul {\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n.news-list li {\r\n  padding: 6px 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}