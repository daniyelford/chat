{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { defineStore } from 'pinia';\nimport { ref } from 'vue';\nimport { sendApi } from '@/utils/api';\nexport const useWalletStore = defineStore('wallet', () => {\n  const transactions = ref([]);\n  const transactionsLoaded = ref(false);\n  const discountCards = ref([]);\n  const discountCardsLoaded = ref(false);\n  const loading = ref(false);\n  // let pollingInterval = null\n  const cards = ref([]);\n  const fetchCards = async () => {\n    const res = await sendApi({\n      control: 'wallet',\n      action: 'get_cards'\n    });\n    if (res.status === 'success') cards.value = res.data || [];\n  };\n  const addCard = async data => {\n    const res = await sendApi({\n      control: 'wallet',\n      action: 'add_card',\n      data\n    });\n    if (res.status === 'success') await fetchCards();\n    return res;\n  };\n  const deleteCard = async id => {\n    const res = await sendApi({\n      control: 'wallet',\n      action: 'delete_card',\n      data: {\n        id\n      }\n    });\n    if (res.status === 'success') cards.value = cards.value.filter(c => c.id !== id);\n    return res;\n  };\n  const fetchTransactions = async () => {\n    const res = await sendApi({\n      control: 'wallet',\n      action: 'get_transactions'\n    });\n    if (res.status === 'success') {\n      const newIds = res.data.map(i => i.id).sort();\n      const oldIds = transactions.value.map(i => i.id).sort();\n      if (JSON.stringify(newIds) !== JSON.stringify(oldIds)) {\n        transactions.value = res.data;\n      }\n      transactionsLoaded.value = true;\n    }\n  };\n  const fetchDiscountCards = async () => {\n    const res = await sendApi({\n      control: 'wallet',\n      action: 'get_discount_cards'\n    });\n    if (res.status === 'success') {\n      const newIds = res.data.map(i => i.id).sort();\n      const oldIds = discountCards.value.map(i => i.id).sort();\n      if (JSON.stringify(newIds) !== JSON.stringify(oldIds)) {\n        discountCards.value = res.data;\n      }\n      discountCardsLoaded.value = true;\n    }\n  };\n  // const startPolling = () => {\n  //     if (pollingInterval) return\n  //     pollingInterval = setInterval(() => {\n  //         if (transactionsLoaded.value) fetchTransactions()\n  //         if (discountCardsLoaded.value) fetchDiscountCards()\n  //     }, 10000)\n  // }\n  // const stopPolling = () => {\n  //     clearInterval(pollingInterval)\n  //     pollingInterval = null\n  // }\n  return {\n    transactions,\n    transactionsLoaded,\n    discountCards,\n    discountCardsLoaded,\n    loading,\n    cards,\n    fetchTransactions,\n    fetchDiscountCards,\n    fetchCards,\n    addCard,\n    deleteCard\n    // startPolling,\n    // stopPolling,\n  };\n});","map":{"version":3,"names":["defineStore","ref","sendApi","useWalletStore","transactions","transactionsLoaded","discountCards","discountCardsLoaded","loading","cards","fetchCards","res","control","action","status","value","data","addCard","deleteCard","id","filter","c","fetchTransactions","newIds","map","i","sort","oldIds","JSON","stringify","fetchDiscountCards"],"sources":["D:/GitHub/ci3-vue3/vue3/src/stores/wallet.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { ref } from 'vue'\r\nimport { sendApi } from '@/utils/api'\r\nexport const useWalletStore = defineStore('wallet', () => {\r\n    const transactions = ref([])\r\n    const transactionsLoaded = ref(false)\r\n    const discountCards = ref([])\r\n    const discountCardsLoaded = ref(false)\r\n    const loading = ref(false)\r\n    // let pollingInterval = null\r\n    const cards = ref([])\r\n    const fetchCards = async () => {\r\n        const res = await sendApi({ control: 'wallet', action: 'get_cards' })\r\n        if (res.status === 'success') cards.value = res.data || []\r\n    }\r\n    const addCard = async (data) => {\r\n        const res = await sendApi({ control: 'wallet', action: 'add_card', data })\r\n        if (res.status === 'success') await fetchCards()\r\n        return res\r\n    }\r\n    const deleteCard = async (id) => {\r\n        const res = await sendApi({ control: 'wallet', action: 'delete_card', data: { id } })\r\n        if (res.status === 'success') cards.value = cards.value.filter(c => c.id !== id)\r\n        return res\r\n    }\r\n\r\n    const fetchTransactions = async () => {\r\n        const res = await sendApi({ control: 'wallet', action: 'get_transactions' })\r\n        if (res.status === 'success') {\r\n            const newIds = res.data.map(i => i.id).sort()\r\n            const oldIds = transactions.value.map(i => i.id).sort()\r\n            if (JSON.stringify(newIds) !== JSON.stringify(oldIds)) {\r\n                transactions.value = res.data\r\n            }\r\n            transactionsLoaded.value = true\r\n        }\r\n    }\r\n    const fetchDiscountCards = async () => {\r\n        const res = await sendApi({ control: 'wallet', action: 'get_discount_cards' })\r\n        if (res.status === 'success') {\r\n            const newIds = res.data.map(i => i.id).sort()\r\n            const oldIds = discountCards.value.map(i => i.id).sort()\r\n            if (JSON.stringify(newIds) !== JSON.stringify(oldIds)) {\r\n                discountCards.value = res.data\r\n            }\r\n            discountCardsLoaded.value = true\r\n        }\r\n    }\r\n    // const startPolling = () => {\r\n    //     if (pollingInterval) return\r\n    //     pollingInterval = setInterval(() => {\r\n    //         if (transactionsLoaded.value) fetchTransactions()\r\n    //         if (discountCardsLoaded.value) fetchDiscountCards()\r\n    //     }, 10000)\r\n    // }\r\n    // const stopPolling = () => {\r\n    //     clearInterval(pollingInterval)\r\n    //     pollingInterval = null\r\n    // }\r\n    return {\r\n        transactions,\r\n        transactionsLoaded,\r\n        discountCards,\r\n        discountCardsLoaded,\r\n        loading,\r\n        cards,\r\n        fetchTransactions,\r\n        fetchDiscountCards,\r\n        fetchCards,\r\n        addCard,\r\n        deleteCard\r\n        // startPolling,\r\n        // stopPolling,\r\n    }\r\n})\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}