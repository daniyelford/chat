{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"badge\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"news-list\"\n};\nimport { ref, computed, onMounted } from 'vue';\nimport { sendApi } from '@/utils/api';\nexport default {\n  __name: 'ReportList',\n  setup(__props) {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = today.getMonth(); // 0-based (0=Jan)\n\n    const selectedDate = ref(null);\n    const allNews = ref([]); // همه خبرها\n    const newsCountByDay = ref({}); // تعداد خبر هر روز، به صورت { '2025-06-26': 3, ... }\n\n    // تعداد روزهای ماه جاری\n    function getDaysInMonth(year, month) {\n      const date = new Date(year, month, 1);\n      const days = [];\n      while (date.getMonth() === month) {\n        const isoDate = date.toISOString().split('T')[0];\n        days.push({\n          date: isoDate,\n          day: date.getDate(),\n          isToday: isoDate === today.toISOString().split('T')[0],\n          count: newsCountByDay.value[isoDate] || 0\n        });\n        date.setDate(date.getDate() + 1);\n      }\n      return days;\n    }\n    const daysInMonth = computed(() => getDaysInMonth(year, month));\n    onMounted(async () => {\n      // درخواست از API برای دریافت خبرها و تعداد اخبار روزها\n      const data = await sendApi({\n        control: 'news',\n        action: 'get_news_for_month',\n        year,\n        month: month + 1\n      });\n      if (data.status === 'success') {\n        allNews.value = data.news; // [{id, title, date}, ...]\n        // ساخت شیء تعداد خبر برای هر روز\n        newsCountByDay.value = {};\n        data.news.forEach(n => {\n          newsCountByDay.value[n.date] = (newsCountByDay.value[n.date] || 0) + 1;\n        });\n      }\n    });\n    const selectDate = date => {\n      selectedDate.value = date;\n    };\n    const newsByDate = computed(() => {\n      return allNews.value.filter(n => n.date === selectedDate.value);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"تقویم اخبار\", -1)), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(daysInMonth.value, day => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          class: _normalizeClass([\"day\", {\n            today: day.isToday,\n            selected: day.date === selectedDate.value\n          }]),\n          key: day.date,\n          onClick: $event => selectDate(day.date)\n        }, [_createElementVNode(\"span\", null, _toDisplayString(day.day), 1), day.count > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(day.count), 1)) : _createCommentVNode(\"\", true)], 10, _hoisted_2);\n      }), 128))]), selectedDate.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h3\", null, \"خبرهای \" + _toDisplayString(selectedDate.value), 1), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(newsByDate.value, news => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: news.id\n        }, _toDisplayString(news.title), 1);\n      }), 128))])])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","sendApi","today","Date","year","getFullYear","month","getMonth","selectedDate","allNews","newsCountByDay","getDaysInMonth","date","days","isoDate","toISOString","split","push","day","getDate","isToday","count","value","setDate","daysInMonth","data","control","action","status","news","forEach","n","selectDate","newsByDate","filter"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/dashboard/pagesContent/ReportList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>تقویم اخبار</h2>\r\n    <div class=\"calendar\">\r\n      <div class=\"day\" \r\n           v-for=\"day in daysInMonth\" \r\n           :key=\"day.date\"\r\n           :class=\"{ today: day.isToday, selected: day.date === selectedDate }\"\r\n           @click=\"selectDate(day.date)\"\r\n      >\r\n        <span>{{ day.day }}</span>\r\n        <div v-if=\"day.count > 0\" class=\"badge\">{{ day.count }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"selectedDate\" class=\"news-list\">\r\n      <h3>خبرهای {{ selectedDate }}</h3>\r\n      <ul>\r\n        <li v-for=\"news in newsByDate\" :key=\"news.id\">{{ news.title }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { sendApi } from '@/utils/api'\r\n\r\nconst today = new Date()\r\nconst year = today.getFullYear()\r\nconst month = today.getMonth()  // 0-based (0=Jan)\r\n\r\nconst selectedDate = ref(null)\r\nconst allNews = ref([])  // همه خبرها\r\nconst newsCountByDay = ref({})  // تعداد خبر هر روز، به صورت { '2025-06-26': 3, ... }\r\n\r\n// تعداد روزهای ماه جاری\r\nfunction getDaysInMonth(year, month) {\r\n  const date = new Date(year, month, 1)\r\n  const days = []\r\n  while (date.getMonth() === month) {\r\n    const isoDate = date.toISOString().split('T')[0]\r\n    days.push({\r\n      date: isoDate,\r\n      day: date.getDate(),\r\n      isToday: isoDate === today.toISOString().split('T')[0],\r\n      count: newsCountByDay.value[isoDate] || 0,\r\n    })\r\n    date.setDate(date.getDate() + 1)\r\n  }\r\n  return days\r\n}\r\n\r\nconst daysInMonth = computed(() => getDaysInMonth(year, month))\r\n\r\nonMounted(async () => {\r\n  // درخواست از API برای دریافت خبرها و تعداد اخبار روزها\r\n  const data = await sendApi({ control: 'news', action: 'get_news_for_month', year, month: month + 1 })\r\n  if (data.status === 'success') {\r\n    allNews.value = data.news // [{id, title, date}, ...]\r\n    // ساخت شیء تعداد خبر برای هر روز\r\n    newsCountByDay.value = {}\r\n    data.news.forEach(n => {\r\n      newsCountByDay.value[n.date] = (newsCountByDay.value[n.date] || 0) + 1\r\n    })\r\n  }\r\n})\r\n\r\nconst selectDate = (date) => {\r\n  selectedDate.value = date\r\n}\r\n\r\nconst newsByDate = computed(() => {\r\n  return allNews.value.filter(n => n.date === selectedDate.value)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.calendar {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 8px;\r\n  max-width: 400px;\r\n  margin-bottom: 20px;\r\n}\r\n.day {\r\n  position: relative;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  border-radius: 6px;\r\n  background: #f9f9f9;\r\n  transition: background-color 0.3s;\r\n}\r\n.day.today {\r\n  border-color: #3b82f6;\r\n  font-weight: bold;\r\n}\r\n.day.selected {\r\n  background-color: #3b82f6;\r\n  color: white;\r\n}\r\n.badge {\r\n  position: absolute;\r\n  top: 4px;\r\n  right: 6px;\r\n  background: #ef4444;\r\n  color: white;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n}\r\n.news-list ul {\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n.news-list li {\r\n  padding: 6px 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAyBA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,OAAO,QAAQ,aAAa;;;;IAErC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,MAAMC,IAAI,GAAGF,KAAK,CAACG,WAAW,CAAC,CAAC;IAChC,MAAMC,KAAK,GAAGJ,KAAK,CAACK,QAAQ,CAAC,CAAC,EAAE;;IAEhC,MAAMC,YAAY,GAAGV,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMW,OAAO,GAAGX,GAAG,CAAC,EAAE,CAAC,EAAE;IACzB,MAAMY,cAAc,GAAGZ,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;;IAEhC;IACA,SAASa,cAAcA,CAACP,IAAI,EAAEE,KAAK,EAAE;MACnC,MAAMM,IAAI,GAAG,IAAIT,IAAI,CAACC,IAAI,EAAEE,KAAK,EAAE,CAAC,CAAC;MACrC,MAAMO,IAAI,GAAG,EAAE;MACf,OAAOD,IAAI,CAACL,QAAQ,CAAC,CAAC,KAAKD,KAAK,EAAE;QAChC,MAAMQ,OAAO,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAChDH,IAAI,CAACI,IAAI,CAAC;UACRL,IAAI,EAAEE,OAAO;UACbI,GAAG,EAAEN,IAAI,CAACO,OAAO,CAAC,CAAC;UACnBC,OAAO,EAAEN,OAAO,KAAKZ,KAAK,CAACa,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACtDK,KAAK,EAAEX,cAAc,CAACY,KAAK,CAACR,OAAO,CAAC,IAAI;QAC1C,CAAC,CAAC;QACFF,IAAI,CAACW,OAAO,CAACX,IAAI,CAACO,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAClC;MACA,OAAON,IAAI;IACb;IAEA,MAAMW,WAAW,GAAGzB,QAAQ,CAAC,MAAMY,cAAc,CAACP,IAAI,EAAEE,KAAK,CAAC,CAAC;IAE/DN,SAAS,CAAC,YAAY;MACpB;MACA,MAAMyB,IAAI,GAAG,MAAMxB,OAAO,CAAC;QAAEyB,OAAO,EAAE,MAAM;QAAEC,MAAM,EAAE,oBAAoB;QAAEvB,IAAI;QAAEE,KAAK,EAAEA,KAAK,GAAG;MAAE,CAAC,CAAC;MACrG,IAAImB,IAAI,CAACG,MAAM,KAAK,SAAS,EAAE;QAC7BnB,OAAO,CAACa,KAAK,GAAGG,IAAI,CAACI,IAAI,EAAC;QAC1B;QACAnB,cAAc,CAACY,KAAK,GAAG,CAAC,CAAC;QACzBG,IAAI,CAACI,IAAI,CAACC,OAAO,CAACC,CAAC,IAAI;UACrBrB,cAAc,CAACY,KAAK,CAACS,CAAC,CAACnB,IAAI,CAAC,GAAG,CAACF,cAAc,CAACY,KAAK,CAACS,CAAC,CAACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxE,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,MAAMoB,UAAU,GAAIpB,IAAI,IAAK;MAC3BJ,YAAY,CAACc,KAAK,GAAGV,IAAI;IAC3B,CAAC;IAED,MAAMqB,UAAU,GAAGlC,QAAQ,CAAC,MAAM;MAChC,OAAOU,OAAO,CAACa,KAAK,CAACY,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACnB,IAAI,KAAKJ,YAAY,CAACc,KAAK,CAAC;IACjE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}