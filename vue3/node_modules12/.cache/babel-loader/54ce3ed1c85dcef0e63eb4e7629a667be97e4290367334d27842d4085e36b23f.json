{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { defineStore } from 'pinia';\nimport { sendApi } from '@/utils/api';\nexport const useNotificationStore = defineStore('notification', {\n  state: () => ({\n    notifications: [],\n    unreadCount: 0,\n    lastId: 0\n  }),\n  actions: {\n    async fetchNotifications() {\n      const res = await sendApi({\n        action: 'get_notifications',\n        control: 'user'\n      });\n      if (res.status === 'success') {\n        this.notifications = res.data;\n        this.unreadCount = res.data.filter(n => !n.is_read).length;\n        if (res.data.length > 0) {\n          this.lastId = Math.max(...res.data.map(n => n.id));\n        }\n      }\n    },\n    markAsRead(id) {\n      const n = this.notifications.find(n => n.id === id);\n      if (n && !n.is_read) {\n        n.is_read = 1;\n        this.unreadCount = this.notifications.filter(n => !n.is_read).length;\n      }\n    },\n    pushNotification(notif) {\n      this.notifications.unshift(notif);\n      if (!notif.is_read) this.unreadCount++;\n      this.lastId = Math.max(this.lastId, notif.id);\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sendApi","useNotificationStore","state","notifications","unreadCount","lastId","actions","fetchNotifications","res","action","control","status","data","filter","n","is_read","length","Math","max","map","id","markAsRead","find","pushNotification","notif","unshift"],"sources":["D:/GitHub/ci3-vue3/vue3/src/stores/notification.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { sendApi } from '@/utils/api'\r\n\r\nexport const useNotificationStore = defineStore('notification', {\r\n  state: () => ({\r\n    notifications: [],\r\n    unreadCount: 0,\r\n    lastId: 0,\r\n  }),\r\n  actions: {\r\n    async fetchNotifications() {\r\n      const res = await sendApi({ action: 'get_notifications', control: 'user' })\r\n      if (res.status === 'success') {\r\n        this.notifications = res.data\r\n        this.unreadCount = res.data.filter(n => !n.is_read).length\r\n        if (res.data.length > 0) {\r\n          this.lastId = Math.max(...res.data.map(n => n.id))\r\n        }\r\n      }\r\n    },\r\n    markAsRead(id) {\r\n      const n = this.notifications.find(n => n.id === id)\r\n      if (n && !n.is_read) {\r\n        n.is_read = 1\r\n        this.unreadCount = this.notifications.filter(n => !n.is_read).length\r\n      }\r\n    },\r\n    pushNotification(notif) {\r\n      this.notifications.unshift(notif)\r\n      if (!notif.is_read) this.unreadCount++\r\n      this.lastId = Math.max(this.lastId, notif.id)\r\n    }\r\n  }\r\n})\r\n"],"mappings":";;;;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAO,MAAMC,oBAAoB,GAAGF,WAAW,CAAC,cAAc,EAAE;EAC9DG,KAAK,EAAEA,CAAA,MAAO;IACZC,aAAa,EAAE,EAAE;IACjBC,WAAW,EAAE,CAAC;IACdC,MAAM,EAAE;EACV,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,kBAAkBA,CAAA,EAAG;MACzB,MAAMC,GAAG,GAAG,MAAMR,OAAO,CAAC;QAAES,MAAM,EAAE,mBAAmB;QAAEC,OAAO,EAAE;MAAO,CAAC,CAAC;MAC3E,IAAIF,GAAG,CAACG,MAAM,KAAK,SAAS,EAAE;QAC5B,IAAI,CAACR,aAAa,GAAGK,GAAG,CAACI,IAAI;QAC7B,IAAI,CAACR,WAAW,GAAGI,GAAG,CAACI,IAAI,CAACC,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACC,OAAO,CAAC,CAACC,MAAM;QAC1D,IAAIR,GAAG,CAACI,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;UACvB,IAAI,CAACX,MAAM,GAAGY,IAAI,CAACC,GAAG,CAAC,GAAGV,GAAG,CAACI,IAAI,CAACO,GAAG,CAACL,CAAC,IAAIA,CAAC,CAACM,EAAE,CAAC,CAAC;QACpD;MACF;IACF,CAAC;IACDC,UAAUA,CAACD,EAAE,EAAE;MACb,MAAMN,CAAC,GAAG,IAAI,CAACX,aAAa,CAACmB,IAAI,CAACR,CAAC,IAAIA,CAAC,CAACM,EAAE,KAAKA,EAAE,CAAC;MACnD,IAAIN,CAAC,IAAI,CAACA,CAAC,CAACC,OAAO,EAAE;QACnBD,CAAC,CAACC,OAAO,GAAG,CAAC;QACb,IAAI,CAACX,WAAW,GAAG,IAAI,CAACD,aAAa,CAACU,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACC,OAAO,CAAC,CAACC,MAAM;MACtE;IACF,CAAC;IACDO,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACrB,aAAa,CAACsB,OAAO,CAACD,KAAK,CAAC;MACjC,IAAI,CAACA,KAAK,CAACT,OAAO,EAAE,IAAI,CAACX,WAAW,EAAE;MACtC,IAAI,CAACC,MAAM,GAAGY,IAAI,CAACC,GAAG,CAAC,IAAI,CAACb,MAAM,EAAEmB,KAAK,CAACJ,EAAE,CAAC;IAC/C;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}