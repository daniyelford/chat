{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"add-place-container\"\n};\nconst _hoisted_2 = [\"disabled\"];\nimport { ref, computed, onMounted } from 'vue';\nimport UploaderManyMedia from '@/components/tooles/upload/UploaderManyMedia.vue';\nimport AddressSelector from '@/components/tooles/news/AddressSelector .vue';\nimport { sendApi } from '@/utils/api';\nimport { usePlaceStore } from '@/stores/place';\nexport default {\n  __name: 'AddPlaceForm',\n  props: {\n    editPlace: Object // یا null\n  },\n  emits: ['done'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const uploaderRef = ref(null);\n    const address = ref('');\n    const userCoordinate = ref(null);\n    const isAddressLoading = ref(false);\n    const placeStore = usePlaceStore();\n    const emit = __emit;\n    const props = __props;\n    const initialMedias = ref([]);\n    const form = ref({\n      title: '',\n      description: '',\n      media_id: [],\n      user_address: {\n        type: 'location',\n        value: ''\n      }\n    });\n    const handleUploadResult = uploaded => {\n      form.value.media_id = uploaded.map(i => i.id);\n    };\n    const isSubmitDisabled = computed(() => {\n      const f = form.value;\n      return !f.title || !f.user_address?.value?.lat || isAddressLoading.value || uploaderRef.value?.uploading;\n    });\n    const submitPlace = async () => {\n      const data = {\n        ...form.value,\n        edit: props.editPlace?.id || null\n      };\n      const res = await sendApi({\n        control: 'place',\n        action: props.editPlace ? 'edit_place' : 'add_place',\n        data\n      });\n      if (res.status === 'success') {\n        await placeStore.fetchAllPlaces();\n        emit('done'); // اطلاع به کامپوننت والد\n      } else {\n        alert(res.message || 'خطا در ثبت مکان');\n      }\n    };\n    onMounted(() => {\n      // اگه edit mode بود:\n      if (props.editPlace) {\n        const p = props.editPlace;\n        form.value.title = p.title || '';\n        form.value.description = p.description || '';\n        form.value.media_id = p.medias?.map(m => m.id) || [];\n        initialMedias.value = p.medias || [];\n        form.value.user_address = {\n          type: 'location',\n          value: {\n            address: p.addresses?.[0]?.address || '',\n            lat: p.addresses?.[0]?.lat,\n            lon: p.addresses?.[0]?.lon,\n            city: p.addresses?.[0]?.city || '',\n            address_id: p.addresses?.[0]?.id || ''\n          }\n        };\n      }\n\n      // دریافت مختصات کاربر\n      address.value = placeStore.userCity || '';\n      userCoordinate.value = placeStore.userCoordinate;\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString(props.editPlace ? 'ویرایش مکان' : 'افزودن مکان جدید'), 1), _createElementVNode(\"form\", {\n        onSubmit: _withModifiers(submitPlace, [\"prevent\"])\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => form.value.title = $event),\n        placeholder: \"عنوان مکان\",\n        required: \"\"\n      }, null, 512), [[_vModelText, form.value.title]]), _withDirectives(_createElementVNode(\"textarea\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => form.value.description = $event),\n        placeholder: \"توضیحات\"\n      }, null, 512), [[_vModelText, form.value.description]]), _createVNode(UploaderManyMedia, {\n        url: 'place_media/',\n        toAction: 'addPlace',\n        modelValue: form.value.media_id,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => form.value.media_id = $event),\n        \"initial-medias\": initialMedias.value,\n        ref_key: \"uploaderRef\",\n        ref: uploaderRef,\n        onDone: handleUploadResult\n      }, null, 8, [\"modelValue\", \"initial-medias\"]), _createVNode(AddressSelector, {\n        loginCity: address.value,\n        userCoordinate: userCoordinate.value,\n        \"model-value\": form.value.user_address,\n        onUpdate: _cache[3] || (_cache[3] = val => form.value.user_address = val),\n        onLoading: _cache[4] || (_cache[4] = $event => isAddressLoading.value = $event)\n      }, null, 8, [\"loginCity\", \"userCoordinate\", \"model-value\"]), _createElementVNode(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitDisabled.value\n      }, _toDisplayString(props.editPlace ? 'ذخیره تغییرات' : 'ثبت مکان'), 9, _hoisted_2)], 32)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","UploaderManyMedia","AddressSelector","sendApi","usePlaceStore","uploaderRef","address","userCoordinate","isAddressLoading","placeStore","emit","__emit","props","__props","initialMedias","form","title","description","media_id","user_address","type","value","handleUploadResult","uploaded","map","i","id","isSubmitDisabled","f","lat","uploading","submitPlace","data","edit","editPlace","res","control","action","status","fetchAllPlaces","alert","message","p","medias","m","addresses","lon","city","address_id","userCity"],"sources":["D:/GitHub/chat/vue3/src/components/dashboard/pagesContent/AddPlaceForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-place-container\">\r\n    <h2>{{ props.editPlace ? 'ویرایش مکان' : 'افزودن مکان جدید' }}</h2>\r\n    <form @submit.prevent=\"submitPlace\">\r\n      <input v-model=\"form.title\" placeholder=\"عنوان مکان\" required />\r\n      <textarea v-model=\"form.description\" placeholder=\"توضیحات\" />\r\n      \r\n      <UploaderManyMedia\r\n        :url=\"'place_media/'\"\r\n        :toAction=\"'addPlace'\"\r\n        v-model=\"form.media_id\"\r\n        :initial-medias=\"initialMedias\"\r\n        ref=\"uploaderRef\"\r\n        @done=\"handleUploadResult\"\r\n      />\r\n\r\n      <AddressSelector\r\n        :loginCity=\"address\"\r\n        :userCoordinate=\"userCoordinate\"\r\n        :model-value=\"form.user_address\"\r\n        @update=\"val => form.user_address = val\"\r\n        @loading=\"isAddressLoading = $event\"\r\n      />\r\n\r\n      <button type=\"submit\" :disabled=\"isSubmitDisabled\">\r\n        {{ props.editPlace ? 'ذخیره تغییرات' : 'ثبت مکان' }}\r\n      </button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, defineProps, defineEmits } from 'vue'\r\nimport UploaderManyMedia from '@/components/tooles/upload/UploaderManyMedia.vue'\r\nimport AddressSelector from '@/components/tooles/news/AddressSelector .vue'\r\nimport { sendApi } from '@/utils/api'\r\nimport { usePlaceStore } from '@/stores/place'\r\n\r\nconst uploaderRef = ref(null)\r\nconst address = ref('')\r\nconst userCoordinate = ref(null)\r\nconst isAddressLoading = ref(false)\r\nconst placeStore = usePlaceStore()\r\nconst emit = defineEmits(['done'])\r\n\r\nconst props = defineProps({\r\n  editPlace: Object // یا null\r\n})\r\n\r\nconst initialMedias = ref([])\r\nconst form = ref({\r\n  title: '',\r\n  description: '',\r\n  media_id: [],\r\n  user_address: { type: 'location', value: '' }\r\n})\r\n\r\nconst handleUploadResult = (uploaded) => {\r\n  form.value.media_id = uploaded.map(i => i.id)\r\n}\r\n\r\nconst isSubmitDisabled = computed(() => {\r\n  const f = form.value\r\n  return !f.title || !f.user_address?.value?.lat || isAddressLoading.value || uploaderRef.value?.uploading\r\n})\r\n\r\nconst submitPlace = async () => {\r\n  const data = {\r\n    ...form.value,\r\n    edit: props.editPlace?.id || null\r\n  }\r\n\r\n  const res = await sendApi({\r\n    control: 'place',\r\n    action: props.editPlace ? 'edit_place' : 'add_place',\r\n    data\r\n  })\r\n\r\n  if (res.status === 'success') {\r\n    await placeStore.fetchAllPlaces()\r\n    emit('done') // اطلاع به کامپوننت والد\r\n  } else {\r\n    alert(res.message || 'خطا در ثبت مکان')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  // اگه edit mode بود:\r\n  if (props.editPlace) {\r\n    const p = props.editPlace\r\n    form.value.title = p.title || ''\r\n    form.value.description = p.description || ''\r\n    form.value.media_id = p.medias?.map(m => m.id) || []\r\n    initialMedias.value = p.medias || []\r\n    form.value.user_address = {\r\n      type: 'location',\r\n      value: {\r\n        address: p.addresses?.[0]?.address || '',\r\n        lat: p.addresses?.[0]?.lat,\r\n        lon: p.addresses?.[0]?.lon,\r\n        city: p.addresses?.[0]?.city || '',\r\n        address_id: p.addresses?.[0]?.id || ''\r\n      }\r\n    }\r\n  }\r\n\r\n  // دریافت مختصات کاربر\r\n  address.value = placeStore.userCity || ''\r\n  userCoordinate.value = placeStore.userCoordinate\r\n})\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}