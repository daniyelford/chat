{"ast":null,"code":"import { unref as _unref, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"nav\"\n};\nconst _hoisted_2 = {\n  class: \"user-info\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"img\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"img\"\n};\nconst _hoisted_6 = {\n  class: \"other-info\"\n};\nconst _hoisted_7 = {\n  class: \"logo\"\n};\nimport { onMounted, onBeforeUnmount } from 'vue';\nimport { useUserStore } from '@/stores/user';\nimport NotificationMenu from '@/components/tooles/nav/NotificationMenu.vue';\nimport { useMenuStore } from '@/stores/menu';\nexport default {\n  __name: 'TopNav',\n  setup(__props) {\n    const menu = useMenuStore();\n    const user = useUserStore();\n    let pollingInterval = null;\n    onMounted(() => {\n      user.fetchUserInfo();\n      pollingInterval = setInterval(() => {\n        user.fetchUserInfo();\n      }, 10000);\n    });\n    onBeforeUnmount(() => {\n      if (pollingInterval) clearInterval(pollingInterval);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_unref(user).image ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n        src: _unref(user).image,\n        alt: \"user image\"\n      }, null, 8, _hoisted_4)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[1] || (_cache[1] = [_createElementVNode(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"#000000\",\n        \"enable-background\": \"new 0 0 24 24\",\n        viewBox: \"0 0 24 24\"\n      }, [_createElementVNode(\"g\", null, [_createElementVNode(\"rect\", {\n        fill: \"none\",\n        height: \"24\",\n        width: \"24\"\n      })]), _createElementVNode(\"g\", null, [_createElementVNode(\"path\", {\n        d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20z\"\n      })])], -1)]))), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", null, _toDisplayString(_unref(user).fullName), 1)]), _unref(user).isLoggedIn ? (_openBlock(), _createBlock(NotificationMenu, {\n        key: 2\n      })) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", null, \"inja \" + _toDisplayString(_unref(user).ruleInfo), 1), _createElementVNode(\"button\", {\n        class: \"hamburger\",\n        onClick: _cache[0] || (_cache[0] = (...args) => _unref(menu).toggle && _unref(menu).toggle(...args))\n      }, _cache[2] || (_cache[2] = [_createElementVNode(\"span\", null, null, -1), _createElementVNode(\"span\", null, null, -1), _createElementVNode(\"span\", null, null, -1)]))])]);\n    };\n  }\n};","map":{"version":3,"names":["onMounted","onBeforeUnmount","useUserStore","NotificationMenu","useMenuStore","menu","user","pollingInterval","fetchUserInfo","setInterval","clearInterval"],"sources":["D:/GitHub/chat/vue3/src/components/dashboard/menus/TopNav.vue"],"sourcesContent":["<script setup>\r\n  import { onMounted, onBeforeUnmount } from 'vue'\r\n  import { useUserStore } from '@/stores/user'\r\n  import NotificationMenu from '@/components/tooles/nav/NotificationMenu.vue'\r\n  import { useMenuStore } from '@/stores/menu'\r\n  const menu = useMenuStore()\r\n  const user = useUserStore()\r\n  let pollingInterval = null\r\n  onMounted(() => {\r\n    user.fetchUserInfo()\r\n    pollingInterval = setInterval(() => {\r\n      user.fetchUserInfo()\r\n    }, 10000)\r\n  })\r\n  onBeforeUnmount(() => {\r\n    if (pollingInterval) clearInterval(pollingInterval)\r\n  })\r\n</script>\r\n<template>\r\n  <div class=\"nav\">\r\n    <div class=\"user-info\">\r\n      <div v-if=\"user.image\" class=\"img\">\r\n        <img :src=\"user.image\" alt=\"user image\" />\r\n      </div>\r\n      <div v-else class=\"img\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" enable-background=\"new 0 0 24 24\" viewBox=\"0 0 24 24\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20z\"/></g></svg>\r\n      </div>\r\n      <div class=\"other-info\">\r\n        <span>{{ user.fullName }}</span>\r\n      </div>\r\n      <NotificationMenu v-if=\"user.isLoggedIn\" />\r\n    </div>\r\n    <div class=\"logo\">\r\n      <button>inja {{ user.ruleInfo }}</button>  \r\n      <button class=\"hamburger\" @click=\"menu.toggle\">\r\n        <span></span><span></span><span></span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style scoped>\r\n  .hamburger {\r\n    cursor: pointer;\r\n    background: none;\r\n    border: none;\r\n  }\r\n  .hamburger span {\r\n    display: block;\r\n    width: 25px;\r\n    height: 3px;\r\n    margin: 5px 0;\r\n    background: #333;\r\n  }\r\n  .nav,.logo,\r\n  .user-info{\r\n    direction: rtl;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 7px;\r\n    padding: 4px 5px 0 5px;\r\n    box-sizing: border-box;\r\n  }\r\n  img,svg{\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .img{\r\n    height: 40px;\r\n    width: 40px;\r\n  }\r\n  .img img,.img svg{\r\n    border-radius: 50px;\r\n  }\r\n  .logo {\r\n    height: 45px;\r\n    width: auto;\r\n  }\r\n  span {\r\n    margin: 3px;\r\n    display: inline-block;\r\n  }\r\n  .other-info{\r\n    margin-left: 5px;\r\n  }\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACE,SAASA,SAAS,EAAEC,eAAe,QAAQ,KAAK;AAChD,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,gBAAgB,MAAM,8CAA8C;AAC3E,SAASC,YAAY,QAAQ,eAAe;;;;IAC5C,MAAMC,IAAI,GAAGD,YAAY,CAAC,CAAC;IAC3B,MAAME,IAAI,GAAGJ,YAAY,CAAC,CAAC;IAC3B,IAAIK,eAAe,GAAG,IAAI;IAC1BP,SAAS,CAAC,MAAM;MACdM,IAAI,CAACE,aAAa,CAAC,CAAC;MACpBD,eAAe,GAAGE,WAAW,CAAC,MAAM;QAClCH,IAAI,CAACE,aAAa,CAAC,CAAC;MACtB,CAAC,EAAE,KAAK,CAAC;IACX,CAAC,CAAC;IACFP,eAAe,CAAC,MAAM;MACpB,IAAIM,eAAe,EAAEG,aAAa,CAACH,eAAe,CAAC;IACrD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}