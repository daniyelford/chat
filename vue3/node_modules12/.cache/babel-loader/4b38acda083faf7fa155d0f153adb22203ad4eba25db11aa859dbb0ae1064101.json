{"ast":null,"code":"import { sendApi } from \"@/utils/api\";\nimport { BASE_URL, NOTIFICATION_VAP_ID } from \"@/config\";\nimport { urlBase64ToUint8Array } from '@/utils/urlBase64ToUint8Array';\nexport async function subscribeToPush() {\n  if ('serviceWorker' in navigator && 'PushManager' in window) {\n    navigator.serviceWorker.register(`${BASE_URL}/assets/sw.js`).then(async registration => {\n      const subscription = await registration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: urlBase64ToUint8Array(NOTIFICATION_VAP_ID)\n      });\n      const response = await sendApi({\n        control: 'user',\n        action: 'subscribe',\n        data: subscription\n      });\n      if (response.status !== 'success') throw new Error('Server failed to save subscription');\n    }).catch(err => {\n      console.error('❌ SW registration failed2:', err);\n    });\n  } else {\n    console.warn('❌ Push not supported in this browser.');\n  }\n}","map":{"version":3,"names":["sendApi","BASE_URL","NOTIFICATION_VAP_ID","urlBase64ToUint8Array","subscribeToPush","navigator","window","serviceWorker","register","then","registration","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","response","control","action","data","status","Error","catch","err","console","error","warn"],"sources":["D:/GitHub/chat/vue3/src/utils/pushService.js"],"sourcesContent":["import { sendApi } from \"@/utils/api\";\r\nimport { BASE_URL,NOTIFICATION_VAP_ID } from \"@/config\";\r\nimport { urlBase64ToUint8Array } from '@/utils/urlBase64ToUint8Array';\r\nexport async function subscribeToPush() {\r\n  if ('serviceWorker' in navigator && 'PushManager' in window) {\r\n    navigator.serviceWorker.register(`${BASE_URL}/assets/sw.js`)\r\n    .then(async registration => {\r\n      const subscription = await registration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        applicationServerKey: urlBase64ToUint8Array(NOTIFICATION_VAP_ID),\r\n      });\r\n      const response = await sendApi({ control: 'user', action: 'subscribe', data:subscription })\r\n        if (response.status!=='success') throw new Error('Server failed to save subscription');\r\n    })\r\n    .catch(err => {\r\n      console.error('❌ SW registration failed2:', err);\r\n    });\r\n  } else {\r\n    console.warn('❌ Push not supported in this browser.');\r\n  }\r\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,EAACC,mBAAmB,QAAQ,UAAU;AACvD,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,OAAO,eAAeC,eAAeA,CAAA,EAAG;EACtC,IAAI,eAAe,IAAIC,SAAS,IAAI,aAAa,IAAIC,MAAM,EAAE;IAC3DD,SAAS,CAACE,aAAa,CAACC,QAAQ,CAAC,GAAGP,QAAQ,eAAe,CAAC,CAC3DQ,IAAI,CAAC,MAAMC,YAAY,IAAI;MAC1B,MAAMC,YAAY,GAAG,MAAMD,YAAY,CAACE,WAAW,CAACC,SAAS,CAAC;QAC5DC,eAAe,EAAE,IAAI;QACrBC,oBAAoB,EAAEZ,qBAAqB,CAACD,mBAAmB;MACjE,CAAC,CAAC;MACF,MAAMc,QAAQ,GAAG,MAAMhB,OAAO,CAAC;QAAEiB,OAAO,EAAE,MAAM;QAAEC,MAAM,EAAE,WAAW;QAAEC,IAAI,EAACR;MAAa,CAAC,CAAC;MACzF,IAAIK,QAAQ,CAACI,MAAM,KAAG,SAAS,EAAE,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;IAC1F,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAClD,CAAC,CAAC;EACJ,CAAC,MAAM;IACLC,OAAO,CAACE,IAAI,CAAC,uCAAuC,CAAC;EACvD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}