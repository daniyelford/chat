{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"info\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"addPlace\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nimport MediaSlider from '@/components/tooles/media/MediaSlider.vue';\nexport default {\n  __name: 'placesCard',\n  props: {\n    places: Array,\n    userId: Number,\n    userCenter: Object\n  },\n  setup(__props) {\n    const props = __props;\n    const truncateText = (text, max = 50) => {\n      if (!text) return '';\n      return text.length > max ? text.slice(0, max) + '...' : text;\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [__props.userId === 1 || __props.userId === 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"a\", {\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('add-place'))\n      }, \"add place\")])) : _createCommentVNode(\"\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.places, place => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: place.id,\n          class: \"place-item\"\n        }, [_createElementVNode(\"h4\", null, _toDisplayString(place.title), 1), place.medias?.length > 0 ? (_openBlock(), _createBlock(MediaSlider, {\n          key: 0,\n          medias: place.medias\n        }, null, 8, [\"medias\"])) : _createCommentVNode(\"\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(place.categories, category => {\n          return _openBlock(), _createElementBlock(\"small\", {\n            class: \"cat\",\n            key: category.id\n          }, _toDisplayString(category.title), 1);\n        }), 128)), _createElementVNode(\"p\", null, _toDisplayString(truncateText(place.description)), 1), _createElementVNode(\"small\", null, _toDisplayString(truncateText(place.addresses?.[0]?.address) || ''), 1), place.addresses?.[0]?.lat && place.addresses?.[0]?.lon ? (_openBlock(), _createElementBlock(\"a\", {\n          key: 1,\n          onClick: $event => _ctx.$emit('open-map', place)\n        }, \"محل دقیق\", 8, _hoisted_3)) : _createCommentVNode(\"\", true), __props.userId === 1 || __props.userId === 2 ? (_openBlock(), _createElementBlock(\"a\", {\n          key: 2,\n          onClick: $event => _ctx.$emit('edit-place', place)\n        }, \"ویرایش\", 8, _hoisted_4)) : _createCommentVNode(\"\", true)]);\n      }), 128))]);\n    };\n  }\n};","map":{"version":3,"names":["MediaSlider","props","__props","truncateText","text","max","length","slice"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/cards/placesCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"info\">\r\n    <div v-if=\"userId === 1 || userId === 2\" class=\"addPlace\">\r\n      <a @click=\"$emit('add-place')\">add place</a>\r\n    </div>\r\n\r\n    <div v-for=\"place in places\" :key=\"place.id\" class=\"place-item\">\r\n      <h4>{{ place.title }}</h4>\r\n      <MediaSlider v-if=\"place.medias?.length > 0\" :medias=\"place.medias\" />\r\n\r\n      <small class=\"cat\" v-for=\"category in place.categories\" :key=\"category.id\">\r\n        {{ category.title }}\r\n      </small>\r\n\r\n      <p>{{ truncateText(place.description) }}</p>\r\n      <small>{{ truncateText(place.addresses?.[0]?.address) || '' }}</small>\r\n\r\n      <a\r\n        v-if=\"place.addresses?.[0]?.lat && place.addresses?.[0]?.lon\"\r\n        @click=\"$emit('open-map', place)\"\r\n      >محل دقیق</a>\r\n\r\n      <a\r\n        v-if=\"userId === 1 || userId === 2\"\r\n        @click=\"$emit('edit-place', place)\"\r\n      >ویرایش</a>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport MediaSlider from '@/components/tooles/media/MediaSlider.vue'\r\n\r\nconst props = defineProps({\r\n  places: Array,\r\n  userId: Number,\r\n  userCenter: Object\r\n})\r\n\r\nconst truncateText = (text, max = 50) => {\r\n  if (!text) return ''\r\n  return text.length > max ? text.slice(0, max) + '...' : text\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.info {\r\n  height: 100%;\r\n  gap: 10px;\r\n  overflow: auto;\r\n  width: 69%;\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  flex-wrap: wrap;\r\n  align-content: flex-start;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.place-item {\r\n  position: sticky;\r\n  top: 0;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  background: #bcebbc;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\nh4, p, small {\r\n  margin: 0 0 5px 0;\r\n}\r\nsmall {\r\n  display: block;\r\n}\r\n.place-item a {\r\n  width: 50%;\r\n  display: inline-block;\r\n  padding: 10px;\r\n  background: yellow;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n}\r\n.cat {\r\n  padding: 3px 5px;\r\n  background: lightgrey;\r\n  border-radius: 5px;\r\n  display: inline-block;\r\n  margin: 5px;\r\n}\r\n</style>"],"mappings":";;;;;;;;;;AA+BA,OAAOA,WAAW,MAAM,2CAA2C;;;;;;;;;IAEnE,MAAMC,KAAK,GAAGC,OAIZ;IAEF,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,GAAG,GAAG,EAAE,KAAK;MACvC,IAAI,CAACD,IAAI,EAAE,OAAO,EAAE;MACpB,OAAOA,IAAI,CAACE,MAAM,GAAGD,GAAG,GAAGD,IAAI,CAACG,KAAK,CAAC,CAAC,EAAEF,GAAG,CAAC,GAAG,KAAK,GAAGD,IAAI;IAC9D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}