{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"progress-bar\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"preview\"\n};\nconst _hoisted_3 = [\"src\"];\nimport { ref, watch, onMounted } from 'vue';\nimport { sendApi } from '@/utils/api';\nexport default {\n  __name: 'UploadSingleImageUser',\n  props: {\n    toAction: String,\n    url: String,\n    image: String\n  },\n  emits: ['uploaded'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const emit = __emit;\n    const selectedFileBase64 = ref('');\n    const imageUrl = ref('');\n    const fileInput = ref(null);\n    const imageId = ref('');\n    const readProgress = ref(0);\n    const reading = ref(false);\n    const props = __props;\n    onMounted(() => {\n      if (props.image) {\n        imageUrl.value = props.image;\n      }\n    });\n    watch(() => props.image, newVal => {\n      if (newVal) {\n        imageUrl.value = newVal;\n      }\n    });\n    function toBase64WithProgress(file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reading.value = true;\n        readProgress.value = 0;\n        reader.onprogress = event => {\n          if (event.lengthComputable) {\n            readProgress.value = event.loaded / event.total * 100;\n          }\n        };\n        reader.onload = () => {\n          reading.value = false;\n          resolve(reader.result);\n        };\n        reader.onerror = error => {\n          reading.value = false;\n          reject(error);\n        };\n        reader.readAsDataURL(file);\n      });\n    }\n    const onFileChange = async e => {\n      const file = e.target.files[0];\n      if (!file) return;\n      try {\n        selectedFileBase64.value = await toBase64WithProgress(file);\n        await upload();\n      } catch (error) {\n        console.error('خطا در خواندن فایل:', error);\n        alert('خطا در خواندن فایل انتخاب شده.');\n      }\n    };\n    const upload = async () => {\n      if (!selectedFileBase64.value) {\n        alert('لطفاً یک فایل انتخاب کنید.');\n        return;\n      }\n      try {\n        const response = await sendApi({\n          action: 'upload_single_image',\n          data: {\n            url: props.url,\n            data: selectedFileBase64.value,\n            toAction: props.toAction\n          },\n          control: 'upload'\n        });\n        if (response.status === 'success' && response.url) {\n          imageUrl.value = response.url;\n          imageId.value = response.id;\n          emit('uploaded', {\n            id: response.id,\n            url: response.url\n          });\n        } else {\n          alert(response.message || 'آپلود موفق نبود');\n        }\n      } catch (err) {\n        console.error('خطا در ارسال به سرور:', err);\n        alert('مشکلی در آپلود پیش آمد');\n      }\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"upload-box\",\n        onClick: _cache[0] || (_cache[0] = $event => fileInput.value.click())\n      }, [_createElementVNode(\"input\", {\n        type: \"file\",\n        ref_key: \"fileInput\",\n        ref: fileInput,\n        onChange: onFileChange\n      }, null, 544), reading.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n        class: \"progress\",\n        style: _normalizeStyle({\n          width: readProgress.value + '%'\n        })\n      }, null, 4), _createElementVNode(\"p\", null, _toDisplayString(readProgress.value.toFixed(0)) + \"%\", 1)])) : _createCommentVNode(\"\", true), imageUrl.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n        src: imageUrl.value,\n        alt: \"uploaded\"\n      }, null, 8, _hoisted_3)])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","sendApi","emit","__emit","selectedFileBase64","imageUrl","fileInput","imageId","readProgress","reading","props","__props","image","value","newVal","toBase64WithProgress","file","Promise","resolve","reject","reader","FileReader","onprogress","event","lengthComputable","loaded","total","onload","result","onerror","error","readAsDataURL","onFileChange","e","target","files","upload","console","alert","response","action","data","url","toAction","control","status","id","message","err"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/upload/UploadSingleImageUser.vue"],"sourcesContent":["<template>\r\n    <div class=\"upload-box\" @click=\"fileInput.click()\">\r\n        <input type=\"file\" ref=\"fileInput\" @change=\"onFileChange\" />\r\n        <div v-if=\"reading\" class=\"progress-bar\">\r\n            <div class=\"progress\" :style=\"{ width: readProgress + '%' }\"></div>\r\n            <p>{{ readProgress.toFixed(0) }}%</p>\r\n        </div>\r\n        <div v-if=\"imageUrl\" class=\"preview\">\r\n            <img :src=\"imageUrl\" alt=\"uploaded\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script setup>\r\n    import { ref,defineProps,defineEmits,watch,onMounted } from 'vue';\r\n    import { sendApi } from '@/utils/api';\r\n    const emit = defineEmits(['uploaded']);\r\n    const selectedFileBase64 = ref('');\r\n    const imageUrl = ref('');\r\n    const fileInput = ref(null);\r\n    const imageId = ref('');\r\n    const readProgress = ref(0);\r\n    const reading = ref(false);\r\n    const props = defineProps({\r\n        toAction: String,\r\n        url: String,\r\n        image: String\r\n    })\r\n    onMounted(() => {\r\n        if (props.image) {\r\n            imageUrl.value = props.image\r\n        }\r\n    })\r\n    watch(() => props.image, (newVal) => {\r\n        if (newVal) {\r\n            imageUrl.value = newVal\r\n        }\r\n    })\r\n    function toBase64WithProgress(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reading.value = true;\r\n            readProgress.value = 0;\r\n            reader.onprogress = (event) => {\r\n                if (event.lengthComputable) {\r\n                readProgress.value = (event.loaded / event.total) * 100;\r\n                }\r\n            };\r\n            reader.onload = () => {\r\n                reading.value = false;\r\n                resolve(reader.result);\r\n            };\r\n            reader.onerror = error => {\r\n                reading.value = false;\r\n                reject(error);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        });\r\n    }\r\n    const onFileChange = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n        try {\r\n            selectedFileBase64.value = await toBase64WithProgress(file);\r\n            await upload();\r\n        } catch (error) {\r\n            console.error('خطا در خواندن فایل:', error);\r\n            alert('خطا در خواندن فایل انتخاب شده.');\r\n        }\r\n    };\r\n    const upload = async () => {\r\n        if (!selectedFileBase64.value) {\r\n            alert('لطفاً یک فایل انتخاب کنید.');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await sendApi({\r\n                action: 'upload_single_image',\r\n                data:{\r\n                    url: props.url,\r\n                    data: selectedFileBase64.value,\r\n                    toAction:props.toAction,\r\n                }, \r\n                control:'upload'\r\n            });\r\n            if (response.status === 'success' && response.url) {\r\n                imageUrl.value = response.url;\r\n                imageId.value = response.id;\r\n                emit('uploaded', { id:response.id,url:response.url });\r\n            } else {\r\n                alert(response.message || 'آپلود موفق نبود');\r\n            }\r\n        } catch (err) {\r\n            console.error('خطا در ارسال به سرور:', err);\r\n            alert('مشکلی در آپلود پیش آمد');\r\n        }\r\n    };\r\n</script>\r\n<style scoped>\r\n    .upload-box {\r\n        width: 100%;\r\n        height: 100%;\r\n        box-sizing: border-box;\r\n        overflow: hidden;\r\n    }\r\n    input[type=\"file\"] {\r\n        visibility: hidden;\r\n    }\r\n    .preview {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    img{\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 150px;\r\n    }\r\n    .progress-bar {\r\n        width: 96%;\r\n        background: #eee;\r\n        border: 1px solid #ccc;\r\n        height: 22px;\r\n        border-radius: 6px;\r\n        overflow: hidden;\r\n        margin: 0 2%;\r\n    }\r\n    .progress {\r\n        background: #4caf50;\r\n        height: 100%;\r\n        width: 0%;\r\n        transition: width 0.2s ease;\r\n    }\r\n    .progress-bar p {\r\n        position: absolute;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        margin: 0;\r\n        font-size: 12px;\r\n        color: #000;\r\n        top: 2px;\r\n    }\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}