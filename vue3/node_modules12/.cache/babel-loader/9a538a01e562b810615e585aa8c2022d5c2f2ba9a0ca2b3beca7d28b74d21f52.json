{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n// src/index.ts\nimport { destr } from \"destr\";\n\n// src/runtime/core.ts\nimport { deepOmitUnsafe, deepPickUnsafe } from \"deep-pick-omit\";\nfunction hydrateStore(store, {\n  storage,\n  serializer,\n  key,\n  debug,\n  pick,\n  omit,\n  beforeHydrate,\n  afterHydrate\n}, context, runHooks = true) {\n  try {\n    if (runHooks) beforeHydrate?.(context);\n    const fromStorage = storage.getItem(key);\n    if (fromStorage) {\n      const deserialized = serializer.deserialize(fromStorage);\n      const picked = pick ? deepPickUnsafe(deserialized, pick) : deserialized;\n      const omitted = omit ? deepOmitUnsafe(picked, omit) : picked;\n      store.$patch(omitted);\n    }\n    if (runHooks) afterHydrate?.(context);\n  } catch (error) {\n    if (debug) console.error(\"[pinia-plugin-persistedstate]\", error);\n  }\n}\nfunction persistState(state, {\n  storage,\n  serializer,\n  key,\n  debug,\n  pick,\n  omit\n}) {\n  try {\n    const picked = pick ? deepPickUnsafe(state, pick) : state;\n    const omitted = omit ? deepOmitUnsafe(picked, omit) : picked;\n    const toStorage = serializer.serialize(omitted);\n    storage.setItem(key, toStorage);\n  } catch (error) {\n    if (debug) console.error(\"[pinia-plugin-persistedstate]\", error);\n  }\n}\nfunction createPersistence(context, optionsParser, auto) {\n  const {\n    pinia,\n    store,\n    options: {\n      persist = auto\n    }\n  } = context;\n  if (!persist) return;\n  if (!(store.$id in pinia.state.value)) {\n    const originalStore = pinia._s.get(store.$id.replace(\"__hot:\", \"\"));\n    if (originalStore) void Promise.resolve().then(() => originalStore.$persist());\n    return;\n  }\n  const persistenceOptions = Array.isArray(persist) ? persist : persist === true ? [{}] : [persist];\n  const persistences = persistenceOptions.map(optionsParser);\n  store.$hydrate = ({\n    runHooks = true\n  } = {}) => {\n    persistences.forEach(p => {\n      hydrateStore(store, p, context, runHooks);\n    });\n  };\n  store.$persist = () => {\n    persistences.forEach(p => {\n      persistState(store.$state, p);\n    });\n  };\n  persistences.forEach(p => {\n    hydrateStore(store, p, context);\n    store.$subscribe((_mutation, state) => persistState(state, p), {\n      detached: true\n    });\n  });\n}\n\n// src/index.ts\nfunction createPersistedState(options = {}) {\n  return function (context) {\n    createPersistence(context, p => ({\n      key: (options.key ? options.key : x => x)(p.key ?? context.store.$id),\n      debug: p.debug ?? options.debug ?? false,\n      serializer: p.serializer ?? options.serializer ?? {\n        serialize: data => JSON.stringify(data),\n        deserialize: data => destr(data)\n      },\n      storage: p.storage ?? options.storage ?? window.localStorage,\n      beforeHydrate: p.beforeHydrate,\n      afterHydrate: p.afterHydrate,\n      pick: p.pick,\n      omit: p.omit\n    }), options.auto ?? false);\n  };\n}\nvar index_default = createPersistedState();\nexport { createPersistedState, index_default as default };","map":{"version":3,"names":["destr","deepOmitUnsafe","deepPickUnsafe","hydrateStore","store","storage","serializer","key","debug","pick","omit","beforeHydrate","afterHydrate","context","runHooks","fromStorage","getItem","deserialized","deserialize","picked","omitted","$patch","error","console","persistState","state","toStorage","serialize","setItem","createPersistence","optionsParser","auto","pinia","options","persist","$id","value","originalStore","_s","get","replace","Promise","resolve","then","$persist","persistenceOptions","Array","isArray","persistences","map","$hydrate","forEach","p","$state","$subscribe","_mutation","detached","createPersistedState","x","data","JSON","stringify","window","localStorage","index_default","default"],"sources":["D:/GitHub/ci3-vue3/vue3/node_modules/pinia-plugin-persistedstate/dist/index.js"],"sourcesContent":["// src/index.ts\nimport { destr } from \"destr\";\n\n// src/runtime/core.ts\nimport { deepOmitUnsafe, deepPickUnsafe } from \"deep-pick-omit\";\nfunction hydrateStore(store, {\n  storage,\n  serializer,\n  key,\n  debug,\n  pick,\n  omit,\n  beforeHydrate,\n  afterHydrate\n}, context, runHooks = true) {\n  try {\n    if (runHooks)\n      beforeHydrate?.(context);\n    const fromStorage = storage.getItem(key);\n    if (fromStorage) {\n      const deserialized = serializer.deserialize(fromStorage);\n      const picked = pick ? deepPickUnsafe(deserialized, pick) : deserialized;\n      const omitted = omit ? deepOmitUnsafe(picked, omit) : picked;\n      store.$patch(omitted);\n    }\n    if (runHooks)\n      afterHydrate?.(context);\n  } catch (error) {\n    if (debug)\n      console.error(\"[pinia-plugin-persistedstate]\", error);\n  }\n}\nfunction persistState(state, {\n  storage,\n  serializer,\n  key,\n  debug,\n  pick,\n  omit\n}) {\n  try {\n    const picked = pick ? deepPickUnsafe(state, pick) : state;\n    const omitted = omit ? deepOmitUnsafe(picked, omit) : picked;\n    const toStorage = serializer.serialize(omitted);\n    storage.setItem(key, toStorage);\n  } catch (error) {\n    if (debug)\n      console.error(\"[pinia-plugin-persistedstate]\", error);\n  }\n}\nfunction createPersistence(context, optionsParser, auto) {\n  const { pinia, store, options: { persist = auto } } = context;\n  if (!persist)\n    return;\n  if (!(store.$id in pinia.state.value)) {\n    const originalStore = pinia._s.get(store.$id.replace(\"__hot:\", \"\"));\n    if (originalStore)\n      void Promise.resolve().then(() => originalStore.$persist());\n    return;\n  }\n  const persistenceOptions = Array.isArray(persist) ? persist : persist === true ? [{}] : [persist];\n  const persistences = persistenceOptions.map(optionsParser);\n  store.$hydrate = ({ runHooks = true } = {}) => {\n    persistences.forEach((p) => {\n      hydrateStore(store, p, context, runHooks);\n    });\n  };\n  store.$persist = () => {\n    persistences.forEach((p) => {\n      persistState(store.$state, p);\n    });\n  };\n  persistences.forEach((p) => {\n    hydrateStore(store, p, context);\n    store.$subscribe(\n      (_mutation, state) => persistState(state, p),\n      { detached: true }\n    );\n  });\n}\n\n// src/index.ts\nfunction createPersistedState(options = {}) {\n  return function(context) {\n    createPersistence(\n      context,\n      (p) => ({\n        key: (options.key ? options.key : (x) => x)(p.key ?? context.store.$id),\n        debug: p.debug ?? options.debug ?? false,\n        serializer: p.serializer ?? options.serializer ?? {\n          serialize: (data) => JSON.stringify(data),\n          deserialize: (data) => destr(data)\n        },\n        storage: p.storage ?? options.storage ?? window.localStorage,\n        beforeHydrate: p.beforeHydrate,\n        afterHydrate: p.afterHydrate,\n        pick: p.pick,\n        omit: p.omit\n      }),\n      options.auto ?? false\n    );\n  };\n}\nvar index_default = createPersistedState();\nexport {\n  createPersistedState,\n  index_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}