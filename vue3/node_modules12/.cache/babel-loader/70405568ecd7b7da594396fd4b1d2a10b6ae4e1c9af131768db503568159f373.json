{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelSelect as _vModelSelect, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, unref as _unref, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"category-settings\"\n};\nconst _hoisted_2 = {\n  type: \"submit\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"categories\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = {\n  key: 1\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  key: 2,\n  class: \"error\"\n};\nimport { useCategoryStore } from '@/stores/category';\nimport { onMounted, ref } from 'vue';\nimport { useInfiniteScroll } from '@/composables/useInfiniteScroll';\nexport default {\n  __name: 'CategorySettingList',\n  setup(__props) {\n    const categoryStore = useCategoryStore();\n    const editId = ref(null);\n    const form = ref({\n      title: '',\n      status: 'active',\n      for_place: 'no',\n      is_force: 'no'\n    });\n    const handleSubmit = async () => {\n      if (!form.value.title.trim()) return;\n      const payload = {\n        title: form.value.title.trim(),\n        status: form.value.status,\n        for_place: form.value.for_place,\n        is_force: form.value.is_force\n      };\n      await categoryStore.submitCategory(payload, editId.value);\n      resetForm();\n    };\n    const startEdit = cat => {\n      editId.value = cat.id;\n      form.value.title = cat.title;\n      form.value.status = cat.status;\n      form.value.for_place = cat.for_place;\n      form.value.is_force = String(cat.is_force);\n    };\n    const resetForm = () => {\n      editId.value = null;\n      form.value = {\n        title: '',\n        status: 'active',\n        for_place: 'no',\n        is_force: 'no'\n      };\n    };\n    const deleteCategory = async id => {\n      await categoryStore.deleteCategory(id);\n    };\n    const {\n      loadMoreTrigger: CategoryLoadTrigger,\n      setupObserver: setupCategoryObserver\n    } = useInfiniteScroll(async ({\n      offset\n    }) => {\n      await categoryStore.fetchCategoriesPaginated(offset, 10);\n      return {\n        items: categoryStore.allCategories,\n        has_more: categoryStore.hasMoreCategories\n      };\n    });\n    onMounted(() => {\n      setupCategoryObserver();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n        onSubmit: _withModifiers(handleSubmit, [\"prevent\"]),\n        class: \"category-form\"\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => form.value.title = $event),\n        placeholder: \"نام دسته‌بندی\"\n      }, null, 512), [[_vModelText, form.value.title]]), _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => form.value.status = $event)\n      }, _cache[4] || (_cache[4] = [_createElementVNode(\"option\", {\n        value: \"active\"\n      }, \"فعال\", -1), _createElementVNode(\"option\", {\n        value: \"inactive\"\n      }, \"غیرفعال\", -1)]), 512), [[_vModelSelect, form.value.status]]), _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => form.value.for_place = $event)\n      }, _cache[5] || (_cache[5] = [_createElementVNode(\"option\", {\n        value: \"yes\"\n      }, \"برای مکان\", -1), _createElementVNode(\"option\", {\n        value: \"no\"\n      }, \"برای ارگان\", -1)]), 512), [[_vModelSelect, form.value.for_place]]), _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => form.value.is_force = $event)\n      }, _cache[6] || (_cache[6] = [_createElementVNode(\"option\", {\n        value: \"yes\"\n      }, \"پر اهمیت\", -1), _createElementVNode(\"option\", {\n        value: \"no\"\n      }, \"کم اهمیت\", -1)]), 512), [[_vModelSelect, form.value.is_force]]), _createElementVNode(\"button\", _hoisted_2, _toDisplayString(editId.value ? 'ویرایش دسته‌بندی' : 'افزودن دسته‌بندی'), 1), editId.value ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        type: \"button\",\n        onClick: resetForm\n      }, \"انصراف\")) : _createCommentVNode(\"\", true)], 32), _unref(categoryStore).categoryListLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[7] || (_cache[7] = [_createElementVNode(\"div\", {\n        class: \"tiny-loader\"\n      }, null, -1)]))) : _unref(categoryStore).allCategories.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(categoryStore).allCategories, cat => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: cat.id\n        }, [_createElementVNode(\"td\", null, _toDisplayString(cat.title), 1), _createElementVNode(\"td\", null, [cat.for_place === 'yes' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"برای مکان\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"برای ارگان\"))]), _createElementVNode(\"td\", null, [cat.is_force === 'yes' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"پر اهمیت\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"کم اهمیت\"))]), _createElementVNode(\"td\", null, [cat.status === 'active' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, \"فعال\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_10, \"غیرفعال\"))]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n          onClick: $event => startEdit(cat)\n        }, \"ویرایش\", 8, _hoisted_11), _createElementVNode(\"button\", {\n          onClick: $event => deleteCategory(cat.id)\n        }, \"حذف\", 8, _hoisted_12)])]);\n      }), 128)), _createElementVNode(\"tr\", {\n        ref_key: \"CategoryLoadTrigger\",\n        ref: CategoryLoadTrigger,\n        style: {\n          \"height\": \"1px\"\n        }\n      }, null, 512)])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, \" دسته بندی ساخته نشده \"))]);\n    };\n  }\n};","map":{"version":3,"names":["useCategoryStore","onMounted","ref","useInfiniteScroll","categoryStore","editId","form","title","status","for_place","is_force","handleSubmit","value","trim","payload","submitCategory","resetForm","startEdit","cat","id","String","deleteCategory","loadMoreTrigger","CategoryLoadTrigger","setupObserver","setupCategoryObserver","offset","fetchCategoriesPaginated","items","allCategories","has_more","hasMoreCategories"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/category/CategorySettingList.vue"],"sourcesContent":["<template>\r\n  <div class=\"category-settings\">\r\n    <form @submit.prevent=\"handleSubmit\" class=\"category-form\">\r\n      <input v-model=\"form.title\" placeholder=\"نام دسته‌بندی\" />\r\n      <select v-model=\"form.status\">\r\n        <option value=\"active\">فعال</option>\r\n        <option value=\"inactive\">غیرفعال</option>\r\n      </select>\r\n      <select v-model=\"form.for_place\">\r\n        <option value=\"yes\">برای مکان</option>\r\n        <option value=\"no\">برای ارگان</option>\r\n      </select>\r\n      <select v-model=\"form.is_force\">\r\n        <option value=\"yes\">پر اهمیت</option>\r\n        <option value=\"no\">کم اهمیت</option>\r\n      </select>\r\n      <button type=\"submit\">\r\n        {{ editId ? 'ویرایش دسته‌بندی' : 'افزودن دسته‌بندی' }}\r\n      </button>\r\n      <button v-if=\"editId\" type=\"button\" @click=\"resetForm\">انصراف</button>\r\n    </form>\r\n    <div v-if=\"categoryStore.categoryListLoading\">\r\n      <div class=\"tiny-loader\"></div>\r\n    </div>\r\n    <div v-else-if=\"categoryStore.allCategories.length>0\" class=\"categories\">\r\n      <table>\r\n        <tbody>\r\n          <tr v-for=\"cat in categoryStore.allCategories\" :key=\"cat.id\">\r\n            <td>\r\n              {{ cat.title }} \r\n            </td>\r\n            <td>\r\n              <span v-if=\"cat.for_place==='yes'\">برای مکان</span>\r\n              <span v-else>برای ارگان</span>\r\n            </td>\r\n            <td>\r\n              <span v-if=\"cat.is_force==='yes'\">پر اهمیت</span>\r\n              <span v-else>کم اهمیت</span>\r\n            </td>\r\n            <td>\r\n              <span v-if=\"cat.status==='active'\">فعال</span>\r\n              <span v-else>غیرفعال</span>\r\n            </td>\r\n            <td>\r\n              <button @click=\"startEdit(cat)\">ویرایش</button>\r\n              <button @click=\"deleteCategory(cat.id)\">حذف</button>\r\n            </td>\r\n          </tr>\r\n          <tr ref=\"CategoryLoadTrigger\" style=\"height: 1px;\"></tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div v-else class=\"error\">\r\n      دسته بندی ساخته نشده\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  import { useCategoryStore } from '@/stores/category'\r\n  import { onMounted, ref } from 'vue'\r\n  import { useInfiniteScroll } from '@/composables/useInfiniteScroll'\r\n  const categoryStore = useCategoryStore()\r\n  const editId = ref(null)\r\n  const form = ref({\r\n    title: '',\r\n    status: 'active',\r\n    for_place: 'no',\r\n    is_force: 'no'\r\n  })\r\n  const handleSubmit = async () => {\r\n    if (!form.value.title.trim()) return\r\n    const payload = {\r\n      title: form.value.title.trim(),\r\n      status: form.value.status,\r\n      for_place: form.value.for_place,\r\n      is_force: form.value.is_force\r\n    }\r\n    await categoryStore.submitCategory(payload, editId.value)\r\n    resetForm()\r\n  }\r\n  const startEdit = (cat) => {\r\n    editId.value = cat.id\r\n    form.value.title = cat.title\r\n    form.value.status = cat.status\r\n    form.value.for_place = cat.for_place\r\n    form.value.is_force = String(cat.is_force)\r\n  }\r\n  const resetForm = () => {\r\n    editId.value = null\r\n    form.value = {\r\n      title: '',\r\n      status: 'active',\r\n      for_place: 'no',\r\n      is_force: 'no'\r\n    }\r\n  }\r\n  const deleteCategory = async (id) => {\r\n    await categoryStore.deleteCategory(id)\r\n  }\r\n  const {\r\n    loadMoreTrigger: CategoryLoadTrigger,\r\n    setupObserver:setupCategoryObserver,\r\n  } = useInfiniteScroll(async ({offset}) => {\r\n    await categoryStore.fetchCategoriesPaginated(offset,10)\r\n    return {\r\n      items: categoryStore.allCategories,\r\n      has_more: categoryStore.hasMoreCategories,\r\n    }\r\n  })\r\n  onMounted(() => {\r\n    setupCategoryObserver()\r\n  })\r\n</script>\r\n\r\n<style scoped>\r\n  .category-settings {\r\n    max-width: 600px;\r\n    margin: auto;\r\n    padding: 20px;\r\n  }\r\n  .category-form {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n    margin-bottom: 15px;\r\n  }\r\n  .category-form input,\r\n  .category-form select {\r\n    flex: 1 1 150px;\r\n  }\r\n  table{\r\n    text-align: center;\r\n  }\r\n  .categories {\r\n    max-height: 350px;\r\n    overflow: auto;\r\n  }\r\n  .tiny-loader {\r\n    width: 20px;\r\n    height: 20px;\r\n    border: 2px solid #ccc;\r\n    border-top-color: #333;\r\n    border-radius: 50%;\r\n    animation: spin 1s linear infinite;\r\n    margin: 10px auto;\r\n  }\r\n  @keyframes spin {\r\n    to { transform: rotate(360deg); }\r\n  }\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DE,SAASA,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,SAASC,iBAAiB,QAAQ,iCAAiC;;;;IACnE,MAAMC,aAAa,GAAGJ,gBAAgB,CAAC,CAAC;IACxC,MAAMK,MAAM,GAAGH,GAAG,CAAC,IAAI,CAAC;IACxB,MAAMI,IAAI,GAAGJ,GAAG,CAAC;MACfK,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,QAAQ;MAChBC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACL,IAAI,CAACM,KAAK,CAACL,KAAK,CAACM,IAAI,CAAC,CAAC,EAAE;MAC9B,MAAMC,OAAO,GAAG;QACdP,KAAK,EAAED,IAAI,CAACM,KAAK,CAACL,KAAK,CAACM,IAAI,CAAC,CAAC;QAC9BL,MAAM,EAAEF,IAAI,CAACM,KAAK,CAACJ,MAAM;QACzBC,SAAS,EAAEH,IAAI,CAACM,KAAK,CAACH,SAAS;QAC/BC,QAAQ,EAAEJ,IAAI,CAACM,KAAK,CAACF;MACvB,CAAC;MACD,MAAMN,aAAa,CAACW,cAAc,CAACD,OAAO,EAAET,MAAM,CAACO,KAAK,CAAC;MACzDI,SAAS,CAAC,CAAC;IACb,CAAC;IACD,MAAMC,SAAS,GAAIC,GAAG,IAAK;MACzBb,MAAM,CAACO,KAAK,GAAGM,GAAG,CAACC,EAAE;MACrBb,IAAI,CAACM,KAAK,CAACL,KAAK,GAAGW,GAAG,CAACX,KAAK;MAC5BD,IAAI,CAACM,KAAK,CAACJ,MAAM,GAAGU,GAAG,CAACV,MAAM;MAC9BF,IAAI,CAACM,KAAK,CAACH,SAAS,GAAGS,GAAG,CAACT,SAAS;MACpCH,IAAI,CAACM,KAAK,CAACF,QAAQ,GAAGU,MAAM,CAACF,GAAG,CAACR,QAAQ,CAAC;IAC5C,CAAC;IACD,MAAMM,SAAS,GAAGA,CAAA,KAAM;MACtBX,MAAM,CAACO,KAAK,GAAG,IAAI;MACnBN,IAAI,CAACM,KAAK,GAAG;QACXL,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,QAAQ;QAChBC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE;MACZ,CAAC;IACH,CAAC;IACD,MAAMW,cAAc,GAAG,MAAOF,EAAE,IAAK;MACnC,MAAMf,aAAa,CAACiB,cAAc,CAACF,EAAE,CAAC;IACxC,CAAC;IACD,MAAM;MACJG,eAAe,EAAEC,mBAAmB;MACpCC,aAAa,EAACC;IAChB,CAAC,GAAGtB,iBAAiB,CAAC,OAAO;MAACuB;IAAM,CAAC,KAAK;MACxC,MAAMtB,aAAa,CAACuB,wBAAwB,CAACD,MAAM,EAAC,EAAE,CAAC;MACvD,OAAO;QACLE,KAAK,EAAExB,aAAa,CAACyB,aAAa;QAClCC,QAAQ,EAAE1B,aAAa,CAAC2B;MAC1B,CAAC;IACH,CAAC,CAAC;IACF9B,SAAS,CAAC,MAAM;MACdwB,qBAAqB,CAAC,CAAC;IACzB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}