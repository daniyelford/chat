{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"section\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"loading\"\n};\nimport { ref, watch, computed } from 'vue';\nimport RadioGroup from '@/components/tooles/news/address/RadioGroup.vue';\nimport MapPicker from '@/components/tooles/news/address/MapPicker.vue';\nimport { fullAddress } from '@/utils/geo';\nexport default {\n  __name: 'AddressSelector ',\n  props: {\n    loginCity: String,\n    modelValue: Object,\n    userCoordinate: {\n      type: Object,\n      default: () => ({\n        lat: '',\n        lon: ''\n      })\n    }\n  },\n  emits: ['update', 'loading'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const emit = __emit;\n    const props = __props;\n    watch(() => props.userCoordinate, val => {\n      if (val && val.lat && (val.lng || val.lon)) {\n        console.log('مقدار مختصات رسید:', val);\n      }\n    }, {\n      immediate: true\n    });\n    const addressModes = computed(() => {\n      const modes = [];\n      if (props.loginCity) {\n        modes.push({\n          id: 'city',\n          label: `شهر فعلی ${props.loginCity}`\n        });\n      }\n      modes.push({\n        id: 'location',\n        label: 'انتخاب از نقشه'\n      });\n      return modes;\n    });\n    const selectedMode = ref(props.loginCity ? props.modelValue?.type || 'city' : 'location');\n    const location = ref(props.modelValue?.value || {\n      lat: '',\n      lng: '',\n      address: ''\n    });\n    const loading = ref(false);\n    const handleMapSelect = async ({\n      lat,\n      lng\n    }) => {\n      location.value.lat = lat;\n      location.value.lng = lng;\n      loading.value = true;\n      try {\n        const result = await fullAddress(lat, lng);\n        location.value.total = result || '';\n        location.value.address = result.display_name || '';\n        emit('update', {\n          type: 'location',\n          value: location.value\n        });\n      } catch (e) {\n        location.value.address = 'خطا در دریافت آدرس';\n      } finally {\n        loading.value = false;\n      }\n    };\n    watch([selectedMode, location], () => {\n      let value = null;\n      if (selectedMode.value === 'city') {\n        value = {\n          type: 'city',\n          value: props.loginCity\n        };\n      } else if (selectedMode.value === 'location') {\n        value = {\n          type: 'location',\n          value: location.value\n        };\n      }\n      emit('update', value);\n    });\n    watch(loading, () => {\n      emit('loading', loading.value);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n        class: \"address-label\"\n      }, \"انتخاب آدرس\", -1)), _createVNode(RadioGroup, {\n        modelValue: selectedMode.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => selectedMode.value = $event),\n        options: addressModes.value,\n        name: \"address-mode\"\n      }, null, 8, [\"modelValue\", \"options\"]), selectedMode.value === 'location' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n        class: \"text\"\n      }, \"موقعیت مکانی\", -1)), props.userCoordinate ? (_openBlock(), _createBlock(MapPicker, {\n        key: 0,\n        center: props.userCoordinate,\n        onPick: handleMapSelect\n      }, null, 8, [\"center\"])) : _createCommentVNode(\"\", true), loading.value ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"در حال دریافت آدرس از نقشه...\")) : _createCommentVNode(\"\", true), !loading.value ? _withDirectives((_openBlock(), _createElementBlock(\"textarea\", {\n        key: 2,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => location.value.address = $event),\n        rows: \"3\",\n        class: \"textarea\",\n        placeholder: \"آدرس انتخاب ‌شده را کامل کنید...\"\n      }, \"      \", 512)), [[_vModelText, location.value.address]]) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","computed","RadioGroup","MapPicker","fullAddress","emit","__emit","props","__props","userCoordinate","val","lat","lng","lon","console","log","immediate","addressModes","modes","loginCity","push","id","label","selectedMode","modelValue","type","location","value","address","loading","handleMapSelect","result","total","display_name","e"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/tooles/news/AddressSelector .vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label class=\"address-label\">انتخاب آدرس</label>\r\n    <RadioGroup\r\n      v-model=\"selectedMode\"\r\n      :options=\"addressModes\"\r\n      name=\"address-mode\"\r\n    />\r\n    <div class=\"section\" v-if=\"selectedMode === 'location'\">\r\n      <label class=\"text\">موقعیت مکانی</label>\r\n      <MapPicker v-if=\"props.userCoordinate\" :center=\"props.userCoordinate\" @pick=\"handleMapSelect\" />\r\n      <span class=\"loading\" v-if=\"loading\">در حال دریافت آدرس از نقشه...</span>\r\n      <textarea\r\n        v-if=\"!loading\"\r\n        v-model=\"location.address\"\r\n        rows=\"3\"\r\n        class=\"textarea\"\r\n        placeholder=\"آدرس انتخاب ‌شده را کامل کنید...\">\r\n      </textarea>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\n  import { ref, watch, defineEmits, defineProps, computed } from 'vue'\r\n  import RadioGroup from '@/components/tooles/news/address/RadioGroup.vue'\r\n  import MapPicker from '@/components/tooles/news/address/MapPicker.vue'\r\n  import { fullAddress } from '@/utils/geo'\r\n  const emit = defineEmits(['update','loading'])\r\n  const props = defineProps({\r\n    loginCity: String,\r\n    modelValue: Object,\r\n    userCoordinate: {\r\n      type: Object,\r\n      default: () => ({ lat: '', lon: '' })\r\n    }\r\n  })\r\n  watch(() => props.userCoordinate, (val) => {\r\n    if (val && val.lat && (val.lng || val.lon)) {\r\n      console.log('مقدار مختصات رسید:', val)\r\n    }\r\n  }, { immediate: true })\r\n  const addressModes = computed(() => {\r\n    const modes = []\r\n    if (props.loginCity) {\r\n      modes.push({ id: 'city', label: `شهر فعلی ${props.loginCity}` })\r\n    }\r\n    modes.push({ id: 'location', label: 'انتخاب از نقشه' })\r\n    return modes\r\n  })\r\n  const selectedMode = ref(\r\n    props.loginCity\r\n      ? props.modelValue?.type || 'city'\r\n      : 'location'\r\n  )\r\n  const location = ref(props.modelValue?.value || { lat: '', lng: '', address: '' })\r\n  const loading = ref(false)\r\n  const handleMapSelect = async ({ lat, lng }) => {\r\n    location.value.lat = lat\r\n    location.value.lng = lng\r\n    loading.value = true\r\n    try {\r\n      const result = await fullAddress(lat, lng)\r\n      location.value.total = result || ''\r\n      location.value.address = result.display_name || ''\r\n      emit('update', { type: 'location', value: location.value })\r\n    } catch (e) {\r\n      location.value.address = 'خطا در دریافت آدرس'\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n  watch([selectedMode, location], () => {\r\n    let value = null\r\n    if (selectedMode.value === 'city') {\r\n      value = { type: 'city', value: props.loginCity }\r\n    } else if (selectedMode.value === 'location') {\r\n      value = { type: 'location', value: location.value }\r\n    }\r\n    emit('update', value)\r\n  })\r\n  watch(loading, () => {\r\n    emit('loading', loading.value)\r\n  })\r\n</script>\r\n\r\n<style scoped>\r\n  .loading{\r\n    position: relative;\r\n    top: -275px;\r\n    right: 10px;\r\n    color: #ff005c;\r\n  }\r\n  .address-label {\r\n    font-weight: bold;\r\n    margin-bottom: 0.75rem;\r\n    display: block;\r\n  }\r\n  .section {\r\n    margin-top: 1rem;\r\n  }\r\n  .text {\r\n    font-size: 0.875rem;\r\n    margin-bottom: 0.25rem;\r\n    display: block;\r\n  }\r\n  .textarea {\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    padding: 0.5rem;\r\n    width: 34%;\r\n    height: 300px;\r\n    resize: vertical;\r\n    display: inline-block;\r\n    margin-top: 0.75rem;\r\n    margin-right: 1%;\r\n    box-sizing: border-box;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    .loading{\r\n      position: unset;\r\n      padding: 10px;\r\n    }\r\n    .textarea {\r\n      width: 100%;\r\n      height: 80px;\r\n      margin-right: 0;\r\n    }\r\n  }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}