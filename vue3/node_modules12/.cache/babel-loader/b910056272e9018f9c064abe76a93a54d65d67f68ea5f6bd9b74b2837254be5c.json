{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, renderSlot, createElementVNode, withDirectives, Fragment, renderList, toDisplayString, vShow, createCommentVNode, createVNode, Transition, withCtx, normalizeStyle, createTextVNode } from 'vue';\nfunction isEmpty(opt) {\n  if (opt === 0) return false;\n  if (Array.isArray(opt) && opt.length === 0) return true;\n  return !opt;\n}\nfunction not(fun) {\n  return (...params) => !fun(...params);\n}\nfunction includes(str, query) {\n  /* istanbul ignore else */\n  if (str === undefined) str = 'undefined';\n  if (str === null) str = 'null';\n  if (str === false) str = 'false';\n  const text = str.toString().toLowerCase();\n  return text.indexOf(query.trim()) !== -1;\n}\nfunction stripGroups(options) {\n  return options.filter(option => !option.$isLabel);\n}\nfunction flattenOptions(values, label) {\n  return options => options.reduce((prev, curr) => {\n    /* istanbul ignore else */\n    if (curr[values] && curr[values].length) {\n      prev.push({\n        $groupLabel: curr[label],\n        $isLabel: true\n      });\n      return prev.concat(curr[values]);\n    }\n    return prev;\n  }, []);\n}\nconst flow = (...fns) => x => fns.reduce((v, f) => f(v), x);\nvar multiselectMixin = {\n  data() {\n    return {\n      search: '',\n      isOpen: false,\n      preferredOpenDirection: 'below',\n      optimizedHeight: this.maxHeight\n    };\n  },\n  props: {\n    /**\n     * Decide whether to filter the results based on search query.\n     * Useful for async filtering, where we search through more complex data.\n     * @type {Boolean}\n     */\n    internalSearch: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Array of available options: Objects, Strings or Integers.\n     * If array of objects, visible label will default to option.label.\n     * If `labal` prop is passed, label will equal option['label']\n     * @type {Array}\n     */\n    options: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Equivalent to the `multiple` attribute on a `<select>` input.\n     * @default false\n     * @type {Boolean}\n     */\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Key to compare objects\n     * @default 'id'\n     * @type {String}\n     */\n    trackBy: {\n      type: String\n    },\n    /**\n     * Label to look for in option Object\n     * @default 'label'\n     * @type {String}\n     */\n    label: {\n      type: String\n    },\n    /**\n     * Enable/disable search in options\n     * @default true\n     * @type {Boolean}\n     */\n    searchable: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Clear the search input after `)\n     * @default true\n     * @type {Boolean}\n     */\n    clearOnSelect: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Hide already selected options\n     * @default false\n     * @type {Boolean}\n     */\n    hideSelected: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Equivalent to the `placeholder` attribute on a `<select>` input.\n     * @default 'Select option'\n     * @type {String}\n     */\n    placeholder: {\n      type: String,\n      default: 'Select option'\n    },\n    /**\n     * Allow to remove all selected values\n     * @default true\n     * @type {Boolean}\n     */\n    allowEmpty: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Reset this.internalValue, this.search after this.internalValue changes.\n     * Useful if want to create a stateless dropdown.\n     * @default false\n     * @type {Boolean}\n     */\n    resetAfter: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Enable/disable closing after selecting an option\n     * @default true\n     * @type {Boolean}\n     */\n    closeOnSelect: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Function to interpolate the custom label\n     * @default false\n     * @type {Function}\n     */\n    customLabel: {\n      type: Function,\n      default(option, label) {\n        if (isEmpty(option)) return '';\n        return label ? option[label] : option;\n      }\n    },\n    /**\n     * Disable / Enable tagging\n     * @default false\n     * @type {Boolean}\n     */\n    taggable: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * String to show when highlighting a potential tag\n     * @default 'Press enter to create a tag'\n     * @type {String}\n    */\n    tagPlaceholder: {\n      type: String,\n      default: 'Press enter to create a tag'\n    },\n    /**\n     * By default new tags will appear above the search results.\n     * Changing to 'bottom' will revert this behaviour\n     * and will proritize the search results\n     * @default 'top'\n     * @type {String}\n    */\n    tagPosition: {\n      type: String,\n      default: 'top'\n    },\n    /**\n     * Number of allowed selected options. No limit if 0.\n     * @default 0\n     * @type {Number}\n    */\n    max: {\n      type: [Number, Boolean],\n      default: false\n    },\n    /**\n     * Will be passed with all events as second param.\n     * Useful for identifying events origin.\n     * @default null\n     * @type {String|Integer}\n    */\n    id: {\n      default: null\n    },\n    /**\n     * Limits the options displayed in the dropdown\n     * to the first X options.\n     * @default 1000\n     * @type {Integer}\n    */\n    optionsLimit: {\n      type: Number,\n      default: 1000\n    },\n    /**\n     * Name of the property containing\n     * the group values\n     * @default 1000\n     * @type {String}\n    */\n    groupValues: {\n      type: String\n    },\n    /**\n     * Name of the property containing\n     * the group label\n     * @default 1000\n     * @type {String}\n    */\n    groupLabel: {\n      type: String\n    },\n    /**\n     * Allow to select all group values\n     * by selecting the group label\n     * @default false\n     * @type {Boolean}\n     */\n    groupSelect: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Array of keyboard keys to block\n     * when selecting\n     * @default 1000\n     * @type {String}\n    */\n    blockKeys: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    /**\n     * Prevent from wiping up the search value\n     * @default false\n     * @type {Boolean}\n    */\n    preserveSearch: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Select 1st options if value is empty\n     * @default false\n     * @type {Boolean}\n    */\n    preselectFirst: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Prevent autofocus\n     * @default false\n     * @type {Boolean}\n     */\n    preventAutofocus: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Allows a custom function for sorting search/filtered results.\n     * @default null\n     * @type {Function}\n     */\n    filteringSortFunc: {\n      type: Function,\n      default: null\n    }\n  },\n  mounted() {\n    /* istanbul ignore else */\n    if (!this.multiple && this.max) {\n      console.warn('[Vue-Multiselect warn]: Max prop should not be used when prop Multiple equals false.');\n    }\n    if (this.preselectFirst && !this.internalValue.length && this.options.length) {\n      this.select(this.filteredOptions[0]);\n    }\n  },\n  computed: {\n    internalValue() {\n      return this.modelValue || this.modelValue === 0 ? Array.isArray(this.modelValue) ? this.modelValue : [this.modelValue] : [];\n    },\n    filteredOptions() {\n      const search = this.search || '';\n      const normalizedSearch = search.toLowerCase().trim();\n      let options = this.options.concat();\n\n      /* istanbul ignore else */\n      if (this.internalSearch) {\n        options = this.groupValues ? this.filterAndFlat(options, normalizedSearch, this.label) : this.filterOptions(options, normalizedSearch, this.label, this.customLabel);\n      } else {\n        options = this.groupValues ? flattenOptions(this.groupValues, this.groupLabel)(options) : options;\n      }\n      options = this.hideSelected ? options.filter(not(this.isSelected)) : options;\n\n      /* istanbul ignore else */\n      if (this.taggable && normalizedSearch.length && !this.isExistingOption(normalizedSearch)) {\n        if (this.tagPosition === 'bottom') {\n          options.push({\n            isTag: true,\n            label: search\n          });\n        } else {\n          options.unshift({\n            isTag: true,\n            label: search\n          });\n        }\n      }\n      return options.slice(0, this.optionsLimit);\n    },\n    valueKeys() {\n      if (this.trackBy) {\n        return this.internalValue.map(element => element[this.trackBy]);\n      } else {\n        return this.internalValue;\n      }\n    },\n    optionKeys() {\n      const options = this.groupValues ? this.flatAndStrip(this.options) : this.options;\n      return options.map(element => this.customLabel(element, this.label).toString().toLowerCase());\n    },\n    currentOptionLabel() {\n      return this.multiple ? this.searchable ? '' : this.placeholder : this.internalValue.length ? this.getOptionLabel(this.internalValue[0]) : this.searchable ? '' : this.placeholder;\n    }\n  },\n  watch: {\n    internalValue: {\n      handler() {\n        /* istanbul ignore else */\n        if (this.resetAfter && this.internalValue.length) {\n          this.search = '';\n          this.$emit('update:modelValue', this.multiple ? [] : null);\n        }\n      },\n      deep: true\n    },\n    search() {\n      this.$emit('search-change', this.search);\n    }\n  },\n  emits: ['open', 'search-change', 'close', 'select', 'update:modelValue', 'remove', 'tag'],\n  methods: {\n    /**\n     * Returns the internalValue in a way it can be emited to the parent\n     * @returns {Object||Array||String||Integer}\n     */\n    getValue() {\n      return this.multiple ? this.internalValue : this.internalValue.length === 0 ? null : this.internalValue[0];\n    },\n    /**\n     * Filters and then flattens the options list\n     * @param  {Array}\n     * @return {Array} returns a filtered and flat options list\n     */\n    filterAndFlat(options, search, label) {\n      return flow(this.filterGroups(search, label, this.groupValues, this.groupLabel, this.customLabel), flattenOptions(this.groupValues, this.groupLabel))(options);\n    },\n    /**\n     * Flattens and then strips the group labels from the options list\n     * @param  {Array}\n     * @return {Array} returns a flat options list without group labels\n     */\n    flatAndStrip(options) {\n      return flow(flattenOptions(this.groupValues, this.groupLabel), stripGroups)(options);\n    },\n    /**\n     * Updates the search value\n     * @param  {String}\n     */\n    updateSearch(query) {\n      this.search = query;\n    },\n    /**\n     * Finds out if the given query is already present\n     * in the available options\n     * @param  {String}\n     * @return {Boolean} returns true if element is available\n     */\n    isExistingOption(query) {\n      return !this.options ? false : this.optionKeys.indexOf(query) > -1;\n    },\n    /**\n     * Finds out if the given element is already present\n     * in the result value\n     * @param  {Object||String||Integer} option passed element to check\n     * @returns {Boolean} returns true if element is selected\n     */\n    isSelected(option) {\n      const opt = this.trackBy ? option[this.trackBy] : option;\n      return this.valueKeys.indexOf(opt) > -1;\n    },\n    /**\n     * Finds out if the given option is disabled\n     * @param  {Object||String||Integer} option passed element to check\n     * @returns {Boolean} returns true if element is disabled\n     */\n    isOptionDisabled(option) {\n      return !!option.$isDisabled;\n    },\n    /**\n     * Returns empty string when options is null/undefined\n     * Returns tag query if option is tag.\n     * Returns the customLabel() results and casts it to string.\n     *\n     * @param  {Object||String||Integer} Passed option\n     * @returns {Object||String}\n     */\n    getOptionLabel(option) {\n      if (isEmpty(option)) return '';\n      /* istanbul ignore else */\n      if (option.isTag) return option.label;\n      /* istanbul ignore else */\n      if (option.$isLabel) return option.$groupLabel;\n      const label = this.customLabel(option, this.label);\n      /* istanbul ignore else */\n      if (isEmpty(label)) return '';\n      return label;\n    },\n    /**\n     * Add the given option to the list of selected options\n     * or sets the option as the selected option.\n     * If option is already selected -> remove it from the results.\n     *\n     * @param  {Object||String||Integer} option to select/deselect\n     * @param  {Boolean} block removing\n     */\n    select(option, key) {\n      /* istanbul ignore else */\n      if (option.$isLabel && this.groupSelect) {\n        this.selectGroup(option);\n        return;\n      }\n      if (this.blockKeys.indexOf(key) !== -1 || this.disabled || option.$isDisabled || option.$isLabel) return;\n      /* istanbul ignore else */\n      if (this.max && this.multiple && this.internalValue.length === this.max) return;\n      /* istanbul ignore else */\n      if (key === 'Tab' && !this.pointerDirty) return;\n      if (option.isTag) {\n        this.$emit('tag', option.label, this.id);\n        this.search = '';\n        if (this.closeOnSelect && !this.multiple) this.deactivate();\n      } else {\n        const isSelected = this.isSelected(option);\n        if (isSelected) {\n          if (key !== 'Tab') this.removeElement(option);\n          return;\n        }\n        if (this.multiple) {\n          this.$emit('update:modelValue', this.internalValue.concat([option]));\n        } else {\n          this.$emit('update:modelValue', option);\n        }\n        this.$emit('select', option, this.id);\n\n        /* istanbul ignore else */\n        if (this.clearOnSelect) this.search = '';\n      }\n      /* istanbul ignore else */\n      if (this.closeOnSelect) this.deactivate();\n    },\n    /**\n     * Add the given group options to the list of selected options\n     * If all group optiona are already selected -> remove it from the results.\n     *\n     * @param  {Object||String||Integer} group to select/deselect\n     */\n    selectGroup(selectedGroup) {\n      const group = this.options.find(option => {\n        return option[this.groupLabel] === selectedGroup.$groupLabel;\n      });\n      if (!group) return;\n      if (this.wholeGroupSelected(group)) {\n        this.$emit('remove', group[this.groupValues], this.id);\n        const groupValues = this.trackBy ? group[this.groupValues].map(val => val[this.trackBy]) : group[this.groupValues];\n        const newValue = this.internalValue.filter(option => groupValues.indexOf(this.trackBy ? option[this.trackBy] : option) === -1);\n        this.$emit('update:modelValue', newValue);\n      } else {\n        const optionsToAdd = group[this.groupValues].filter(option => !(this.isOptionDisabled(option) || this.isSelected(option)));\n\n        // if max is defined then just select options respecting max\n        if (this.max) {\n          optionsToAdd.splice(this.max - this.internalValue.length);\n        }\n        this.$emit('select', optionsToAdd, this.id);\n        this.$emit('update:modelValue', this.internalValue.concat(optionsToAdd));\n      }\n      if (this.closeOnSelect) this.deactivate();\n    },\n    /**\n     * Helper to identify if all values in a group are selected\n     *\n     * @param {Object} group to validated selected values against\n     */\n    wholeGroupSelected(group) {\n      return group[this.groupValues].every(option => this.isSelected(option) || this.isOptionDisabled(option));\n    },\n    /**\n     * Helper to identify if all values in a group are disabled\n     *\n     * @param {Object} group to check for disabled values\n     */\n    wholeGroupDisabled(group) {\n      return group[this.groupValues].every(this.isOptionDisabled);\n    },\n    /**\n     * Removes the given option from the selected options.\n     * Additionally checks this.allowEmpty prop if option can be removed when\n     * it is the last selected option.\n     *\n     * @param  {type} option description\n     * @return {type}        description\n     */\n    removeElement(option, shouldClose = true) {\n      /* istanbul ignore else */\n      if (this.disabled) return;\n      /* istanbul ignore else */\n      if (option.$isDisabled) return;\n      /* istanbul ignore else */\n      if (!this.allowEmpty && this.internalValue.length <= 1) {\n        this.deactivate();\n        return;\n      }\n      const index = typeof option === 'object' ? this.valueKeys.indexOf(option[this.trackBy]) : this.valueKeys.indexOf(option);\n      if (this.multiple) {\n        const newValue = this.internalValue.slice(0, index).concat(this.internalValue.slice(index + 1));\n        this.$emit('update:modelValue', newValue);\n      } else {\n        this.$emit('update:modelValue', null);\n      }\n      this.$emit('remove', option, this.id);\n\n      /* istanbul ignore else */\n      if (this.closeOnSelect && shouldClose) this.deactivate();\n    },\n    /**\n     * Calls this.removeElement() with the last element\n     * from this.internalValue (selected element Array)\n     *\n     * @fires this#removeElement\n     */\n    removeLastElement() {\n      /* istanbul ignore else */\n      if (this.blockKeys.indexOf('Delete') !== -1) return;\n      /* istanbul ignore else */\n      if (this.search.length === 0 && Array.isArray(this.internalValue) && this.internalValue.length) {\n        this.removeElement(this.internalValue[this.internalValue.length - 1], false);\n      }\n    },\n    /**\n     * Opens the multiselect’s dropdown.\n     * Sets this.isOpen to TRUE\n     */\n    activate() {\n      /* istanbul ignore else */\n      if (this.isOpen || this.disabled) return;\n      this.adjustPosition();\n      /* istanbul ignore else  */\n      if (this.groupValues && this.pointer === 0 && this.filteredOptions.length) {\n        this.pointer = 1;\n      }\n      this.isOpen = true;\n      /* istanbul ignore else  */\n      if (this.searchable) {\n        if (!this.preserveSearch) this.search = '';\n        if (!this.preventAutofocus) this.$nextTick(() => this.$refs.search && this.$refs.search.focus());\n      } else if (!this.preventAutofocus) {\n        if (typeof this.$el !== 'undefined') this.$el.focus();\n      }\n      this.$emit('open', this.id);\n    },\n    /**\n     * Closes the multiselect’s dropdown.\n     * Sets this.isOpen to FALSE\n     */\n    deactivate() {\n      /* istanbul ignore else */\n      if (!this.isOpen) return;\n      this.isOpen = false;\n      /* istanbul ignore else  */\n      if (this.searchable) {\n        if (this.$refs.search !== null && typeof this.$refs.search !== 'undefined') this.$refs.search.blur();\n      } else {\n        if (typeof this.$el !== 'undefined') this.$el.blur();\n      }\n      if (!this.preserveSearch) this.search = '';\n      this.$emit('close', this.getValue(), this.id);\n    },\n    /**\n     * Call this.activate() or this.deactivate()\n     * depending on this.isOpen value.\n     *\n     * @fires this#activate || this#deactivate\n     * @property {Boolean} isOpen indicates if dropdown is open\n     */\n    toggle() {\n      this.isOpen ? this.deactivate() : this.activate();\n    },\n    /**\n     * Updates the hasEnoughSpace variable used for\n     * detecting where to expand the dropdown\n     */\n    adjustPosition() {\n      if (typeof window === 'undefined') return;\n      const spaceAbove = this.$el.getBoundingClientRect().top;\n      const spaceBelow = window.innerHeight - this.$el.getBoundingClientRect().bottom;\n      const hasEnoughSpaceBelow = spaceBelow > this.maxHeight;\n      if (hasEnoughSpaceBelow || spaceBelow > spaceAbove || this.openDirection === 'below' || this.openDirection === 'bottom') {\n        this.preferredOpenDirection = 'below';\n        this.optimizedHeight = Math.min(spaceBelow - 40, this.maxHeight);\n      } else {\n        this.preferredOpenDirection = 'above';\n        this.optimizedHeight = Math.min(spaceAbove - 40, this.maxHeight);\n      }\n    },\n    /**\n     * Filters and sorts the options ready for selection\n     * @param {Array} options\n     * @param {String} search\n     * @param {String} label\n     * @param {Function} customLabel\n     * @returns {Array}\n     */\n    filterOptions(options, search, label, customLabel) {\n      return search ? options.filter(option => includes(customLabel(option, label), search)).sort((a, b) => {\n        if (typeof this.filteringSortFunc === 'function') {\n          return this.filteringSortFunc(a, b);\n        }\n        return customLabel(a, label).length - customLabel(b, label).length;\n      }) : options;\n    },\n    /**\n     *\n     * @param {String} search\n     * @param {String} label\n     * @param {String} values\n     * @param {String} groupLabel\n     * @param {function} customLabel\n     * @returns {function(*): *}\n     */\n    filterGroups(search, label, values, groupLabel, customLabel) {\n      return groups => groups.map(group => {\n        /* istanbul ignore else */\n        if (!group[values]) {\n          console.warn('Options passed to vue-multiselect do not contain groups, despite the config.');\n          return [];\n        }\n        const groupOptions = this.filterOptions(group[values], search, label, customLabel);\n        return groupOptions.length ? {\n          [groupLabel]: group[groupLabel],\n          [values]: groupOptions\n        } : [];\n      });\n    }\n  }\n};\nvar pointerMixin = {\n  data() {\n    return {\n      pointer: 0,\n      pointerDirty: false\n    };\n  },\n  props: {\n    /**\n     * Enable/disable highlighting of the pointed value.\n     * @type {Boolean}\n     * @default true\n     */\n    showPointer: {\n      type: Boolean,\n      default: true\n    },\n    optionHeight: {\n      type: Number,\n      default: 40\n    }\n  },\n  computed: {\n    pointerPosition() {\n      return this.pointer * this.optionHeight;\n    },\n    visibleElements() {\n      return this.optimizedHeight / this.optionHeight;\n    }\n  },\n  watch: {\n    filteredOptions() {\n      this.pointerAdjust();\n    },\n    isOpen() {\n      this.pointerDirty = false;\n    },\n    pointer() {\n      this.$refs.search && this.$refs.search.setAttribute('aria-activedescendant', this.id + '-' + this.pointer.toString());\n    }\n  },\n  methods: {\n    optionHighlight(index, option) {\n      return {\n        'multiselect__option--highlight': index === this.pointer && this.showPointer,\n        'multiselect__option--selected': this.isSelected(option)\n      };\n    },\n    groupHighlight(index, selectedGroup) {\n      if (!this.groupSelect) {\n        return ['multiselect__option--disabled', {\n          'multiselect__option--group': selectedGroup.$isLabel\n        }];\n      }\n      const group = this.options.find(option => {\n        return option[this.groupLabel] === selectedGroup.$groupLabel;\n      });\n      return group && !this.wholeGroupDisabled(group) ? ['multiselect__option--group', {\n        'multiselect__option--highlight': index === this.pointer && this.showPointer\n      }, {\n        'multiselect__option--group-selected': this.wholeGroupSelected(group)\n      }] : 'multiselect__option--disabled';\n    },\n    addPointerElement({\n      key\n    } = 'Enter') {\n      /* istanbul ignore else */\n      if (this.filteredOptions.length > 0) {\n        this.select(this.filteredOptions[this.pointer], key);\n      }\n      this.pointerReset();\n    },\n    pointerForward() {\n      /* istanbul ignore else */\n      if (this.pointer < this.filteredOptions.length - 1) {\n        this.pointer++;\n        /* istanbul ignore next */\n        if (this.$refs.list.scrollTop <= this.pointerPosition - (this.visibleElements - 1) * this.optionHeight) {\n          this.$refs.list.scrollTop = this.pointerPosition - (this.visibleElements - 1) * this.optionHeight;\n        }\n        /* istanbul ignore else */\n        if (this.filteredOptions[this.pointer] && this.filteredOptions[this.pointer].$isLabel && !this.groupSelect) this.pointerForward();\n      }\n      this.pointerDirty = true;\n    },\n    pointerBackward() {\n      if (this.pointer > 0) {\n        this.pointer--;\n        /* istanbul ignore else */\n        if (this.$refs.list.scrollTop >= this.pointerPosition) {\n          this.$refs.list.scrollTop = this.pointerPosition;\n        }\n        /* istanbul ignore else */\n        if (this.filteredOptions[this.pointer] && this.filteredOptions[this.pointer].$isLabel && !this.groupSelect) this.pointerBackward();\n      } else {\n        /* istanbul ignore else */\n        if (this.filteredOptions[this.pointer] && this.filteredOptions[0].$isLabel && !this.groupSelect) this.pointerForward();\n      }\n      this.pointerDirty = true;\n    },\n    pointerReset() {\n      /* istanbul ignore else */\n      if (!this.closeOnSelect) return;\n      this.pointer = 0;\n      /* istanbul ignore else */\n      if (this.$refs.list) {\n        this.$refs.list.scrollTop = 0;\n      }\n    },\n    pointerAdjust() {\n      /* istanbul ignore else */\n      if (this.pointer >= this.filteredOptions.length - 1) {\n        this.pointer = this.filteredOptions.length ? this.filteredOptions.length - 1 : 0;\n      }\n      if (this.filteredOptions.length > 0 && this.filteredOptions[this.pointer].$isLabel && !this.groupSelect) {\n        this.pointerForward();\n      }\n    },\n    pointerSet(index) {\n      this.pointer = index;\n      this.pointerDirty = true;\n    }\n  }\n};\nvar script = {\n  name: 'vue-multiselect',\n  mixins: [multiselectMixin, pointerMixin],\n  compatConfig: {\n    MODE: 3,\n    ATTR_ENUMERATED_COERCION: false\n  },\n  props: {\n    /**\n       * name attribute to match optional label element\n       * @default ''\n       * @type {String}\n       */\n    name: {\n      type: String,\n      default: ''\n    },\n    /**\n       * Presets the selected options value.\n       * @type {Object||Array||String||Integer}\n       */\n    modelValue: {\n      type: null,\n      default() {\n        return [];\n      }\n    },\n    /**\n       * String to show when pointing to an option\n       * @default 'Press enter to select'\n       * @type {String}\n       */\n    selectLabel: {\n      type: String,\n      default: 'Press enter to select'\n    },\n    /**\n       * String to show when pointing to an option\n       * @default 'Press enter to select'\n       * @type {String}\n       */\n    selectGroupLabel: {\n      type: String,\n      default: 'Press enter to select group'\n    },\n    /**\n       * String to show next to selected option\n       * @default 'Selected'\n       * @type {String}\n       */\n    selectedLabel: {\n      type: String,\n      default: 'Selected'\n    },\n    /**\n       * String to show when pointing to an already selected option\n       * @default 'Press enter to remove'\n       * @type {String}\n       */\n    deselectLabel: {\n      type: String,\n      default: 'Press enter to remove'\n    },\n    /**\n       * String to show when pointing to an already selected option\n       * @default 'Press enter to remove'\n       * @type {String}\n       */\n    deselectGroupLabel: {\n      type: String,\n      default: 'Press enter to deselect group'\n    },\n    /**\n       * Decide whether to show pointer labels\n       * @default true\n       * @type {Boolean}\n       */\n    showLabels: {\n      type: Boolean,\n      default: true\n    },\n    /**\n       * Limit the display of selected options. The rest will be hidden within the limitText string.\n       * @default 99999\n       * @type {Integer}\n       */\n    limit: {\n      type: Number,\n      default: 99999\n    },\n    /**\n       * Sets maxHeight style value of the dropdown\n       * @default 300\n       * @type {Integer}\n       */\n    maxHeight: {\n      type: Number,\n      default: 300\n    },\n    /**\n       * Function that process the message shown when selected\n       * elements pass the defined limit.\n       * @default 'and * more'\n       * @param {Int} count Number of elements more than limit\n       * @type {Function}\n       */\n    limitText: {\n      type: Function,\n      default: count => `and ${count} more`\n    },\n    /**\n       * Set true to trigger the loading spinner.\n       * @default False\n       * @type {Boolean}\n       */\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    /**\n       * Disables the multiselect if true.\n       * @default false\n       * @type {Boolean}\n       */\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Enables search input's spellcheck if true.\n     * @default false\n     * @type {Boolean}\n     */\n    spellcheck: {\n      type: Boolean,\n      default: false\n    },\n    /**\n       * Fixed opening direction\n       * @default ''\n       * @type {String}\n       */\n    openDirection: {\n      type: String,\n      default: ''\n    },\n    /**\n       * Shows slot with message about empty options\n       * @default true\n       * @type {Boolean}\n       */\n    showNoOptions: {\n      type: Boolean,\n      default: true\n    },\n    showNoResults: {\n      type: Boolean,\n      default: true\n    },\n    tabindex: {\n      type: Number,\n      default: 0\n    },\n    /**\n     * Adds Required attribute to the input element when there is no value selected\n     * @default false\n     * @type {Boolean}\n     */\n    required: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    hasOptionGroup() {\n      return this.groupValues && this.groupLabel && this.groupSelect;\n    },\n    isSingleLabelVisible() {\n      return (this.singleValue || this.singleValue === 0) && (!this.isOpen || !this.searchable) && !this.visibleValues.length;\n    },\n    isPlaceholderVisible() {\n      return !this.internalValue.length && (!this.searchable || !this.isOpen);\n    },\n    visibleValues() {\n      return this.multiple ? this.internalValue.slice(0, this.limit) : [];\n    },\n    singleValue() {\n      return this.internalValue[0];\n    },\n    deselectLabelText() {\n      return this.showLabels ? this.deselectLabel : '';\n    },\n    deselectGroupLabelText() {\n      return this.showLabels ? this.deselectGroupLabel : '';\n    },\n    selectLabelText() {\n      return this.showLabels ? this.selectLabel : '';\n    },\n    selectGroupLabelText() {\n      return this.showLabels ? this.selectGroupLabel : '';\n    },\n    selectedLabelText() {\n      return this.showLabels ? this.selectedLabel : '';\n    },\n    inputStyle() {\n      if (this.searchable || this.multiple && this.modelValue && this.modelValue.length) {\n        // Hide input by setting the width to 0 allowing it to receive focus\n        return this.isOpen ? {\n          width: '100%'\n        } : {\n          width: '0',\n          position: 'absolute',\n          padding: '0'\n        };\n      }\n      return '';\n    },\n    contentStyle() {\n      return this.options.length ? {\n        display: 'inline-block'\n      } : {\n        display: 'block'\n      };\n    },\n    isAbove() {\n      if (this.openDirection === 'above' || this.openDirection === 'top') {\n        return true;\n      } else if (this.openDirection === 'below' || this.openDirection === 'bottom') {\n        return false;\n      } else {\n        return this.preferredOpenDirection === 'above';\n      }\n    },\n    showSearchInput() {\n      return this.searchable && (this.hasSingleSelectedSlot && (this.visibleSingleValue || this.visibleSingleValue === 0) ? this.isOpen : true);\n    },\n    isRequired() {\n      if (this.required === false) {\n        return false;\n      }\n      // if we have a value, any value, then this isn't required\n      return this.internalValue.length <= 0;\n    }\n  }\n};\nconst _hoisted_1 = [\"tabindex\", \"aria-expanded\", \"aria-owns\", \"aria-activedescendant\"];\nconst _hoisted_2 = {\n  ref: \"tags\",\n  class: \"multiselect__tags\"\n};\nconst _hoisted_3 = {\n  class: \"multiselect__tags-wrap\"\n};\nconst _hoisted_4 = [\"textContent\"];\nconst _hoisted_5 = [\"onKeypress\", \"onMousedown\"];\nconst _hoisted_6 = [\"textContent\"];\nconst _hoisted_7 = {\n  class: \"multiselect__spinner\"\n};\nconst _hoisted_8 = [\"name\", \"id\", \"spellcheck\", \"placeholder\", \"required\", \"value\", \"disabled\", \"tabindex\", \"aria-label\", \"aria-controls\"];\nconst _hoisted_9 = [\"id\", \"aria-multiselectable\"];\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  class: \"multiselect__option\"\n};\nconst _hoisted_12 = [\"aria-selected\", \"id\", \"role\"];\nconst _hoisted_13 = [\"onClick\", \"onMouseenter\", \"data-select\", \"data-selected\", \"data-deselect\"];\nconst _hoisted_14 = [\"data-select\", \"data-deselect\", \"onMouseenter\", \"onMousedown\"];\nconst _hoisted_15 = {\n  class: \"multiselect__option\"\n};\nconst _hoisted_16 = {\n  class: \"multiselect__option\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    tabindex: _ctx.searchable ? -1 : $props.tabindex,\n    class: normalizeClass([{\n      'multiselect--active': _ctx.isOpen,\n      'multiselect--disabled': $props.disabled,\n      'multiselect--above': $options.isAbove,\n      'multiselect--has-options-group': $options.hasOptionGroup\n    }, \"multiselect\"]),\n    onFocus: _cache[14] || (_cache[14] = $event => _ctx.activate()),\n    onBlur: _cache[15] || (_cache[15] = $event => _ctx.searchable ? false : _ctx.deactivate()),\n    onKeydown: [_cache[16] || (_cache[16] = withKeys(withModifiers($event => _ctx.pointerForward(), [\"self\", \"prevent\"]), [\"down\"])), _cache[17] || (_cache[17] = withKeys(withModifiers($event => _ctx.pointerBackward(), [\"self\", \"prevent\"]), [\"up\"]))],\n    onKeypress: _cache[18] || (_cache[18] = withKeys(withModifiers($event => _ctx.addPointerElement($event), [\"stop\", \"self\"]), [\"enter\", \"tab\"])),\n    onKeyup: _cache[19] || (_cache[19] = withKeys($event => _ctx.deactivate(), [\"esc\"])),\n    role: \"combobox\",\n    \"aria-expanded\": _ctx.isOpen,\n    \"aria-owns\": 'listbox-' + _ctx.id,\n    \"aria-activedescendant\": _ctx.isOpen && _ctx.pointer !== null ? _ctx.id + '-' + _ctx.pointer : null\n  }, [renderSlot(_ctx.$slots, \"caret\", {\n    toggle: _ctx.toggle\n  }, () => [createElementVNode(\"div\", {\n    onMousedown: _cache[0] || (_cache[0] = withModifiers($event => _ctx.toggle(), [\"prevent\", \"stop\"])),\n    class: \"multiselect__select\"\n  }, null, 32 /* NEED_HYDRATION */)]), renderSlot(_ctx.$slots, \"clear\", {\n    search: _ctx.search\n  }), createElementVNode(\"div\", _hoisted_2, [renderSlot(_ctx.$slots, \"selection\", {\n    search: _ctx.search,\n    remove: _ctx.removeElement,\n    values: $options.visibleValues,\n    isOpen: _ctx.isOpen\n  }, () => [withDirectives(createElementVNode(\"div\", _hoisted_3, [(openBlock(true), createElementBlock(Fragment, null, renderList($options.visibleValues, (option, index) => {\n    return renderSlot(_ctx.$slots, \"tag\", {\n      option: option,\n      search: _ctx.search,\n      remove: _ctx.removeElement\n    }, () => [(openBlock(), createElementBlock(\"span\", {\n      class: \"multiselect__tag\",\n      key: index,\n      onMousedown: _cache[1] || (_cache[1] = withModifiers(() => {}, [\"prevent\"]))\n    }, [createElementVNode(\"span\", {\n      textContent: toDisplayString(_ctx.getOptionLabel(option))\n    }, null, 8 /* PROPS */, _hoisted_4), createElementVNode(\"i\", {\n      tabindex: \"1\",\n      onKeypress: withKeys(withModifiers($event => _ctx.removeElement(option), [\"prevent\"]), [\"enter\"]),\n      onMousedown: withModifiers($event => _ctx.removeElement(option), [\"prevent\"]),\n      class: \"multiselect__tag-icon\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5)], 32 /* NEED_HYDRATION */))]);\n  }), 256 /* UNKEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[vShow, $options.visibleValues.length > 0]]), _ctx.internalValue && _ctx.internalValue.length > $props.limit ? renderSlot(_ctx.$slots, \"limit\", {\n    key: 0\n  }, () => [createElementVNode(\"strong\", {\n    class: \"multiselect__strong\",\n    textContent: toDisplayString($props.limitText(_ctx.internalValue.length - $props.limit))\n  }, null, 8 /* PROPS */, _hoisted_6)]) : createCommentVNode(\"v-if\", true)]), createVNode(Transition, {\n    name: \"multiselect__loading\"\n  }, {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"loading\", {}, () => [withDirectives(createElementVNode(\"div\", _hoisted_7, null, 512 /* NEED_PATCH */), [[vShow, $props.loading]])])]),\n    _: 3 /* FORWARDED */\n  }), _ctx.searchable ? (openBlock(), createElementBlock(\"input\", {\n    key: 0,\n    ref: \"search\",\n    name: $props.name,\n    id: _ctx.id,\n    type: \"text\",\n    autocomplete: \"off\",\n    spellcheck: $props.spellcheck,\n    placeholder: _ctx.placeholder,\n    required: $options.isRequired,\n    style: normalizeStyle($options.inputStyle),\n    value: _ctx.search,\n    disabled: $props.disabled,\n    tabindex: $props.tabindex,\n    \"aria-label\": $props.name + '-searchbox',\n    onInput: _cache[2] || (_cache[2] = $event => _ctx.updateSearch($event.target.value)),\n    onFocus: _cache[3] || (_cache[3] = withModifiers($event => _ctx.activate(), [\"prevent\"])),\n    onBlur: _cache[4] || (_cache[4] = withModifiers($event => _ctx.deactivate(), [\"prevent\"])),\n    onKeyup: _cache[5] || (_cache[5] = withKeys($event => _ctx.deactivate(), [\"esc\"])),\n    onKeydown: [_cache[6] || (_cache[6] = withKeys(withModifiers($event => _ctx.pointerForward(), [\"prevent\"]), [\"down\"])), _cache[7] || (_cache[7] = withKeys(withModifiers($event => _ctx.pointerBackward(), [\"prevent\"]), [\"up\"])), _cache[9] || (_cache[9] = withKeys(withModifiers($event => _ctx.removeLastElement(), [\"stop\"]), [\"delete\"]))],\n    onKeypress: _cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.addPointerElement($event), [\"prevent\", \"stop\", \"self\"]), [\"enter\"])),\n    class: \"multiselect__input\",\n    \"aria-controls\": 'listbox-' + _ctx.id\n  }, null, 44 /* STYLE, PROPS, NEED_HYDRATION */, _hoisted_8)) : createCommentVNode(\"v-if\", true), $options.isSingleLabelVisible ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: \"multiselect__single\",\n    onMousedown: _cache[10] || (_cache[10] = withModifiers((...args) => _ctx.toggle && _ctx.toggle(...args), [\"prevent\"]))\n  }, [renderSlot(_ctx.$slots, \"singleLabel\", {\n    option: $options.singleValue\n  }, () => [createTextVNode(toDisplayString(_ctx.currentOptionLabel), 1 /* TEXT */)])], 32 /* NEED_HYDRATION */)) : createCommentVNode(\"v-if\", true), $options.isPlaceholderVisible ? (openBlock(), createElementBlock(\"span\", {\n    key: 2,\n    class: \"multiselect__placeholder\",\n    onMousedown: _cache[11] || (_cache[11] = withModifiers((...args) => _ctx.toggle && _ctx.toggle(...args), [\"prevent\"]))\n  }, [renderSlot(_ctx.$slots, \"placeholder\", {}, () => [createTextVNode(toDisplayString(_ctx.placeholder), 1 /* TEXT */)])], 32 /* NEED_HYDRATION */)) : createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), createVNode(Transition, {\n    name: \"multiselect\",\n    persisted: \"\"\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"div\", {\n      class: \"multiselect__content-wrapper\",\n      onFocus: _cache[12] || (_cache[12] = (...args) => _ctx.activate && _ctx.activate(...args)),\n      tabindex: \"-1\",\n      onMousedown: _cache[13] || (_cache[13] = withModifiers(() => {}, [\"prevent\"])),\n      style: normalizeStyle({\n        maxHeight: _ctx.optimizedHeight + 'px'\n      }),\n      ref: \"list\"\n    }, [createElementVNode(\"ul\", {\n      class: \"multiselect__content\",\n      style: normalizeStyle($options.contentStyle),\n      role: \"listbox\",\n      id: 'listbox-' + _ctx.id,\n      \"aria-multiselectable\": _ctx.multiple\n    }, [renderSlot(_ctx.$slots, \"beforeList\"), _ctx.multiple && _ctx.max === _ctx.internalValue.length ? (openBlock(), createElementBlock(\"li\", _hoisted_10, [createElementVNode(\"span\", _hoisted_11, [renderSlot(_ctx.$slots, \"maxElements\", {}, () => [createTextVNode(\"Maximum of \" + toDisplayString(_ctx.max) + \" options selected. First remove a selected option to select another.\", 1 /* TEXT */)])])])) : createCommentVNode(\"v-if\", true), !_ctx.max || _ctx.internalValue.length < _ctx.max ? (openBlock(true), createElementBlock(Fragment, {\n      key: 1\n    }, renderList(_ctx.filteredOptions, (option, index) => {\n      return openBlock(), createElementBlock(\"li\", {\n        class: \"multiselect__element\",\n        key: index,\n        \"aria-selected\": _ctx.isSelected(option),\n        id: _ctx.id + '-' + index,\n        role: !(option && (option.$isLabel || option.$isDisabled)) ? 'option' : null\n      }, [!(option && (option.$isLabel || option.$isDisabled)) ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        class: normalizeClass([_ctx.optionHighlight(index, option), \"multiselect__option\"]),\n        onClick: withModifiers($event => _ctx.select(option), [\"stop\"]),\n        onMouseenter: withModifiers($event => _ctx.pointerSet(index), [\"self\"]),\n        \"data-select\": option && option.isTag ? _ctx.tagPlaceholder : $options.selectLabelText,\n        \"data-selected\": $options.selectedLabelText,\n        \"data-deselect\": $options.deselectLabelText\n      }, [renderSlot(_ctx.$slots, \"option\", {\n        option: option,\n        search: _ctx.search,\n        index: index\n      }, () => [createElementVNode(\"span\", null, toDisplayString(_ctx.getOptionLabel(option)), 1 /* TEXT */)])], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_13)) : createCommentVNode(\"v-if\", true), option && (option.$isLabel || option.$isDisabled) ? (openBlock(), createElementBlock(\"span\", {\n        key: 1,\n        \"data-select\": _ctx.groupSelect && $options.selectGroupLabelText,\n        \"data-deselect\": _ctx.groupSelect && $options.deselectGroupLabelText,\n        class: normalizeClass([_ctx.groupHighlight(index, option), \"multiselect__option\"]),\n        onMouseenter: withModifiers($event => _ctx.groupSelect && _ctx.pointerSet(index), [\"self\"]),\n        onMousedown: withModifiers($event => _ctx.selectGroup(option), [\"prevent\"])\n      }, [renderSlot(_ctx.$slots, \"option\", {\n        option: option,\n        search: _ctx.search,\n        index: index\n      }, () => [createElementVNode(\"span\", null, toDisplayString(_ctx.getOptionLabel(option)), 1 /* TEXT */)])], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_14)) : createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_12);\n    }), 128 /* KEYED_FRAGMENT */)) : createCommentVNode(\"v-if\", true), withDirectives(createElementVNode(\"li\", null, [createElementVNode(\"span\", _hoisted_15, [renderSlot(_ctx.$slots, \"noResult\", {\n      search: _ctx.search\n    }, () => [_cache[20] || (_cache[20] = createTextVNode(\"No elements found. Consider changing the search query.\"))])])], 512 /* NEED_PATCH */), [[vShow, $props.showNoResults && _ctx.filteredOptions.length === 0 && _ctx.search && !$props.loading]]), withDirectives(createElementVNode(\"li\", null, [createElementVNode(\"span\", _hoisted_16, [renderSlot(_ctx.$slots, \"noOptions\", {}, () => [_cache[21] || (_cache[21] = createTextVNode(\"List is empty.\"))])])], 512 /* NEED_PATCH */), [[vShow, $props.showNoOptions && (_ctx.options.length === 0 || $options.hasOptionGroup === true && _ctx.filteredOptions.length === 0) && !_ctx.search && !$props.loading]]), renderSlot(_ctx.$slots, \"afterList\")], 12 /* STYLE, PROPS */, _hoisted_9)], 36 /* STYLE, NEED_HYDRATION */), [[vShow, _ctx.isOpen]])]),\n    _: 3 /* FORWARDED */\n  })], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_1);\n}\nscript.render = render;\nexport { script as Multiselect, script as default, multiselectMixin, pointerMixin };","map":{"version":3,"names":["openBlock","createElementBlock","normalizeClass","withKeys","withModifiers","renderSlot","createElementVNode","withDirectives","Fragment","renderList","toDisplayString","vShow","createCommentVNode","createVNode","Transition","withCtx","normalizeStyle","createTextVNode","isEmpty","opt","Array","isArray","length","not","fun","params","includes","str","query","undefined","text","toString","toLowerCase","indexOf","trim","stripGroups","options","filter","option","$isLabel","flattenOptions","values","label","reduce","prev","curr","push","$groupLabel","concat","flow","fns","x","v","f","multiselectMixin","data","search","isOpen","preferredOpenDirection","optimizedHeight","maxHeight","props","internalSearch","type","Boolean","default","required","multiple","trackBy","String","searchable","clearOnSelect","hideSelected","placeholder","allowEmpty","resetAfter","closeOnSelect","customLabel","Function","taggable","tagPlaceholder","tagPosition","max","Number","id","optionsLimit","groupValues","groupLabel","groupSelect","blockKeys","preserveSearch","preselectFirst","preventAutofocus","filteringSortFunc","mounted","console","warn","internalValue","select","filteredOptions","computed","modelValue","normalizedSearch","filterAndFlat","filterOptions","isSelected","isExistingOption","isTag","unshift","slice","valueKeys","map","element","optionKeys","flatAndStrip","currentOptionLabel","getOptionLabel","watch","handler","$emit","deep","emits","methods","getValue","filterGroups","updateSearch","isOptionDisabled","$isDisabled","key","selectGroup","disabled","pointerDirty","deactivate","removeElement","selectedGroup","group","find","wholeGroupSelected","val","newValue","optionsToAdd","splice","every","wholeGroupDisabled","shouldClose","index","removeLastElement","activate","adjustPosition","pointer","$nextTick","$refs","focus","$el","blur","toggle","window","spaceAbove","getBoundingClientRect","top","spaceBelow","innerHeight","bottom","hasEnoughSpaceBelow","openDirection","Math","min","sort","a","b","groups","groupOptions","pointerMixin","showPointer","optionHeight","pointerPosition","visibleElements","pointerAdjust","setAttribute","optionHighlight","groupHighlight","addPointerElement","pointerReset","pointerForward","list","scrollTop","pointerBackward","pointerSet","script","name","mixins","compatConfig","MODE","ATTR_ENUMERATED_COERCION","selectLabel","selectGroupLabel","selectedLabel","deselectLabel","deselectGroupLabel","showLabels","limit","limitText","count","loading","spellcheck","showNoOptions","showNoResults","tabindex","hasOptionGroup","isSingleLabelVisible","singleValue","visibleValues","isPlaceholderVisible","deselectLabelText","deselectGroupLabelText","selectLabelText","selectGroupLabelText","selectedLabelText","inputStyle","width","position","padding","contentStyle","display","isAbove","showSearchInput","hasSingleSelectedSlot","visibleSingleValue","isRequired","_hoisted_1","_hoisted_2","ref","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","render","_ctx","_cache","$props","$setup","$data","$options","onFocus","$event","onBlur","onKeydown","onKeypress","onKeyup","role","$slots","onMousedown","remove","textContent","_","autocomplete","style","value","onInput","target","args","persisted","onClick","onMouseenter","Multiselect"],"sources":["D:/GitHub/chat/vue3/node_modules/vue-multiselect/dist/vue-multiselect.esm.js"],"sourcesContent":["import { openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, renderSlot, createElementVNode, withDirectives, Fragment, renderList, toDisplayString, vShow, createCommentVNode, createVNode, Transition, withCtx, normalizeStyle, createTextVNode } from 'vue';\n\nfunction isEmpty (opt) {\n  if (opt === 0) return false\n  if (Array.isArray(opt) && opt.length === 0) return true\n  return !opt\n}\n\nfunction not (fun) {\n  return (...params) => !fun(...params)\n}\n\nfunction includes (str, query) {\n  /* istanbul ignore else */\n  if (str === undefined) str = 'undefined';\n  if (str === null) str = 'null';\n  if (str === false) str = 'false';\n  const text = str.toString().toLowerCase();\n  return text.indexOf(query.trim()) !== -1\n}\n\nfunction stripGroups (options) {\n  return options.filter((option) => !option.$isLabel)\n}\n\nfunction flattenOptions (values, label) {\n  return (options) =>\n    options.reduce((prev, curr) => {\n      /* istanbul ignore else */\n      if (curr[values] && curr[values].length) {\n        prev.push({\n          $groupLabel: curr[label],\n          $isLabel: true\n        });\n        return prev.concat(curr[values])\n      }\n      return prev\n    }, [])\n}\n\nconst flow = (...fns) => (x) => fns.reduce((v, f) => f(v), x);\n\nvar multiselectMixin = {\n  data () {\n    return {\n      search: '',\n      isOpen: false,\n      preferredOpenDirection: 'below',\n      optimizedHeight: this.maxHeight\n    }\n  },\n  props: {\n    /**\n     * Decide whether to filter the results based on search query.\n     * Useful for async filtering, where we search through more complex data.\n     * @type {Boolean}\n     */\n    internalSearch: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Array of available options: Objects, Strings or Integers.\n     * If array of objects, visible label will default to option.label.\n     * If `labal` prop is passed, label will equal option['label']\n     * @type {Array}\n     */\n    options: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Equivalent to the `multiple` attribute on a `<select>` input.\n     * @default false\n     * @type {Boolean}\n     */\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Key to compare objects\n     * @default 'id'\n     * @type {String}\n     */\n    trackBy: {\n      type: String\n    },\n    /**\n     * Label to look for in option Object\n     * @default 'label'\n     * @type {String}\n     */\n    label: {\n      type: String\n    },\n    /**\n     * Enable/disable search in options\n     * @default true\n     * @type {Boolean}\n     */\n    searchable: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Clear the search input after `)\n     * @default true\n     * @type {Boolean}\n     */\n    clearOnSelect: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Hide already selected options\n     * @default false\n     * @type {Boolean}\n     */\n    hideSelected: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Equivalent to the `placeholder` attribute on a `<select>` input.\n     * @default 'Select option'\n     * @type {String}\n     */\n    placeholder: {\n      type: String,\n      default: 'Select option'\n    },\n    /**\n     * Allow to remove all selected values\n     * @default true\n     * @type {Boolean}\n     */\n    allowEmpty: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Reset this.internalValue, this.search after this.internalValue changes.\n     * Useful if want to create a stateless dropdown.\n     * @default false\n     * @type {Boolean}\n     */\n    resetAfter: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Enable/disable closing after selecting an option\n     * @default true\n     * @type {Boolean}\n     */\n    closeOnSelect: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Function to interpolate the custom label\n     * @default false\n     * @type {Function}\n     */\n    customLabel: {\n      type: Function,\n      default (option, label) {\n        if (isEmpty(option)) return ''\n        return label ? option[label] : option\n      }\n    },\n    /**\n     * Disable / Enable tagging\n     * @default false\n     * @type {Boolean}\n     */\n    taggable: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * String to show when highlighting a potential tag\n     * @default 'Press enter to create a tag'\n     * @type {String}\n    */\n    tagPlaceholder: {\n      type: String,\n      default: 'Press enter to create a tag'\n    },\n    /**\n     * By default new tags will appear above the search results.\n     * Changing to 'bottom' will revert this behaviour\n     * and will proritize the search results\n     * @default 'top'\n     * @type {String}\n    */\n    tagPosition: {\n      type: String,\n      default: 'top'\n    },\n    /**\n     * Number of allowed selected options. No limit if 0.\n     * @default 0\n     * @type {Number}\n    */\n    max: {\n      type: [Number, Boolean],\n      default: false\n    },\n    /**\n     * Will be passed with all events as second param.\n     * Useful for identifying events origin.\n     * @default null\n     * @type {String|Integer}\n    */\n    id: {\n      default: null\n    },\n    /**\n     * Limits the options displayed in the dropdown\n     * to the first X options.\n     * @default 1000\n     * @type {Integer}\n    */\n    optionsLimit: {\n      type: Number,\n      default: 1000\n    },\n    /**\n     * Name of the property containing\n     * the group values\n     * @default 1000\n     * @type {String}\n    */\n    groupValues: {\n      type: String\n    },\n    /**\n     * Name of the property containing\n     * the group label\n     * @default 1000\n     * @type {String}\n    */\n    groupLabel: {\n      type: String\n    },\n    /**\n     * Allow to select all group values\n     * by selecting the group label\n     * @default false\n     * @type {Boolean}\n     */\n    groupSelect: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Array of keyboard keys to block\n     * when selecting\n     * @default 1000\n     * @type {String}\n    */\n    blockKeys: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    /**\n     * Prevent from wiping up the search value\n     * @default false\n     * @type {Boolean}\n    */\n    preserveSearch: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Select 1st options if value is empty\n     * @default false\n     * @type {Boolean}\n    */\n    preselectFirst: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Prevent autofocus\n     * @default false\n     * @type {Boolean}\n     */\n    preventAutofocus: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Allows a custom function for sorting search/filtered results.\n     * @default null\n     * @type {Function}\n     */\n    filteringSortFunc: {\n      type: Function,\n      default: null\n    }\n  },\n  mounted () {\n    /* istanbul ignore else */\n    if (!this.multiple && this.max) {\n      console.warn('[Vue-Multiselect warn]: Max prop should not be used when prop Multiple equals false.');\n    }\n    if (\n      this.preselectFirst &&\n      !this.internalValue.length &&\n      this.options.length\n    ) {\n      this.select(this.filteredOptions[0]);\n    }\n  },\n  computed: {\n    internalValue () {\n      return this.modelValue || this.modelValue === 0\n        ? Array.isArray(this.modelValue) ? this.modelValue : [this.modelValue]\n        : []\n    },\n    filteredOptions () {\n      const search = this.search || '';\n      const normalizedSearch = search.toLowerCase().trim();\n\n      let options = this.options.concat();\n\n      /* istanbul ignore else */\n      if (this.internalSearch) {\n        options = this.groupValues\n          ? this.filterAndFlat(options, normalizedSearch, this.label)\n          : this.filterOptions(options, normalizedSearch, this.label, this.customLabel);\n      } else {\n        options = this.groupValues ? flattenOptions(this.groupValues, this.groupLabel)(options) : options;\n      }\n\n      options = this.hideSelected\n        ? options.filter(not(this.isSelected))\n        : options;\n\n      /* istanbul ignore else */\n      if (this.taggable && normalizedSearch.length && !this.isExistingOption(normalizedSearch)) {\n        if (this.tagPosition === 'bottom') {\n          options.push({ isTag: true, label: search });\n        } else {\n          options.unshift({ isTag: true, label: search });\n        }\n      }\n\n      return options.slice(0, this.optionsLimit)\n    },\n    valueKeys () {\n      if (this.trackBy) {\n        return this.internalValue.map((element) => element[this.trackBy])\n      } else {\n        return this.internalValue\n      }\n    },\n    optionKeys () {\n      const options = this.groupValues ? this.flatAndStrip(this.options) : this.options;\n      return options.map((element) => this.customLabel(element, this.label).toString().toLowerCase())\n    },\n    currentOptionLabel () {\n      return this.multiple\n        ? this.searchable ? '' : this.placeholder\n        : this.internalValue.length\n          ? this.getOptionLabel(this.internalValue[0])\n          : this.searchable ? '' : this.placeholder\n    }\n  },\n  watch: {\n    internalValue: {\n      handler () {\n      /* istanbul ignore else */\n        if (this.resetAfter && this.internalValue.length) {\n          this.search = '';\n          this.$emit('update:modelValue', this.multiple ? [] : null);\n        }\n      },\n      deep: true\n    },\n    search () {\n      this.$emit('search-change', this.search);\n    }\n  },\n  emits: ['open', 'search-change', 'close', 'select', 'update:modelValue', 'remove', 'tag'],\n  methods: {\n    /**\n     * Returns the internalValue in a way it can be emited to the parent\n     * @returns {Object||Array||String||Integer}\n     */\n    getValue () {\n      return this.multiple\n        ? this.internalValue\n        : this.internalValue.length === 0\n          ? null\n          : this.internalValue[0]\n    },\n    /**\n     * Filters and then flattens the options list\n     * @param  {Array}\n     * @return {Array} returns a filtered and flat options list\n     */\n    filterAndFlat (options, search, label) {\n      return flow(\n        this.filterGroups(search, label, this.groupValues, this.groupLabel, this.customLabel),\n        flattenOptions(this.groupValues, this.groupLabel)\n      )(options)\n    },\n    /**\n     * Flattens and then strips the group labels from the options list\n     * @param  {Array}\n     * @return {Array} returns a flat options list without group labels\n     */\n    flatAndStrip (options) {\n      return flow(\n        flattenOptions(this.groupValues, this.groupLabel),\n        stripGroups\n      )(options)\n    },\n    /**\n     * Updates the search value\n     * @param  {String}\n     */\n    updateSearch (query) {\n      this.search = query;\n    },\n    /**\n     * Finds out if the given query is already present\n     * in the available options\n     * @param  {String}\n     * @return {Boolean} returns true if element is available\n     */\n    isExistingOption (query) {\n      return !this.options\n        ? false\n        : this.optionKeys.indexOf(query) > -1\n    },\n    /**\n     * Finds out if the given element is already present\n     * in the result value\n     * @param  {Object||String||Integer} option passed element to check\n     * @returns {Boolean} returns true if element is selected\n     */\n    isSelected (option) {\n      const opt = this.trackBy\n        ? option[this.trackBy]\n        : option;\n      return this.valueKeys.indexOf(opt) > -1\n    },\n    /**\n     * Finds out if the given option is disabled\n     * @param  {Object||String||Integer} option passed element to check\n     * @returns {Boolean} returns true if element is disabled\n     */\n    isOptionDisabled (option) {\n      return !!option.$isDisabled\n    },\n    /**\n     * Returns empty string when options is null/undefined\n     * Returns tag query if option is tag.\n     * Returns the customLabel() results and casts it to string.\n     *\n     * @param  {Object||String||Integer} Passed option\n     * @returns {Object||String}\n     */\n    getOptionLabel (option) {\n      if (isEmpty(option)) return ''\n      /* istanbul ignore else */\n      if (option.isTag) return option.label\n      /* istanbul ignore else */\n      if (option.$isLabel) return option.$groupLabel\n\n      const label = this.customLabel(option, this.label);\n      /* istanbul ignore else */\n      if (isEmpty(label)) return ''\n      return label\n    },\n    /**\n     * Add the given option to the list of selected options\n     * or sets the option as the selected option.\n     * If option is already selected -> remove it from the results.\n     *\n     * @param  {Object||String||Integer} option to select/deselect\n     * @param  {Boolean} block removing\n     */\n    select (option, key) {\n      /* istanbul ignore else */\n      if (option.$isLabel && this.groupSelect) {\n        this.selectGroup(option);\n        return\n      }\n      if (this.blockKeys.indexOf(key) !== -1 ||\n        this.disabled ||\n        option.$isDisabled ||\n        option.$isLabel\n      ) return\n      /* istanbul ignore else */\n      if (this.max && this.multiple && this.internalValue.length === this.max) return\n      /* istanbul ignore else */\n      if (key === 'Tab' && !this.pointerDirty) return\n      if (option.isTag) {\n        this.$emit('tag', option.label, this.id);\n        this.search = '';\n        if (this.closeOnSelect && !this.multiple) this.deactivate();\n      } else {\n        const isSelected = this.isSelected(option);\n\n        if (isSelected) {\n          if (key !== 'Tab') this.removeElement(option);\n          return\n        }\n\n        if (this.multiple) {\n          this.$emit('update:modelValue', this.internalValue.concat([option]));\n        } else {\n          this.$emit('update:modelValue', option);\n        }\n\n        this.$emit('select', option, this.id);\n\n        /* istanbul ignore else */\n        if (this.clearOnSelect) this.search = '';\n      }\n      /* istanbul ignore else */\n      if (this.closeOnSelect) this.deactivate();\n    },\n    /**\n     * Add the given group options to the list of selected options\n     * If all group optiona are already selected -> remove it from the results.\n     *\n     * @param  {Object||String||Integer} group to select/deselect\n     */\n    selectGroup (selectedGroup) {\n      const group = this.options.find((option) => {\n        return option[this.groupLabel] === selectedGroup.$groupLabel\n      });\n\n      if (!group) return\n\n      if (this.wholeGroupSelected(group)) {\n        this.$emit('remove', group[this.groupValues], this.id);\n\n        const groupValues = this.trackBy ? group[this.groupValues].map(val => val[this.trackBy]) : group[this.groupValues];\n        const newValue = this.internalValue.filter(\n          option => groupValues.indexOf(this.trackBy ? option[this.trackBy] : option) === -1\n        );\n\n        this.$emit('update:modelValue', newValue);\n      } else {\n        const optionsToAdd = group[this.groupValues].filter(\n          option => !(this.isOptionDisabled(option) || this.isSelected(option))\n        );\n\n        // if max is defined then just select options respecting max\n        if (this.max) {\n          optionsToAdd.splice(this.max - this.internalValue.length);\n        }\n\n        this.$emit('select', optionsToAdd, this.id);\n        this.$emit(\n          'update:modelValue',\n          this.internalValue.concat(optionsToAdd)\n        );\n      }\n\n      if (this.closeOnSelect) this.deactivate();\n    },\n    /**\n     * Helper to identify if all values in a group are selected\n     *\n     * @param {Object} group to validated selected values against\n     */\n    wholeGroupSelected (group) {\n      return group[this.groupValues].every((option) => this.isSelected(option) || this.isOptionDisabled(option)\n      )\n    },\n    /**\n     * Helper to identify if all values in a group are disabled\n     *\n     * @param {Object} group to check for disabled values\n     */\n    wholeGroupDisabled (group) {\n      return group[this.groupValues].every(this.isOptionDisabled)\n    },\n    /**\n     * Removes the given option from the selected options.\n     * Additionally checks this.allowEmpty prop if option can be removed when\n     * it is the last selected option.\n     *\n     * @param  {type} option description\n     * @return {type}        description\n     */\n    removeElement (option, shouldClose = true) {\n      /* istanbul ignore else */\n      if (this.disabled) return\n      /* istanbul ignore else */\n      if (option.$isDisabled) return\n      /* istanbul ignore else */\n      if (!this.allowEmpty && this.internalValue.length <= 1) {\n        this.deactivate();\n        return\n      }\n\n      const index = typeof option === 'object'\n        ? this.valueKeys.indexOf(option[this.trackBy])\n        : this.valueKeys.indexOf(option);\n\n      if (this.multiple) {\n        const newValue = this.internalValue.slice(0, index).concat(this.internalValue.slice(index + 1));\n        this.$emit('update:modelValue', newValue);\n      } else {\n        this.$emit('update:modelValue', null);\n      }\n      this.$emit('remove', option, this.id);\n\n      /* istanbul ignore else */\n      if (this.closeOnSelect && shouldClose) this.deactivate();\n    },\n    /**\n     * Calls this.removeElement() with the last element\n     * from this.internalValue (selected element Array)\n     *\n     * @fires this#removeElement\n     */\n    removeLastElement () {\n      /* istanbul ignore else */\n      if (this.blockKeys.indexOf('Delete') !== -1) return\n      /* istanbul ignore else */\n      if (this.search.length === 0 && Array.isArray(this.internalValue) && this.internalValue.length) {\n        this.removeElement(this.internalValue[this.internalValue.length - 1], false);\n      }\n    },\n    /**\n     * Opens the multiselect’s dropdown.\n     * Sets this.isOpen to TRUE\n     */\n    activate () {\n      /* istanbul ignore else */\n      if (this.isOpen || this.disabled) return\n\n      this.adjustPosition();\n      /* istanbul ignore else  */\n      if (this.groupValues && this.pointer === 0 && this.filteredOptions.length) {\n        this.pointer = 1;\n      }\n\n      this.isOpen = true;\n      /* istanbul ignore else  */\n      if (this.searchable) {\n        if (!this.preserveSearch) this.search = '';\n        if (!this.preventAutofocus) this.$nextTick(() => this.$refs.search && this.$refs.search.focus());\n      } else if (!this.preventAutofocus) {\n        if (typeof this.$el !== 'undefined') this.$el.focus();\n      }\n      this.$emit('open', this.id);\n    },\n    /**\n     * Closes the multiselect’s dropdown.\n     * Sets this.isOpen to FALSE\n     */\n    deactivate () {\n      /* istanbul ignore else */\n      if (!this.isOpen) return\n\n      this.isOpen = false;\n      /* istanbul ignore else  */\n      if (this.searchable) {\n        if (this.$refs.search !== null && typeof this.$refs.search !== 'undefined') this.$refs.search.blur();\n      } else {\n        if (typeof this.$el !== 'undefined') this.$el.blur();\n      }\n      if (!this.preserveSearch) this.search = '';\n      this.$emit('close', this.getValue(), this.id);\n    },\n    /**\n     * Call this.activate() or this.deactivate()\n     * depending on this.isOpen value.\n     *\n     * @fires this#activate || this#deactivate\n     * @property {Boolean} isOpen indicates if dropdown is open\n     */\n    toggle () {\n      this.isOpen\n        ? this.deactivate()\n        : this.activate();\n    },\n    /**\n     * Updates the hasEnoughSpace variable used for\n     * detecting where to expand the dropdown\n     */\n    adjustPosition () {\n      if (typeof window === 'undefined') return\n\n      const spaceAbove = this.$el.getBoundingClientRect().top;\n      const spaceBelow = window.innerHeight - this.$el.getBoundingClientRect().bottom;\n      const hasEnoughSpaceBelow = spaceBelow > this.maxHeight;\n\n      if (hasEnoughSpaceBelow || spaceBelow > spaceAbove || this.openDirection === 'below' || this.openDirection === 'bottom') {\n        this.preferredOpenDirection = 'below';\n        this.optimizedHeight = Math.min(spaceBelow - 40, this.maxHeight);\n      } else {\n        this.preferredOpenDirection = 'above';\n        this.optimizedHeight = Math.min(spaceAbove - 40, this.maxHeight);\n      }\n    },\n    /**\n     * Filters and sorts the options ready for selection\n     * @param {Array} options\n     * @param {String} search\n     * @param {String} label\n     * @param {Function} customLabel\n     * @returns {Array}\n     */\n    filterOptions (options, search, label, customLabel) {\n      return search\n        ? options\n          .filter((option) => includes(customLabel(option, label), search))\n          .sort((a, b) => {\n            if (typeof this.filteringSortFunc === 'function') {\n              return this.filteringSortFunc(a, b)\n            }\n            return customLabel(a, label).length - customLabel(b, label).length\n          })\n        : options\n    },\n    /**\n     *\n     * @param {String} search\n     * @param {String} label\n     * @param {String} values\n     * @param {String} groupLabel\n     * @param {function} customLabel\n     * @returns {function(*): *}\n     */\n    filterGroups (search, label, values, groupLabel, customLabel) {\n      return (groups) => groups.map((group) => {\n        /* istanbul ignore else */\n        if (!group[values]) {\n          console.warn('Options passed to vue-multiselect do not contain groups, despite the config.');\n          return []\n        }\n        const groupOptions = this.filterOptions(group[values], search, label, customLabel);\n\n        return groupOptions.length\n          ? {\n              [groupLabel]: group[groupLabel], [values]: groupOptions\n            }\n          : []\n      })\n    }\n  }\n};\n\nvar pointerMixin = {\n  data () {\n    return {\n      pointer: 0,\n      pointerDirty: false\n    }\n  },\n  props: {\n    /**\n     * Enable/disable highlighting of the pointed value.\n     * @type {Boolean}\n     * @default true\n     */\n    showPointer: {\n      type: Boolean,\n      default: true\n    },\n    optionHeight: {\n      type: Number,\n      default: 40\n    }\n  },\n  computed: {\n    pointerPosition () {\n      return this.pointer * this.optionHeight\n    },\n    visibleElements () {\n      return this.optimizedHeight / this.optionHeight\n    }\n  },\n  watch: {\n    filteredOptions () {\n      this.pointerAdjust();\n    },\n    isOpen () {\n      this.pointerDirty = false;\n    },\n    pointer () {\n      this.$refs.search && this.$refs.search.setAttribute('aria-activedescendant', this.id + '-' + this.pointer.toString());\n    }\n  },\n  methods: {\n    optionHighlight (index, option) {\n      return {\n        'multiselect__option--highlight': index === this.pointer && this.showPointer,\n        'multiselect__option--selected': this.isSelected(option)\n      }\n    },\n    groupHighlight (index, selectedGroup) {\n      if (!this.groupSelect) {\n        return [\n          'multiselect__option--disabled',\n          { 'multiselect__option--group': selectedGroup.$isLabel }\n        ]\n      }\n\n      const group = this.options.find((option) => {\n        return option[this.groupLabel] === selectedGroup.$groupLabel\n      });\n\n      return group && !this.wholeGroupDisabled(group)\n        ? [\n            'multiselect__option--group',\n            { 'multiselect__option--highlight': index === this.pointer && this.showPointer },\n            { 'multiselect__option--group-selected': this.wholeGroupSelected(group) }\n          ]\n        : 'multiselect__option--disabled'\n    },\n    addPointerElement ({ key } = 'Enter') {\n      /* istanbul ignore else */\n      if (this.filteredOptions.length > 0) {\n        this.select(this.filteredOptions[this.pointer], key);\n      }\n      this.pointerReset();\n    },\n    pointerForward () {\n      /* istanbul ignore else */\n      if (this.pointer < this.filteredOptions.length - 1) {\n        this.pointer++;\n        /* istanbul ignore next */\n        if (this.$refs.list.scrollTop <= this.pointerPosition - (this.visibleElements - 1) * this.optionHeight) {\n          this.$refs.list.scrollTop = this.pointerPosition - (this.visibleElements - 1) * this.optionHeight;\n        }\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[this.pointer].$isLabel &&\n          !this.groupSelect\n        ) this.pointerForward();\n      }\n      this.pointerDirty = true;\n    },\n    pointerBackward () {\n      if (this.pointer > 0) {\n        this.pointer--;\n        /* istanbul ignore else */\n        if (this.$refs.list.scrollTop >= this.pointerPosition) {\n          this.$refs.list.scrollTop = this.pointerPosition;\n        }\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[this.pointer].$isLabel &&\n          !this.groupSelect\n        ) this.pointerBackward();\n      } else {\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[0].$isLabel &&\n          !this.groupSelect\n        ) this.pointerForward();\n      }\n      this.pointerDirty = true;\n    },\n    pointerReset () {\n      /* istanbul ignore else */\n      if (!this.closeOnSelect) return\n      this.pointer = 0;\n      /* istanbul ignore else */\n      if (this.$refs.list) {\n        this.$refs.list.scrollTop = 0;\n      }\n    },\n    pointerAdjust () {\n      /* istanbul ignore else */\n      if (this.pointer >= this.filteredOptions.length - 1) {\n        this.pointer = this.filteredOptions.length\n          ? this.filteredOptions.length - 1\n          : 0;\n      }\n\n      if (this.filteredOptions.length > 0 &&\n        this.filteredOptions[this.pointer].$isLabel &&\n        !this.groupSelect\n      ) {\n        this.pointerForward();\n      }\n    },\n    pointerSet (index) {\n      this.pointer = index;\n      this.pointerDirty = true;\n    }\n  }\n};\n\nvar script = {\n  name: 'vue-multiselect',\n  mixins: [multiselectMixin, pointerMixin],\n  compatConfig: {\n    MODE: 3,\n    ATTR_ENUMERATED_COERCION: false\n  },\n  props: {\n    /**\n       * name attribute to match optional label element\n       * @default ''\n       * @type {String}\n       */\n    name: {\n      type: String,\n      default: ''\n    },\n    /**\n       * Presets the selected options value.\n       * @type {Object||Array||String||Integer}\n       */\n    modelValue: {\n      type: null,\n      default () {\n        return []\n      }\n    },\n    /**\n       * String to show when pointing to an option\n       * @default 'Press enter to select'\n       * @type {String}\n       */\n    selectLabel: {\n      type: String,\n      default: 'Press enter to select'\n    },\n    /**\n       * String to show when pointing to an option\n       * @default 'Press enter to select'\n       * @type {String}\n       */\n    selectGroupLabel: {\n      type: String,\n      default: 'Press enter to select group'\n    },\n    /**\n       * String to show next to selected option\n       * @default 'Selected'\n       * @type {String}\n       */\n    selectedLabel: {\n      type: String,\n      default: 'Selected'\n    },\n    /**\n       * String to show when pointing to an already selected option\n       * @default 'Press enter to remove'\n       * @type {String}\n       */\n    deselectLabel: {\n      type: String,\n      default: 'Press enter to remove'\n    },\n    /**\n       * String to show when pointing to an already selected option\n       * @default 'Press enter to remove'\n       * @type {String}\n       */\n    deselectGroupLabel: {\n      type: String,\n      default: 'Press enter to deselect group'\n    },\n    /**\n       * Decide whether to show pointer labels\n       * @default true\n       * @type {Boolean}\n       */\n    showLabels: {\n      type: Boolean,\n      default: true\n    },\n    /**\n       * Limit the display of selected options. The rest will be hidden within the limitText string.\n       * @default 99999\n       * @type {Integer}\n       */\n    limit: {\n      type: Number,\n      default: 99999\n    },\n    /**\n       * Sets maxHeight style value of the dropdown\n       * @default 300\n       * @type {Integer}\n       */\n    maxHeight: {\n      type: Number,\n      default: 300\n    },\n    /**\n       * Function that process the message shown when selected\n       * elements pass the defined limit.\n       * @default 'and * more'\n       * @param {Int} count Number of elements more than limit\n       * @type {Function}\n       */\n    limitText: {\n      type: Function,\n      default: (count) => `and ${count} more`\n    },\n    /**\n       * Set true to trigger the loading spinner.\n       * @default False\n       * @type {Boolean}\n       */\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    /**\n       * Disables the multiselect if true.\n       * @default false\n       * @type {Boolean}\n       */\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Enables search input's spellcheck if true.\n     * @default false\n     * @type {Boolean}\n     */\n    spellcheck: {\n      type: Boolean,\n      default: false\n    },\n    /**\n       * Fixed opening direction\n       * @default ''\n       * @type {String}\n       */\n    openDirection: {\n      type: String,\n      default: ''\n    },\n    /**\n       * Shows slot with message about empty options\n       * @default true\n       * @type {Boolean}\n       */\n    showNoOptions: {\n      type: Boolean,\n      default: true\n    },\n    showNoResults: {\n      type: Boolean,\n      default: true\n    },\n    tabindex: {\n      type: Number,\n      default: 0\n    },\n    /**\n     * Adds Required attribute to the input element when there is no value selected\n     * @default false\n     * @type {Boolean}\n     */\n    required: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    hasOptionGroup () {\n      return this.groupValues && this.groupLabel && this.groupSelect\n    },\n    isSingleLabelVisible () {\n      return (\n        (this.singleValue || this.singleValue === 0) &&\n          (!this.isOpen || !this.searchable) &&\n          !this.visibleValues.length\n      )\n    },\n    isPlaceholderVisible () {\n      return !this.internalValue.length && (!this.searchable || !this.isOpen)\n    },\n    visibleValues () {\n      return this.multiple ? this.internalValue.slice(0, this.limit) : []\n    },\n    singleValue () {\n      return this.internalValue[0]\n    },\n    deselectLabelText () {\n      return this.showLabels ? this.deselectLabel : ''\n    },\n    deselectGroupLabelText () {\n      return this.showLabels ? this.deselectGroupLabel : ''\n    },\n    selectLabelText () {\n      return this.showLabels ? this.selectLabel : ''\n    },\n    selectGroupLabelText () {\n      return this.showLabels ? this.selectGroupLabel : ''\n    },\n    selectedLabelText () {\n      return this.showLabels ? this.selectedLabel : ''\n    },\n    inputStyle () {\n      if (\n        this.searchable ||\n          (this.multiple && this.modelValue && this.modelValue.length)\n      ) {\n        // Hide input by setting the width to 0 allowing it to receive focus\n        return this.isOpen\n          ? { width: '100%' }\n          : { width: '0', position: 'absolute', padding: '0' }\n      }\n      return ''\n    },\n    contentStyle () {\n      return this.options.length\n        ? { display: 'inline-block' }\n        : { display: 'block' }\n    },\n    isAbove () {\n      if (this.openDirection === 'above' || this.openDirection === 'top') {\n        return true\n      } else if (\n        this.openDirection === 'below' ||\n          this.openDirection === 'bottom'\n      ) {\n        return false\n      } else {\n        return this.preferredOpenDirection === 'above'\n      }\n    },\n    showSearchInput () {\n      return (\n        this.searchable &&\n          (this.hasSingleSelectedSlot &&\n            (this.visibleSingleValue || this.visibleSingleValue === 0)\n            ? this.isOpen\n            : true)\n      )\n    },\n    isRequired () {\n      if (this.required === false) {\n        return false\n      }\n      // if we have a value, any value, then this isn't required\n      return this.internalValue.length <= 0\n    }\n  }\n};\n\nconst _hoisted_1 = [\"tabindex\", \"aria-expanded\", \"aria-owns\", \"aria-activedescendant\"];\nconst _hoisted_2 = {\n  ref: \"tags\",\n  class: \"multiselect__tags\"\n};\nconst _hoisted_3 = { class: \"multiselect__tags-wrap\" };\nconst _hoisted_4 = [\"textContent\"];\nconst _hoisted_5 = [\"onKeypress\", \"onMousedown\"];\nconst _hoisted_6 = [\"textContent\"];\nconst _hoisted_7 = { class: \"multiselect__spinner\" };\nconst _hoisted_8 = [\"name\", \"id\", \"spellcheck\", \"placeholder\", \"required\", \"value\", \"disabled\", \"tabindex\", \"aria-label\", \"aria-controls\"];\nconst _hoisted_9 = [\"id\", \"aria-multiselectable\"];\nconst _hoisted_10 = { key: 0 };\nconst _hoisted_11 = { class: \"multiselect__option\" };\nconst _hoisted_12 = [\"aria-selected\", \"id\", \"role\"];\nconst _hoisted_13 = [\"onClick\", \"onMouseenter\", \"data-select\", \"data-selected\", \"data-deselect\"];\nconst _hoisted_14 = [\"data-select\", \"data-deselect\", \"onMouseenter\", \"onMousedown\"];\nconst _hoisted_15 = { class: \"multiselect__option\" };\nconst _hoisted_16 = { class: \"multiselect__option\" };\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"div\", {\n    tabindex: _ctx.searchable ? -1 : $props.tabindex,\n    class: normalizeClass([{ 'multiselect--active': _ctx.isOpen, 'multiselect--disabled': $props.disabled, 'multiselect--above': $options.isAbove, 'multiselect--has-options-group': $options.hasOptionGroup }, \"multiselect\"]),\n    onFocus: _cache[14] || (_cache[14] = $event => (_ctx.activate())),\n    onBlur: _cache[15] || (_cache[15] = $event => (_ctx.searchable ? false : _ctx.deactivate())),\n    onKeydown: [\n      _cache[16] || (_cache[16] = withKeys(withModifiers($event => (_ctx.pointerForward()), [\"self\",\"prevent\"]), [\"down\"])),\n      _cache[17] || (_cache[17] = withKeys(withModifiers($event => (_ctx.pointerBackward()), [\"self\",\"prevent\"]), [\"up\"]))\n    ],\n    onKeypress: _cache[18] || (_cache[18] = withKeys(withModifiers($event => (_ctx.addPointerElement($event)), [\"stop\",\"self\"]), [\"enter\",\"tab\"])),\n    onKeyup: _cache[19] || (_cache[19] = withKeys($event => (_ctx.deactivate()), [\"esc\"])),\n    role: \"combobox\",\n    \"aria-expanded\": _ctx.isOpen,\n    \"aria-owns\": 'listbox-'+_ctx.id,\n    \"aria-activedescendant\": _ctx.isOpen && _ctx.pointer !== null ? _ctx.id + '-' + _ctx.pointer : null\n  }, [\n    renderSlot(_ctx.$slots, \"caret\", { toggle: _ctx.toggle }, () => [\n      createElementVNode(\"div\", {\n        onMousedown: _cache[0] || (_cache[0] = withModifiers($event => (_ctx.toggle()), [\"prevent\",\"stop\"])),\n        class: \"multiselect__select\"\n      }, null, 32 /* NEED_HYDRATION */)\n    ]),\n    renderSlot(_ctx.$slots, \"clear\", { search: _ctx.search }),\n    createElementVNode(\"div\", _hoisted_2, [\n      renderSlot(_ctx.$slots, \"selection\", {\n        search: _ctx.search,\n        remove: _ctx.removeElement,\n        values: $options.visibleValues,\n        isOpen: _ctx.isOpen\n      }, () => [\n        withDirectives(createElementVNode(\"div\", _hoisted_3, [\n          (openBlock(true), createElementBlock(Fragment, null, renderList($options.visibleValues, (option, index) => {\n            return renderSlot(_ctx.$slots, \"tag\", {\n              option: option,\n              search: _ctx.search,\n              remove: _ctx.removeElement\n            }, () => [\n              (openBlock(), createElementBlock(\"span\", {\n                class: \"multiselect__tag\",\n                key: index,\n                onMousedown: _cache[1] || (_cache[1] = withModifiers(() => {}, [\"prevent\"]))\n              }, [\n                createElementVNode(\"span\", {\n                  textContent: toDisplayString(_ctx.getOptionLabel(option))\n                }, null, 8 /* PROPS */, _hoisted_4),\n                createElementVNode(\"i\", {\n                  tabindex: \"1\",\n                  onKeypress: withKeys(withModifiers($event => (_ctx.removeElement(option)), [\"prevent\"]), [\"enter\"]),\n                  onMousedown: withModifiers($event => (_ctx.removeElement(option)), [\"prevent\"]),\n                  class: \"multiselect__tag-icon\"\n                }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5)\n              ], 32 /* NEED_HYDRATION */))\n            ])\n          }), 256 /* UNKEYED_FRAGMENT */))\n        ], 512 /* NEED_PATCH */), [\n          [vShow, $options.visibleValues.length > 0]\n        ]),\n        (_ctx.internalValue && _ctx.internalValue.length > $props.limit)\n          ? renderSlot(_ctx.$slots, \"limit\", { key: 0 }, () => [\n              createElementVNode(\"strong\", {\n                class: \"multiselect__strong\",\n                textContent: toDisplayString($props.limitText(_ctx.internalValue.length - $props.limit))\n              }, null, 8 /* PROPS */, _hoisted_6)\n            ])\n          : createCommentVNode(\"v-if\", true)\n      ]),\n      createVNode(Transition, { name: \"multiselect__loading\" }, {\n        default: withCtx(() => [\n          renderSlot(_ctx.$slots, \"loading\", {}, () => [\n            withDirectives(createElementVNode(\"div\", _hoisted_7, null, 512 /* NEED_PATCH */), [\n              [vShow, $props.loading]\n            ])\n          ])\n        ]),\n        _: 3 /* FORWARDED */\n      }),\n      (_ctx.searchable)\n        ? (openBlock(), createElementBlock(\"input\", {\n            key: 0,\n            ref: \"search\",\n            name: $props.name,\n            id: _ctx.id,\n            type: \"text\",\n            autocomplete: \"off\",\n            spellcheck: $props.spellcheck,\n            placeholder: _ctx.placeholder,\n            required: $options.isRequired,\n            style: normalizeStyle($options.inputStyle),\n            value: _ctx.search,\n            disabled: $props.disabled,\n            tabindex: $props.tabindex,\n            \"aria-label\": $props.name + '-searchbox',\n            onInput: _cache[2] || (_cache[2] = $event => (_ctx.updateSearch($event.target.value))),\n            onFocus: _cache[3] || (_cache[3] = withModifiers($event => (_ctx.activate()), [\"prevent\"])),\n            onBlur: _cache[4] || (_cache[4] = withModifiers($event => (_ctx.deactivate()), [\"prevent\"])),\n            onKeyup: _cache[5] || (_cache[5] = withKeys($event => (_ctx.deactivate()), [\"esc\"])),\n            onKeydown: [\n              _cache[6] || (_cache[6] = withKeys(withModifiers($event => (_ctx.pointerForward()), [\"prevent\"]), [\"down\"])),\n              _cache[7] || (_cache[7] = withKeys(withModifiers($event => (_ctx.pointerBackward()), [\"prevent\"]), [\"up\"])),\n              _cache[9] || (_cache[9] = withKeys(withModifiers($event => (_ctx.removeLastElement()), [\"stop\"]), [\"delete\"]))\n            ],\n            onKeypress: _cache[8] || (_cache[8] = withKeys(withModifiers($event => (_ctx.addPointerElement($event)), [\"prevent\",\"stop\",\"self\"]), [\"enter\"])),\n            class: \"multiselect__input\",\n            \"aria-controls\": 'listbox-'+_ctx.id\n          }, null, 44 /* STYLE, PROPS, NEED_HYDRATION */, _hoisted_8))\n        : createCommentVNode(\"v-if\", true),\n      ($options.isSingleLabelVisible)\n        ? (openBlock(), createElementBlock(\"span\", {\n            key: 1,\n            class: \"multiselect__single\",\n            onMousedown: _cache[10] || (_cache[10] = withModifiers((...args) => (_ctx.toggle && _ctx.toggle(...args)), [\"prevent\"]))\n          }, [\n            renderSlot(_ctx.$slots, \"singleLabel\", { option: $options.singleValue }, () => [\n              createTextVNode(toDisplayString(_ctx.currentOptionLabel), 1 /* TEXT */)\n            ])\n          ], 32 /* NEED_HYDRATION */))\n        : createCommentVNode(\"v-if\", true),\n      ($options.isPlaceholderVisible)\n        ? (openBlock(), createElementBlock(\"span\", {\n            key: 2,\n            class: \"multiselect__placeholder\",\n            onMousedown: _cache[11] || (_cache[11] = withModifiers((...args) => (_ctx.toggle && _ctx.toggle(...args)), [\"prevent\"]))\n          }, [\n            renderSlot(_ctx.$slots, \"placeholder\", {}, () => [\n              createTextVNode(toDisplayString(_ctx.placeholder), 1 /* TEXT */)\n            ])\n          ], 32 /* NEED_HYDRATION */))\n        : createCommentVNode(\"v-if\", true)\n    ], 512 /* NEED_PATCH */),\n    createVNode(Transition, {\n      name: \"multiselect\",\n      persisted: \"\"\n    }, {\n      default: withCtx(() => [\n        withDirectives(createElementVNode(\"div\", {\n          class: \"multiselect__content-wrapper\",\n          onFocus: _cache[12] || (_cache[12] = (...args) => (_ctx.activate && _ctx.activate(...args))),\n          tabindex: \"-1\",\n          onMousedown: _cache[13] || (_cache[13] = withModifiers(() => {}, [\"prevent\"])),\n          style: normalizeStyle({ maxHeight: _ctx.optimizedHeight + 'px' }),\n          ref: \"list\"\n        }, [\n          createElementVNode(\"ul\", {\n            class: \"multiselect__content\",\n            style: normalizeStyle($options.contentStyle),\n            role: \"listbox\",\n            id: 'listbox-'+_ctx.id,\n            \"aria-multiselectable\": _ctx.multiple\n          }, [\n            renderSlot(_ctx.$slots, \"beforeList\"),\n            (_ctx.multiple && _ctx.max === _ctx.internalValue.length)\n              ? (openBlock(), createElementBlock(\"li\", _hoisted_10, [\n                  createElementVNode(\"span\", _hoisted_11, [\n                    renderSlot(_ctx.$slots, \"maxElements\", {}, () => [\n                      createTextVNode(\"Maximum of \" + toDisplayString(_ctx.max) + \" options selected. First remove a selected option to select another.\", 1 /* TEXT */)\n                    ])\n                  ])\n                ]))\n              : createCommentVNode(\"v-if\", true),\n            (!_ctx.max || _ctx.internalValue.length < _ctx.max)\n              ? (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(_ctx.filteredOptions, (option, index) => {\n                  return (openBlock(), createElementBlock(\"li\", {\n                    class: \"multiselect__element\",\n                    key: index,\n                    \"aria-selected\": _ctx.isSelected(option),\n                    id: _ctx.id + '-' + index,\n                    role: !(option && (option.$isLabel || option.$isDisabled)) ? 'option' : null\n                  }, [\n                    (!(option && (option.$isLabel || option.$isDisabled)))\n                      ? (openBlock(), createElementBlock(\"span\", {\n                          key: 0,\n                          class: normalizeClass([_ctx.optionHighlight(index, option), \"multiselect__option\"]),\n                          onClick: withModifiers($event => (_ctx.select(option)), [\"stop\"]),\n                          onMouseenter: withModifiers($event => (_ctx.pointerSet(index)), [\"self\"]),\n                          \"data-select\": option && option.isTag ? _ctx.tagPlaceholder : $options.selectLabelText,\n                          \"data-selected\": $options.selectedLabelText,\n                          \"data-deselect\": $options.deselectLabelText\n                        }, [\n                          renderSlot(_ctx.$slots, \"option\", {\n                            option: option,\n                            search: _ctx.search,\n                            index: index\n                          }, () => [\n                            createElementVNode(\"span\", null, toDisplayString(_ctx.getOptionLabel(option)), 1 /* TEXT */)\n                          ])\n                        ], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_13))\n                      : createCommentVNode(\"v-if\", true),\n                    (option && (option.$isLabel || option.$isDisabled))\n                      ? (openBlock(), createElementBlock(\"span\", {\n                          key: 1,\n                          \"data-select\": _ctx.groupSelect && $options.selectGroupLabelText,\n                          \"data-deselect\": _ctx.groupSelect && $options.deselectGroupLabelText,\n                          class: normalizeClass([_ctx.groupHighlight(index, option), \"multiselect__option\"]),\n                          onMouseenter: withModifiers($event => (_ctx.groupSelect && _ctx.pointerSet(index)), [\"self\"]),\n                          onMousedown: withModifiers($event => (_ctx.selectGroup(option)), [\"prevent\"])\n                        }, [\n                          renderSlot(_ctx.$slots, \"option\", {\n                            option: option,\n                            search: _ctx.search,\n                            index: index\n                          }, () => [\n                            createElementVNode(\"span\", null, toDisplayString(_ctx.getOptionLabel(option)), 1 /* TEXT */)\n                          ])\n                        ], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_14))\n                      : createCommentVNode(\"v-if\", true)\n                  ], 8 /* PROPS */, _hoisted_12))\n                }), 128 /* KEYED_FRAGMENT */))\n              : createCommentVNode(\"v-if\", true),\n            withDirectives(createElementVNode(\"li\", null, [\n              createElementVNode(\"span\", _hoisted_15, [\n                renderSlot(_ctx.$slots, \"noResult\", { search: _ctx.search }, () => [\n                  _cache[20] || (_cache[20] = createTextVNode(\"No elements found. Consider changing the search query.\"))\n                ])\n              ])\n            ], 512 /* NEED_PATCH */), [\n              [vShow, $props.showNoResults && (_ctx.filteredOptions.length === 0 && _ctx.search && !$props.loading)]\n            ]),\n            withDirectives(createElementVNode(\"li\", null, [\n              createElementVNode(\"span\", _hoisted_16, [\n                renderSlot(_ctx.$slots, \"noOptions\", {}, () => [\n                  _cache[21] || (_cache[21] = createTextVNode(\"List is empty.\"))\n                ])\n              ])\n            ], 512 /* NEED_PATCH */), [\n              [vShow, $props.showNoOptions && ((_ctx.options.length === 0 || ($options.hasOptionGroup === true && _ctx.filteredOptions.length === 0)) && !_ctx.search && !$props.loading)]\n            ]),\n            renderSlot(_ctx.$slots, \"afterList\")\n          ], 12 /* STYLE, PROPS */, _hoisted_9)\n        ], 36 /* STYLE, NEED_HYDRATION */), [\n          [vShow, _ctx.isOpen]\n        ])\n      ]),\n      _: 3 /* FORWARDED */\n    })\n  ], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_1))\n}\n\nscript.render = render;\n\nexport { script as Multiselect, script as default, multiselectMixin, pointerMixin };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}