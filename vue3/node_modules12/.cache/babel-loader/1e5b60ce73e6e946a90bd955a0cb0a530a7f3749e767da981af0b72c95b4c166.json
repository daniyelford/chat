{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nimport { ref, onMounted } from 'vue';\nimport { sendApi } from '@/utils/api';\nimport router from '@/router';\nimport { BASE_URL } from '@/config';\nexport default {\n  __name: 'FingerPrintLogin',\n  setup(__props) {\n    const fingerPrintIcon = BASE_URL + '/assets/images/f.png';\n    const isSupported = ref(false);\n    onMounted(() => {\n      isSupported.value = window.PublicKeyCredential && typeof window.PublicKeyCredential === 'function';\n    });\n    async function loginWithWebAuthn() {\n      try {\n        const res = await sendApi({\n          action: 'login_webauthn_request',\n          control: 'login'\n        });\n        if (!res || !res.publicKey) {\n          if (res.status === 'error') {\n            alert(res.message);\n          } else {\n            throw new Error('مشکلی در دریافت challenge رخ داد.');\n          }\n          return;\n        }\n        const options = preformatGetReq(res.publicKey);\n        const assertion = await navigator.credentials.get({\n          publicKey: options\n        });\n        const verify = await sendApi({\n          action: 'login_webauthn_response',\n          data: assertion,\n          control: 'login'\n        });\n        if (verify.status === 'success') {\n          if (verify.url === 'dashboard') {\n            router.push({\n              name: 'dashboard'\n            });\n          } else if (verify.url === 'register') {\n            router.push({\n              name: 'register'\n            });\n          } else {\n            this.message = 'مشخصات ناقص است. لطفاً دوباره تلاش کنید.';\n          }\n        } else {\n          alert('احراز هویت ناموفق بود.');\n        }\n      } catch (err) {\n        console.error(err);\n        alert('خطا در ورود با اثر انگشت');\n      }\n    }\n    function decodeMimeBase64(mimeString) {\n      const match = mimeString.match(/=\\?BINARY\\?B\\?(.*)\\?=/i);\n      if (match && match[1]) {\n        return Uint8Array.from(atob(match[1]), c => c.charCodeAt(0)).buffer;\n      }\n      return Uint8Array.from(atob(mimeString), c => c.charCodeAt(0)).buffer;\n    }\n    function preformatGetReq(options) {\n      const opts = {\n        ...options\n      };\n      opts.challenge = decodeMimeBase64(opts.challenge);\n      if (opts.allowCredentials && Array.isArray(opts.allowCredentials)) {\n        opts.allowCredentials = opts.allowCredentials.map(cred => ({\n          ...cred,\n          id: decodeMimeBase64(cred.id)\n        }));\n      }\n      return opts;\n    }\n    return (_ctx, _cache) => {\n      return isSupported.value ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        onClick: loginWithWebAuthn\n      }, [_createElementVNode(\"img\", {\n        src: fingerPrintIcon,\n        alt: \"finger print login icon\"\n      })])) : _createCommentVNode(\"\", true);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","sendApi","router","BASE_URL","fingerPrintIcon","isSupported","value","window","PublicKeyCredential","loginWithWebAuthn","res","action","control","publicKey","status","alert","message","Error","options","preformatGetReq","assertion","navigator","credentials","get","verify","data","url","push","name","err","console","error","decodeMimeBase64","mimeString","match","Uint8Array","from","atob","c","charCodeAt","buffer","opts","challenge","allowCredentials","Array","isArray","map","cred","id"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/home/FingerPrintLogin.vue"],"sourcesContent":["<template>\r\n    <button v-if=\"isSupported\" @click=\"loginWithWebAuthn\">\r\n        <img :src=\"fingerPrintIcon\" alt=\"finger print login icon\">\r\n    </button>\r\n</template>\r\n<script setup>\r\n    import { ref, onMounted } from 'vue'\r\n    import { sendApi } from '@/utils/api'\r\n    import router from '@/router'\r\n    import { BASE_URL } from '@/config';\r\n    const fingerPrintIcon=BASE_URL+'/assets/images/f.png'\r\n    const isSupported = ref(false)\r\n    onMounted(() => {\r\n        isSupported.value = window.PublicKeyCredential && typeof window.PublicKeyCredential === 'function'\r\n    })\r\n    async function loginWithWebAuthn() {\r\n        try {\r\n            const res = await sendApi({\r\n                action: 'login_webauthn_request',\r\n                control:'login'\r\n            })\r\n            if (!res || !res.publicKey) {\r\n                if (res.status === 'error') {\r\n                    alert(res.message)\r\n                } else {\r\n                    throw new Error('مشکلی در دریافت challenge رخ داد.')\r\n                }\r\n                return\r\n            }\r\n            const options = preformatGetReq(res.publicKey)\r\n            const assertion = await navigator.credentials.get({\r\n                publicKey: options\r\n            })\r\n            const verify = await sendApi({\r\n                action: 'login_webauthn_response',\r\n                data:assertion,\r\n                control:'login'\r\n            })\r\n            if (verify.status==='success') {\r\n                if (verify.url === 'dashboard') {\r\n                    router.push({ name: 'dashboard' })\r\n                } else if (verify.url === 'register') {\r\n                    router.push({ name: 'register' })\r\n                } else {\r\n                    this.message = 'مشخصات ناقص است. لطفاً دوباره تلاش کنید.'\r\n                }\r\n            } else {\r\n                alert('احراز هویت ناموفق بود.')\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n            alert('خطا در ورود با اثر انگشت')\r\n        }\r\n    }\r\n    function decodeMimeBase64(mimeString) {\r\n        const match = mimeString.match(/=\\?BINARY\\?B\\?(.*)\\?=/i)\r\n        if (match && match[1]) {\r\n        return Uint8Array.from(atob(match[1]), c => c.charCodeAt(0)).buffer\r\n        }\r\n        return Uint8Array.from(atob(mimeString), c => c.charCodeAt(0)).buffer\r\n    }\r\n    function preformatGetReq(options) {\r\n        const opts = { ...options }\r\n        opts.challenge = decodeMimeBase64(opts.challenge)\r\n        if (opts.allowCredentials && Array.isArray(opts.allowCredentials)) {\r\n            opts.allowCredentials = opts.allowCredentials.map(cred => ({\r\n            ...cred,\r\n            id: decodeMimeBase64(cred.id)\r\n            }))\r\n        }\r\n        return opts\r\n    }\r\n</script>\r\n<style scoped>\r\n    button{\r\n        border: none;\r\n        outline: none;\r\n        width: 35px;\r\n        height: 35px;\r\n        cursor: pointer;\r\n        padding: 0;\r\n        background: transparent;\r\n    }\r\n    img{\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}