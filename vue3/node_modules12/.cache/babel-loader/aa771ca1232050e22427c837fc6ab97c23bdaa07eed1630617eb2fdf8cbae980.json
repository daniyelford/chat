{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport { ref } from 'vue';\nimport { sendApi } from '@/utils/api';\nexport const usePlaceStore = defineStore('place', () => {\n  const allPlaces = ref([]);\n  const allCategories = ref([]);\n  const categories = ref([]);\n  const userCoordinate = ref([]);\n  const userAccountId = ref(null);\n  const categoryLoading = ref(false);\n  const placeOffset = ref(0);\n  const categoryId = ref(0);\n  const categoryOffset = ref(0);\n  const hasMorePlaces = ref(true);\n  const hasMoreCategories = ref(true);\n  const fetchCategoriesPaginated = async (offset = 0, limit = 16) => {\n    const res = await sendApi({\n      control: 'place',\n      action: 'get_places_category',\n      data: {\n        offset: offset,\n        limit: limit\n      }\n    });\n    if (res.status === 'success') {\n      if (Array.isArray(res.data)) {\n        if (offset === 0) allCategories.value = res.data;else allCategories.value.push(...res.data);\n        hasMoreCategories.value = res.has_more;\n        categoryOffset.value += res.data.length;\n      }\n    }\n  };\n  const fetchPlacesPaginated = async ({\n    offset = null,\n    category_id = null,\n    limit = 10\n  }) => {\n    if (offset) placeOffset.value = offset;\n    if (categoryId.value !== category_id) resetPlaces();\n    const res = await sendApi({\n      control: 'place',\n      action: 'get_places',\n      data: {\n        offset: placeOffset.value,\n        category_id: category_id,\n        limit: limit\n      }\n    });\n    if (res.status === 'success') {\n      if (Array.isArray(res.data)) {\n        if (categoryId.value !== category_id) categoryId.value = category_id;\n        if (placeOffset.value === 0) allPlaces.value = res.data;else allPlaces.value.push(...res.data);\n        if (res.cord) userCoordinate.value = res.cord;\n        userAccountId.value = res.user_account_id;\n        placeOffset.value += res.data.length;\n        hasMorePlaces.value = res.has_more;\n      }\n    }\n  };\n  const fetchPlacebyId = async id => {\n    const res = await sendApi({\n      control: 'place',\n      action: 'get_places',\n      data: {\n        id: id\n      }\n    });\n    if (res.status === 'success' && Array.isArray(res.data)) {\n      return res.data;\n    }\n    return [];\n  };\n  const fetchCategories = async query => {\n    categoryLoading.value = true;\n    try {\n      const res = await sendApi({\n        control: 'place',\n        action: 'get_places_category',\n        data: {\n          search: query\n        }\n      });\n      if (res.status === 'success' && Array.isArray(res.data)) {\n        categories.value = res.data;\n      } else {\n        console.error('خطا در دریافت داده‌ها:', res.message);\n      }\n    } catch (e) {\n      console.error('خطا در ارتباط:', e);\n    } finally {\n      categoryLoading.value = false;\n    }\n  };\n  const submitPlace = async (placeData, edit = null) => {\n    try {\n      const res = await sendApi({\n        control: 'place',\n        action: 'add_place',\n        data: placeData\n      });\n      if (res.status === 'success' && res?.id) {\n        const id = res.id;\n        const newPlaceArray = await fetchPlacebyId(id);\n        const newPlace = newPlaceArray[0];\n        if (!edit) {\n          allPlaces.value.unshift(newPlace);\n        } else {\n          const index = allPlaces.value.findIndex(p => Number(p.id) === Number(edit));\n          if (index !== -1) {\n            allPlaces.value[index] = newPlace;\n          } else {\n            allPlaces.value.unshift(newPlace);\n          }\n        }\n      }\n      return res;\n    } catch (error) {\n      console.error('submitPlace error:', error);\n      return {\n        status: 'error',\n        message: 'خطا در ارسال درخواست'\n      };\n    }\n  };\n  const resetPlaces = () => {\n    allPlaces.value = [];\n    placeOffset.value = 0;\n    hasMorePlaces.value = true;\n  };\n  return {\n    allPlaces,\n    categories,\n    allCategories,\n    userCoordinate,\n    userAccountId,\n    categoryLoading,\n    placeOffset,\n    categoryOffset,\n    hasMorePlaces,\n    hasMoreCategories,\n    fetchCategoriesPaginated,\n    fetchPlacesPaginated,\n    fetchCategories,\n    submitPlace,\n    resetPlaces\n  };\n});","map":{"version":3,"names":["defineStore","ref","sendApi","usePlaceStore","allPlaces","allCategories","categories","userCoordinate","userAccountId","categoryLoading","placeOffset","categoryId","categoryOffset","hasMorePlaces","hasMoreCategories","fetchCategoriesPaginated","offset","limit","res","control","action","data","status","Array","isArray","value","push","has_more","length","fetchPlacesPaginated","category_id","resetPlaces","cord","user_account_id","fetchPlacebyId","id","fetchCategories","query","search","console","error","message","e","submitPlace","placeData","edit","newPlaceArray","newPlace","unshift","index","findIndex","p","Number"],"sources":["D:/GitHub/chat/vue3/src/stores/place.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { ref } from 'vue'\r\nimport { sendApi } from '@/utils/api'\r\nexport const usePlaceStore = defineStore('place', () => {\r\n  const allPlaces = ref([])\r\n  const allCategories = ref([])\r\n  const categories = ref([])\r\n  const userCoordinate = ref([])\r\n  const userAccountId = ref(null)\r\n  const categoryLoading = ref(false)\r\n  const placeOffset = ref(0)\r\n  const categoryId = ref(0)\r\n  const categoryOffset = ref(0)\r\n  const hasMorePlaces = ref(true)\r\n  const hasMoreCategories = ref(true)\r\n  const fetchCategoriesPaginated = async (offset = 0, limit = 16) => {\r\n    const res = await sendApi({\r\n      control: 'place',\r\n      action: 'get_places_category',\r\n      data: { offset:offset, limit:limit }\r\n    })\r\n    if (res.status === 'success') {\r\n      if (Array.isArray(res.data)) {\r\n        if (offset === 0) allCategories.value = res.data\r\n        else allCategories.value.push(...res.data)\r\n        hasMoreCategories.value = res.has_more\r\n        categoryOffset.value += res.data.length\r\n      }\r\n    }\r\n  }\r\n  const fetchPlacesPaginated = async ({ offset = null, category_id = null, limit = 10 }) => {\r\n    if(offset) placeOffset.value = offset\r\n    if (categoryId.value !== category_id) resetPlaces()      \r\n    const res = await sendApi({\r\n      control: 'place',\r\n      action: 'get_places',\r\n      data: { offset:placeOffset.value, category_id:category_id, limit:limit }\r\n    })\r\n    if (res.status === 'success') {\r\n      if (Array.isArray(res.data)) {\r\n        if (categoryId.value !== category_id) categoryId.value = category_id\r\n        if (placeOffset.value === 0) allPlaces.value = res.data\r\n        else allPlaces.value.push(...res.data)\r\n        if (res.cord) userCoordinate.value = res.cord\r\n        userAccountId.value= res.user_account_id\r\n        placeOffset.value += res.data.length\r\n        hasMorePlaces.value = res.has_more\r\n      }\r\n    }\r\n  }\r\n  const fetchPlacebyId = async (id) => {\r\n    const res = await sendApi({\r\n      control: 'place',\r\n      action: 'get_places',\r\n      data: { id:id }\r\n    })\r\n    if (res.status === 'success' && Array.isArray(res.data)) {\r\n      return res.data\r\n    }\r\n    return []\r\n  }\r\n  const fetchCategories = async (query) => {\r\n    categoryLoading.value = true\r\n    try {\r\n      const res = await sendApi({ control: 'place', action: 'get_places_category' , data: { search: query } })\r\n      if (res.status === 'success' && Array.isArray(res.data)) {\r\n        categories.value=res.data\r\n      } else {\r\n        console.error('خطا در دریافت داده‌ها:', res.message)\r\n      }\r\n    } catch (e) {\r\n      console.error('خطا در ارتباط:', e)\r\n    }finally {\r\n      categoryLoading.value = false\r\n    }\r\n  }\r\n  const submitPlace = async (placeData, edit = null) => {\r\n    try {\r\n      const res = await sendApi({\r\n        control: 'place',\r\n        action: 'add_place',\r\n        data: placeData\r\n      })\r\n      if (res.status === 'success' && res?.id) {\r\n        const id = res.id\r\n        const newPlaceArray = await fetchPlacebyId(id)\r\n        const newPlace = newPlaceArray[0]\r\n        if (!edit) {\r\n          allPlaces.value.unshift(newPlace)\r\n        } else {\r\n          const index = allPlaces.value.findIndex(p => Number(p.id) === Number(edit))\r\n          if (index !== -1) {\r\n            allPlaces.value[index] = newPlace\r\n          } else {\r\n            allPlaces.value.unshift(newPlace)\r\n          }\r\n        }\r\n      }\r\n      return res\r\n    } catch (error) {\r\n      console.error('submitPlace error:', error)\r\n      return { status: 'error', message: 'خطا در ارسال درخواست' }\r\n    }\r\n  }\r\n  const resetPlaces = () => {\r\n    allPlaces.value = []\r\n    placeOffset.value = 0\r\n    hasMorePlaces.value = true\r\n  }\r\n  return {\r\n    allPlaces,\r\n    categories,\r\n    allCategories,\r\n    userCoordinate,\r\n    userAccountId,\r\n    categoryLoading,\r\n    placeOffset,\r\n    categoryOffset,\r\n    hasMorePlaces,\r\n    hasMoreCategories,\r\n    fetchCategoriesPaginated,\r\n    fetchPlacesPaginated,\r\n    fetchCategories,\r\n    submitPlace,\r\n    resetPlaces\r\n  }\r\n})"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAO,MAAMC,aAAa,GAAGH,WAAW,CAAC,OAAO,EAAE,MAAM;EACtD,MAAMI,SAAS,GAAGH,GAAG,CAAC,EAAE,CAAC;EACzB,MAAMI,aAAa,GAAGJ,GAAG,CAAC,EAAE,CAAC;EAC7B,MAAMK,UAAU,GAAGL,GAAG,CAAC,EAAE,CAAC;EAC1B,MAAMM,cAAc,GAAGN,GAAG,CAAC,EAAE,CAAC;EAC9B,MAAMO,aAAa,GAAGP,GAAG,CAAC,IAAI,CAAC;EAC/B,MAAMQ,eAAe,GAAGR,GAAG,CAAC,KAAK,CAAC;EAClC,MAAMS,WAAW,GAAGT,GAAG,CAAC,CAAC,CAAC;EAC1B,MAAMU,UAAU,GAAGV,GAAG,CAAC,CAAC,CAAC;EACzB,MAAMW,cAAc,GAAGX,GAAG,CAAC,CAAC,CAAC;EAC7B,MAAMY,aAAa,GAAGZ,GAAG,CAAC,IAAI,CAAC;EAC/B,MAAMa,iBAAiB,GAAGb,GAAG,CAAC,IAAI,CAAC;EACnC,MAAMc,wBAAwB,GAAG,MAAAA,CAAOC,MAAM,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAK;IACjE,MAAMC,GAAG,GAAG,MAAMhB,OAAO,CAAC;MACxBiB,OAAO,EAAE,OAAO;MAChBC,MAAM,EAAE,qBAAqB;MAC7BC,IAAI,EAAE;QAAEL,MAAM,EAACA,MAAM;QAAEC,KAAK,EAACA;MAAM;IACrC,CAAC,CAAC;IACF,IAAIC,GAAG,CAACI,MAAM,KAAK,SAAS,EAAE;MAC5B,IAAIC,KAAK,CAACC,OAAO,CAACN,GAAG,CAACG,IAAI,CAAC,EAAE;QAC3B,IAAIL,MAAM,KAAK,CAAC,EAAEX,aAAa,CAACoB,KAAK,GAAGP,GAAG,CAACG,IAAI,MAC3ChB,aAAa,CAACoB,KAAK,CAACC,IAAI,CAAC,GAAGR,GAAG,CAACG,IAAI,CAAC;QAC1CP,iBAAiB,CAACW,KAAK,GAAGP,GAAG,CAACS,QAAQ;QACtCf,cAAc,CAACa,KAAK,IAAIP,GAAG,CAACG,IAAI,CAACO,MAAM;MACzC;IACF;EACF,CAAC;EACD,MAAMC,oBAAoB,GAAG,MAAAA,CAAO;IAAEb,MAAM,GAAG,IAAI;IAAEc,WAAW,GAAG,IAAI;IAAEb,KAAK,GAAG;EAAG,CAAC,KAAK;IACxF,IAAGD,MAAM,EAAEN,WAAW,CAACe,KAAK,GAAGT,MAAM;IACrC,IAAIL,UAAU,CAACc,KAAK,KAAKK,WAAW,EAAEC,WAAW,CAAC,CAAC;IACnD,MAAMb,GAAG,GAAG,MAAMhB,OAAO,CAAC;MACxBiB,OAAO,EAAE,OAAO;MAChBC,MAAM,EAAE,YAAY;MACpBC,IAAI,EAAE;QAAEL,MAAM,EAACN,WAAW,CAACe,KAAK;QAAEK,WAAW,EAACA,WAAW;QAAEb,KAAK,EAACA;MAAM;IACzE,CAAC,CAAC;IACF,IAAIC,GAAG,CAACI,MAAM,KAAK,SAAS,EAAE;MAC5B,IAAIC,KAAK,CAACC,OAAO,CAACN,GAAG,CAACG,IAAI,CAAC,EAAE;QAC3B,IAAIV,UAAU,CAACc,KAAK,KAAKK,WAAW,EAAEnB,UAAU,CAACc,KAAK,GAAGK,WAAW;QACpE,IAAIpB,WAAW,CAACe,KAAK,KAAK,CAAC,EAAErB,SAAS,CAACqB,KAAK,GAAGP,GAAG,CAACG,IAAI,MAClDjB,SAAS,CAACqB,KAAK,CAACC,IAAI,CAAC,GAAGR,GAAG,CAACG,IAAI,CAAC;QACtC,IAAIH,GAAG,CAACc,IAAI,EAAEzB,cAAc,CAACkB,KAAK,GAAGP,GAAG,CAACc,IAAI;QAC7CxB,aAAa,CAACiB,KAAK,GAAEP,GAAG,CAACe,eAAe;QACxCvB,WAAW,CAACe,KAAK,IAAIP,GAAG,CAACG,IAAI,CAACO,MAAM;QACpCf,aAAa,CAACY,KAAK,GAAGP,GAAG,CAACS,QAAQ;MACpC;IACF;EACF,CAAC;EACD,MAAMO,cAAc,GAAG,MAAOC,EAAE,IAAK;IACnC,MAAMjB,GAAG,GAAG,MAAMhB,OAAO,CAAC;MACxBiB,OAAO,EAAE,OAAO;MAChBC,MAAM,EAAE,YAAY;MACpBC,IAAI,EAAE;QAAEc,EAAE,EAACA;MAAG;IAChB,CAAC,CAAC;IACF,IAAIjB,GAAG,CAACI,MAAM,KAAK,SAAS,IAAIC,KAAK,CAACC,OAAO,CAACN,GAAG,CAACG,IAAI,CAAC,EAAE;MACvD,OAAOH,GAAG,CAACG,IAAI;IACjB;IACA,OAAO,EAAE;EACX,CAAC;EACD,MAAMe,eAAe,GAAG,MAAOC,KAAK,IAAK;IACvC5B,eAAe,CAACgB,KAAK,GAAG,IAAI;IAC5B,IAAI;MACF,MAAMP,GAAG,GAAG,MAAMhB,OAAO,CAAC;QAAEiB,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAE,qBAAqB;QAAGC,IAAI,EAAE;UAAEiB,MAAM,EAAED;QAAM;MAAE,CAAC,CAAC;MACxG,IAAInB,GAAG,CAACI,MAAM,KAAK,SAAS,IAAIC,KAAK,CAACC,OAAO,CAACN,GAAG,CAACG,IAAI,CAAC,EAAE;QACvDf,UAAU,CAACmB,KAAK,GAACP,GAAG,CAACG,IAAI;MAC3B,CAAC,MAAM;QACLkB,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEtB,GAAG,CAACuB,OAAO,CAAC;MACtD;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVH,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEE,CAAC,CAAC;IACpC,CAAC,SAAQ;MACPjC,eAAe,CAACgB,KAAK,GAAG,KAAK;IAC/B;EACF,CAAC;EACD,MAAMkB,WAAW,GAAG,MAAAA,CAAOC,SAAS,EAAEC,IAAI,GAAG,IAAI,KAAK;IACpD,IAAI;MACF,MAAM3B,GAAG,GAAG,MAAMhB,OAAO,CAAC;QACxBiB,OAAO,EAAE,OAAO;QAChBC,MAAM,EAAE,WAAW;QACnBC,IAAI,EAAEuB;MACR,CAAC,CAAC;MACF,IAAI1B,GAAG,CAACI,MAAM,KAAK,SAAS,IAAIJ,GAAG,EAAEiB,EAAE,EAAE;QACvC,MAAMA,EAAE,GAAGjB,GAAG,CAACiB,EAAE;QACjB,MAAMW,aAAa,GAAG,MAAMZ,cAAc,CAACC,EAAE,CAAC;QAC9C,MAAMY,QAAQ,GAAGD,aAAa,CAAC,CAAC,CAAC;QACjC,IAAI,CAACD,IAAI,EAAE;UACTzC,SAAS,CAACqB,KAAK,CAACuB,OAAO,CAACD,QAAQ,CAAC;QACnC,CAAC,MAAM;UACL,MAAME,KAAK,GAAG7C,SAAS,CAACqB,KAAK,CAACyB,SAAS,CAACC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAAChB,EAAE,CAAC,KAAKiB,MAAM,CAACP,IAAI,CAAC,CAAC;UAC3E,IAAII,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB7C,SAAS,CAACqB,KAAK,CAACwB,KAAK,CAAC,GAAGF,QAAQ;UACnC,CAAC,MAAM;YACL3C,SAAS,CAACqB,KAAK,CAACuB,OAAO,CAACD,QAAQ,CAAC;UACnC;QACF;MACF;MACA,OAAO7B,GAAG;IACZ,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,OAAO;QAAElB,MAAM,EAAE,OAAO;QAAEmB,OAAO,EAAE;MAAuB,CAAC;IAC7D;EACF,CAAC;EACD,MAAMV,WAAW,GAAGA,CAAA,KAAM;IACxB3B,SAAS,CAACqB,KAAK,GAAG,EAAE;IACpBf,WAAW,CAACe,KAAK,GAAG,CAAC;IACrBZ,aAAa,CAACY,KAAK,GAAG,IAAI;EAC5B,CAAC;EACD,OAAO;IACLrB,SAAS;IACTE,UAAU;IACVD,aAAa;IACbE,cAAc;IACdC,aAAa;IACbC,eAAe;IACfC,WAAW;IACXE,cAAc;IACdC,aAAa;IACbC,iBAAiB;IACjBC,wBAAwB;IACxBc,oBAAoB;IACpBO,eAAe;IACfO,WAAW;IACXZ;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}