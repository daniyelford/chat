{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"category\"\n};\nconst _hoisted_2 = {\n  class: \"category-list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nimport { ref, computed, onMounted } from 'vue';\nimport { useInfiniteScroll } from '@/composables/useInfiniteScroll';\nimport { usePlaceStore } from '@/stores/place';\nexport default {\n  __name: 'PlaceCategory',\n  props: {\n    selectedCategoryId: Number\n  },\n  emits: ['update:selectedCategoryId'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const emit = __emit;\n    const props = __props;\n    const placeStore = usePlaceStore();\n    const categorySearch = ref('');\n    const filteredCategories = computed(() => {\n      const q = categorySearch.value.trim().toLowerCase();\n      if (!q) return placeStore.allCategories;\n      return placeStore.allCategories.filter(c => c.title.toLowerCase().includes(q));\n    });\n    const selectCategory = id => {\n      emit('update:selectedCategoryId', id);\n    };\n    const {\n      loadMoreTrigger: loadTrigger,\n      setupObserver\n    } = useInfiniteScroll(async ({\n      offset\n    }) => {\n      await placeStore.fetchCategoriesPaginated(offset);\n      return {\n        items: placeStore.allCategories,\n        has_more: placeStore.hasMoreCategories\n      };\n    });\n    onMounted(() => {\n      setupObserver();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => categorySearch.value = $event),\n        placeholder: \"جستجوی دسته‌بندی...\",\n        class: \"search-box\"\n      }, null, 512), [[_vModelText, categorySearch.value]]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n        onClick: _cache[1] || (_cache[1] = $event => selectCategory(0)),\n        class: _normalizeClass({\n          active: props.selectedCategoryId === 0\n        })\n      }, \" همه \", 2), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredCategories.value, cat => {\n        return _openBlock(), _createElementBlock(\"button\", {\n          key: cat.id,\n          class: _normalizeClass({\n            active: props.selectedCategoryId === cat.id\n          }),\n          onClick: $event => selectCategory(cat.id)\n        }, _toDisplayString(cat.title), 11, _hoisted_3);\n      }), 128)), _createElementVNode(\"div\", {\n        ref_key: \"loadTrigger\",\n        ref: loadTrigger,\n        class: \"load-trigger\",\n        style: {\n          \"margin-top\": \"-10px\"\n        }\n      }, null, 512)])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useInfiniteScroll","usePlaceStore","emit","__emit","props","__props","placeStore","categorySearch","filteredCategories","q","value","trim","toLowerCase","allCategories","filter","c","title","includes","selectCategory","id","loadMoreTrigger","loadTrigger","setupObserver","offset","fetchCategoriesPaginated","items","has_more","hasMoreCategories"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/category/PlaceCategory.vue"],"sourcesContent":["<template>\r\n  <div class=\"category\">\r\n    <input\r\n      v-model=\"categorySearch\"\r\n      placeholder=\"جستجوی دسته‌بندی...\"\r\n      class=\"search-box\"\r\n    />\r\n    <div class=\"category-list\">\r\n      <button @click=\"selectCategory(0)\" :class=\"{ active: props.selectedCategoryId === 0 }\">\r\n        همه\r\n      </button>\r\n      <button\r\n        v-for=\"cat in filteredCategories\"\r\n        :key=\"cat.id\"\r\n        :class=\"{ active: props.selectedCategoryId === cat.id }\"\r\n        @click=\"selectCategory(cat.id)\">\r\n        {{ cat.title }}\r\n      </button>\r\n      <div ref=\"loadTrigger\" class=\"load-trigger\" style=\"margin-top: -10px;\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref, computed, onMounted, defineProps, defineEmits } from 'vue'\r\nimport { useInfiniteScroll } from '@/composables/useInfiniteScroll'\r\nimport { usePlaceStore } from '@/stores/place'\r\n\r\nconst emit = defineEmits(['update:selectedCategoryId'])\r\n\r\nconst props = defineProps({\r\n  selectedCategoryId: Number\r\n})\r\n\r\nconst placeStore = usePlaceStore()\r\nconst categorySearch = ref('')\r\n\r\nconst filteredCategories = computed(() => {\r\n  const q = categorySearch.value.trim().toLowerCase()\r\n  if (!q) return placeStore.allCategories\r\n  return placeStore.allCategories.filter(c =>\r\n    c.title.toLowerCase().includes(q)\r\n  )\r\n})\r\n\r\nconst selectCategory = (id) => {\r\n  emit('update:selectedCategoryId', id)\r\n}\r\n\r\nconst {\r\n  loadMoreTrigger: loadTrigger,\r\n  setupObserver\r\n} = useInfiniteScroll(async ({ offset }) => {\r\n  await placeStore.fetchCategoriesPaginated(offset)\r\n  return {\r\n    items: placeStore.allCategories,\r\n    has_more: placeStore.hasMoreCategories,\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  setupObserver()\r\n})\r\n</script>\r\n<style scoped>\r\n.category {\r\n  height: 100%;\r\n  float: right;\r\n  width: 30%;\r\n}\r\n.search-box {\r\n  height: 30px;\r\n  width: 100%;\r\n  margin: 5px auto;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  border: 0;\r\n  background: #e5dede;\r\n  box-shadow: 0 0 5px;\r\n  direction: rtl;\r\n}\r\n.category-list {\r\n  height: calc(100% - 30px);\r\n  width: 100%;\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: stretch;\r\n  justify-content: flex-start;\r\n  gap: 2px;\r\n}\r\n.category-list button {\r\n  color: white;\r\n  background: #4a6b75;\r\n  padding: 8px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 5px green;\r\n}\r\n.category-list button.active {\r\n  background-color: darkgreen;\r\n}\r\n</style>"],"mappings":";;;;;;;;;;AAuBA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAmC,QAAQ,KAAK;AACxE,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,aAAa,QAAQ,gBAAgB;;;;;;;;;;IAE9C,MAAMC,IAAI,GAAGC,MAA0C;IAEvD,MAAMC,KAAK,GAAGC,OAEZ;IAEF,MAAMC,UAAU,GAAGL,aAAa,CAAC,CAAC;IAClC,MAAMM,cAAc,GAAGV,GAAG,CAAC,EAAE,CAAC;IAE9B,MAAMW,kBAAkB,GAAGV,QAAQ,CAAC,MAAM;MACxC,MAAMW,CAAC,GAAGF,cAAc,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnD,IAAI,CAACH,CAAC,EAAE,OAAOH,UAAU,CAACO,aAAa;MACvC,OAAOP,UAAU,CAACO,aAAa,CAACC,MAAM,CAACC,CAAC,IACtCA,CAAC,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACR,CAAC,CAClC,CAAC;IACH,CAAC,CAAC;IAEF,MAAMS,cAAc,GAAIC,EAAE,IAAK;MAC7BjB,IAAI,CAAC,2BAA2B,EAAEiB,EAAE,CAAC;IACvC,CAAC;IAED,MAAM;MACJC,eAAe,EAAEC,WAAW;MAC5BC;IACF,CAAC,GAAGtB,iBAAiB,CAAC,OAAO;MAAEuB;IAAO,CAAC,KAAK;MAC1C,MAAMjB,UAAU,CAACkB,wBAAwB,CAACD,MAAM,CAAC;MACjD,OAAO;QACLE,KAAK,EAAEnB,UAAU,CAACO,aAAa;QAC/Ba,QAAQ,EAAEpB,UAAU,CAACqB;MACvB,CAAC;IACH,CAAC,CAAC;IAEF5B,SAAS,CAAC,MAAM;MACduB,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}