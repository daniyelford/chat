{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../../assets/logo.png';\nconst _hoisted_1 = {\n  class: \"home\"\n};\nimport { ref } from 'vue';\nimport PhoneLogin from '@/components/home/phoneLogin.vue';\nimport FingerPrintLogin from '@/components/home/FingerPrintLogin.vue';\nimport { sendApi } from '@/utils/api';\nexport default {\n  __name: 'LoginView',\n  setup(__props) {\n    const showFingerPrint = ref(false);\n    async function handleValidPhone(isValid) {\n      if (isValid) {\n        try {\n          const response = await sendApi({\n            action: 'check_mobile_has_finger_print',\n            control: 'login'\n          });\n          if (response && response.status === 'success') {\n            showFingerPrint.value = true;\n          } else {\n            showFingerPrint.value = false;\n          }\n        } catch (error) {\n          console.error('خطا در ارتباط با سرور:', error);\n          showFingerPrint.value = false;\n        }\n      } else {\n        showFingerPrint.value = false;\n      }\n    }\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"img\", {\n        alt: \"Vue logo\",\n        src: _imports_0\n      }, null, -1)), _createVNode(PhoneLogin, {\n        onValidPhone: handleValidPhone\n      }), showFingerPrint.value ? (_openBlock(), _createBlock(FingerPrintLogin, {\n        key: 0\n      })) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","PhoneLogin","FingerPrintLogin","sendApi","showFingerPrint","handleValidPhone","isValid","response","action","control","status","value","error","console"],"sources":["D:/GitHub/ci3-vue3/vue3/src/views/home/LoginView.vue"],"sourcesContent":["<script setup>\r\nimport { ref } from 'vue'\r\nimport PhoneLogin from '@/components/home/phoneLogin.vue'\r\nimport FingerPrintLogin from '@/components/home/FingerPrintLogin.vue'\r\nimport { sendApi } from '@/utils/api'\r\nconst showFingerPrint = ref(false)\r\nasync function handleValidPhone(isValid) {\r\n  if (isValid) {\r\n    try {\r\n      const response = await sendApi({ \r\n        action:'check_mobile_has_finger_print',\r\n        control:'login' \r\n      })\r\n      if (response && response.status === 'success') {\r\n        showFingerPrint.value = true\r\n      } else {\r\n        showFingerPrint.value = false\r\n      }\r\n    } catch (error) {\r\n      console.error('خطا در ارتباط با سرور:', error)\r\n      showFingerPrint.value = false\r\n    }\r\n  } else {\r\n    showFingerPrint.value = false\r\n  }\r\n}\r\n</script>\r\n<template>\r\n    <div class=\"home\">\r\n      <img alt=\"Vue logo\" src=\"../../assets/logo.png\" />\r\n      <PhoneLogin @validPhone=\"handleValidPhone\" />\r\n      <FingerPrintLogin v-if=\"showFingerPrint\" />\r\n  </div>\r\n</template>\r\n<style scoped>\r\n  .home{\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    flex-wrap: nowrap;\r\n    direction: rtl;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    margin-top: 50px;\r\n  }\r\n  @media screen and (max-width:600px){\r\n    .home{\r\n      flex-direction: column;\r\n    }\r\n  }\r\n</style>"],"mappings":";;;;;AACA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,gBAAgB,MAAM,wCAAwC;AACrE,SAASC,OAAO,QAAQ,aAAa;;;;IACrC,MAAMC,eAAe,GAAGJ,GAAG,CAAC,KAAK,CAAC;IAClC,eAAeK,gBAAgBA,CAACC,OAAO,EAAE;MACvC,IAAIA,OAAO,EAAE;QACX,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAAC;YAC7BK,MAAM,EAAC,+BAA+B;YACtCC,OAAO,EAAC;UACV,CAAC,CAAC;UACF,IAAIF,QAAQ,IAAIA,QAAQ,CAACG,MAAM,KAAK,SAAS,EAAE;YAC7CN,eAAe,CAACO,KAAK,GAAG,IAAI;UAC9B,CAAC,MAAM;YACLP,eAAe,CAACO,KAAK,GAAG,KAAK;UAC/B;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9CR,eAAe,CAACO,KAAK,GAAG,KAAK;QAC/B;MACF,CAAC,MAAM;QACLP,eAAe,CAACO,KAAK,GAAG,KAAK;MAC/B;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}