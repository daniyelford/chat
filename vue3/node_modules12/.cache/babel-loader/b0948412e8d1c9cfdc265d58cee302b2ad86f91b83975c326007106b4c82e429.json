{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport StaticMapWithMarkers from '@/components/tooles/places/StaticMapWithMarkers.vue';\nimport { usePlaceStore } from '@/stores/place';\nimport { onMounted, computed } from 'vue';\nexport default {\n  __name: 'PlacesList',\n  setup(__props) {\n    const placeStore = usePlaceStore();\n    onMounted(() => {\n      placeStore.fetchAllPlaces();\n    });\n    const markers = computed(() => placeStore.allPlaces.map(place => ({\n      lat: place.lat,\n      lon: place.lon,\n      title: place.title || '',\n      description: place.description || '',\n      medias: place.media?.map(m => m.url) || []\n    })));\n    const center = computed(() => {\n      const cord = placeStore.userCoordinate;\n      if (cord?.lat && cord?.lon) {\n        return {\n          lat: cord.lat,\n          lon: cord.lon\n        };\n      }\n      return {\n        lat: 35.6892,\n        lon: 51.3890\n      };\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createBlock(StaticMapWithMarkers, {\n        center: center.value,\n        markers: markers.value\n      }, null, 8, [\"center\", \"markers\"]);\n    };\n  }\n};","map":{"version":3,"names":["StaticMapWithMarkers","usePlaceStore","onMounted","computed","placeStore","fetchAllPlaces","markers","allPlaces","map","place","lat","lon","title","description","medias","media","m","url","center","cord","userCoordinate"],"sources":["D:/GitHub/chat/vue3/src/components/dashboard/pagesContent/PlacesList.vue"],"sourcesContent":["<template>\r\n  <StaticMapWithMarkers\r\n    :center=\"center\"\r\n    :markers=\"markers\"\r\n  />\r\n</template>\r\n<script setup>\r\n  import StaticMapWithMarkers from '@/components/tooles/places/StaticMapWithMarkers.vue'\r\n  import { usePlaceStore } from '@/stores/place'\r\n  import { onMounted, computed } from 'vue'\r\n  const placeStore = usePlaceStore()\r\n  onMounted(() => {\r\n    placeStore.fetchAllPlaces()\r\n  })\r\n  const markers = computed(() =>\r\n    placeStore.allPlaces.map(place => ({\r\n      lat: place.lat,\r\n      lon: place.lon,\r\n      title: place.title || '',\r\n      description: place.description || '',\r\n      medias: place.media?.map(m => m.url) || []\r\n    }))\r\n  )\r\n  const center = computed(() => {\r\n    const cord = placeStore.userCoordinate\r\n    if (cord?.lat && cord?.lon) {\r\n      return { lat: cord.lat, lon: cord.lon }\r\n    }\r\n    return { lat: 35.6892, lon: 51.3890 }\r\n  })\r\n</script>"],"mappings":";;;AAOE,OAAOA,oBAAoB,MAAM,qDAAqD;AACtF,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;;;;IACzC,MAAMC,UAAU,GAAGH,aAAa,CAAC,CAAC;IAClCC,SAAS,CAAC,MAAM;MACdE,UAAU,CAACC,cAAc,CAAC,CAAC;IAC7B,CAAC,CAAC;IACF,MAAMC,OAAO,GAAGH,QAAQ,CAAC,MACvBC,UAAU,CAACG,SAAS,CAACC,GAAG,CAACC,KAAK,KAAK;MACjCC,GAAG,EAAED,KAAK,CAACC,GAAG;MACdC,GAAG,EAAEF,KAAK,CAACE,GAAG;MACdC,KAAK,EAAEH,KAAK,CAACG,KAAK,IAAI,EAAE;MACxBC,WAAW,EAAEJ,KAAK,CAACI,WAAW,IAAI,EAAE;MACpCC,MAAM,EAAEL,KAAK,CAACM,KAAK,EAAEP,GAAG,CAACQ,CAAC,IAAIA,CAAC,CAACC,GAAG,CAAC,IAAI;IAC1C,CAAC,CAAC,CACJ,CAAC;IACD,MAAMC,MAAM,GAAGf,QAAQ,CAAC,MAAM;MAC5B,MAAMgB,IAAI,GAAGf,UAAU,CAACgB,cAAc;MACtC,IAAID,IAAI,EAAET,GAAG,IAAIS,IAAI,EAAER,GAAG,EAAE;QAC1B,OAAO;UAAED,GAAG,EAAES,IAAI,CAACT,GAAG;UAAEC,GAAG,EAAEQ,IAAI,CAACR;QAAI,CAAC;MACzC;MACA,OAAO;QAAED,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAQ,CAAC;IACvC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}