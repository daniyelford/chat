{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"city\"\n};\nconst _hoisted_2 = {\n  class: \"city-list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nimport { ref, computed, onMounted } from 'vue';\nimport { useInfiniteScroll } from '@/composables/useInfiniteScroll';\nimport { usePlaceStore } from '@/stores/place';\nexport default {\n  __name: 'PlaceCity',\n  props: {\n    selectedCityId: Number\n  },\n  emits: ['update:selectedCityId'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const emit = __emit;\n    const props = __props;\n    const placeStore = usePlaceStore();\n    const citySearch = ref('');\n    const filteredCities = computed(() => {\n      const q = citySearch.value.trim().toLowerCase();\n      if (!q) return placeStore.allCities;\n      return placeStore.allCities.filter(c => c.city.toLowerCase().includes(q));\n    });\n    const selectCity = id => {\n      emit('update:selectedCityId', id);\n    };\n    const {\n      loadMoreTrigger: loadTrigger,\n      setupObserver\n    } = useInfiniteScroll(async ({\n      offset\n    }) => {\n      await placeStore.fetchCitiesPaginated(offset);\n      return {\n        items: placeStore.allCities,\n        has_more: placeStore.hasMoreCities\n      };\n    });\n    onMounted(() => {\n      setupObserver();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => citySearch.value = $event),\n        placeholder: \"جستجوی شهر...\",\n        class: \"search-box\"\n      }, null, 512), [[_vModelText, citySearch.value]]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n        onClick: _cache[1] || (_cache[1] = $event => selectCity(0)),\n        class: _normalizeClass({\n          active: props.selectedCityId === 0\n        })\n      }, \" همه شهرها \", 2), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredCities.value, city => {\n        return _openBlock(), _createElementBlock(\"button\", {\n          key: city.id,\n          class: _normalizeClass({\n            active: props.selectedCityId === city.id\n          }),\n          onClick: $event => selectCity(city.id)\n        }, _toDisplayString(city.city), 11, _hoisted_3);\n      }), 128)), _createElementVNode(\"div\", {\n        ref_key: \"loadTrigger\",\n        ref: loadTrigger,\n        class: \"load-trigger\",\n        style: {\n          \"margin-top\": \"-10px\"\n        }\n      }, null, 512)])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useInfiniteScroll","usePlaceStore","emit","__emit","props","__props","placeStore","citySearch","filteredCities","q","value","trim","toLowerCase","allCities","filter","c","city","includes","selectCity","id","loadMoreTrigger","loadTrigger","setupObserver","offset","fetchCitiesPaginated","items","has_more","hasMoreCities"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/city/PlaceCity.vue"],"sourcesContent":["<template>\r\n  <div class=\"city\">\r\n    <input\r\n      v-model=\"citySearch\"\r\n      placeholder=\"جستجوی شهر...\"\r\n      class=\"search-box\"\r\n    />\r\n    <div class=\"city-list\">\r\n      <button\r\n        @click=\"selectCity(0)\"\r\n        :class=\"{ active: props.selectedCityId === 0 }\"\r\n      >\r\n        همه شهرها\r\n      </button>\r\n      <button\r\n        v-for=\"city in filteredCities\"\r\n        :key=\"city.id\"\r\n        :class=\"{ active: props.selectedCityId === city.id }\"\r\n        @click=\"selectCity(city.id)\"\r\n      >\r\n        {{ city.city }}\r\n      </button>\r\n      <div ref=\"loadTrigger\" class=\"load-trigger\" style=\"margin-top: -10px;\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, defineProps, defineEmits } from 'vue'\r\nimport { useInfiniteScroll } from '@/composables/useInfiniteScroll'\r\nimport { usePlaceStore } from '@/stores/place'\r\n\r\nconst emit = defineEmits(['update:selectedCityId'])\r\nconst props = defineProps({ selectedCityId: Number })\r\n\r\nconst placeStore = usePlaceStore()\r\nconst citySearch = ref('')\r\n\r\nconst filteredCities = computed(() => {\r\n  const q = citySearch.value.trim().toLowerCase()\r\n  if (!q) return placeStore.allCities\r\n  return placeStore.allCities.filter(c =>\r\n    c.city.toLowerCase().includes(q)\r\n  )\r\n})\r\n\r\nconst selectCity = (id) => {\r\n  emit('update:selectedCityId', id)\r\n}\r\n\r\nconst { loadMoreTrigger: loadTrigger, setupObserver } = useInfiniteScroll(async ({ offset }) => {\r\n  await placeStore.fetchCitiesPaginated(offset)\r\n  return {\r\n    items: placeStore.allCities,\r\n    has_more: placeStore.hasMoreCities,\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  setupObserver()\r\n})\r\n</script>\r\n<style scoped>\r\n.city {\r\n  height: calc(50% - 10px);\r\n  margin-top: 10px;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  background: #80808045;\r\n  box-shadow: 0 0 5px #290707;\r\n}\r\n.search-box {\r\n  height: 55px;\r\n  width: 100%;\r\n  margin: 5px auto;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  border: 0;\r\n  background: #e5dede7a;\r\n  box-shadow: 0 0 5px;\r\n  direction: rtl;\r\n}\r\n.city-list {\r\n  height: calc(100% - 80px);\r\n  width: 100%;\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: stretch;\r\n  justify-content: flex-start;\r\n  gap: 2px;\r\n  margin-top: 8px;\r\n}\r\n.city-list button {\r\n  color: white;\r\n  background: #4a6b7540;\r\n  height: 50px;\r\n  padding: 8px;\r\n  border: none;\r\n  outline: none;\r\n  margin-bottom: 5px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 5px green;\r\n}\r\n.city-list button.active {\r\n  background-color: darkgreen;\r\n}\r\n</style>"],"mappings":";;;;;;;;;;AA4BA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAmC,QAAQ,KAAK;AACxE,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,aAAa,QAAQ,gBAAgB;;;;;;;;;;IAE9C,MAAMC,IAAI,GAAGC,MAAsC;IACnD,MAAMC,KAAK,GAAGC,OAAuC;IAErD,MAAMC,UAAU,GAAGL,aAAa,CAAC,CAAC;IAClC,MAAMM,UAAU,GAAGV,GAAG,CAAC,EAAE,CAAC;IAE1B,MAAMW,cAAc,GAAGV,QAAQ,CAAC,MAAM;MACpC,MAAMW,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC/C,IAAI,CAACH,CAAC,EAAE,OAAOH,UAAU,CAACO,SAAS;MACnC,OAAOP,UAAU,CAACO,SAAS,CAACC,MAAM,CAACC,CAAC,IAClCA,CAAC,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACR,CAAC,CACjC,CAAC;IACH,CAAC,CAAC;IAEF,MAAMS,UAAU,GAAIC,EAAE,IAAK;MACzBjB,IAAI,CAAC,uBAAuB,EAAEiB,EAAE,CAAC;IACnC,CAAC;IAED,MAAM;MAAEC,eAAe,EAAEC,WAAW;MAAEC;IAAc,CAAC,GAAGtB,iBAAiB,CAAC,OAAO;MAAEuB;IAAO,CAAC,KAAK;MAC9F,MAAMjB,UAAU,CAACkB,oBAAoB,CAACD,MAAM,CAAC;MAC7C,OAAO;QACLE,KAAK,EAAEnB,UAAU,CAACO,SAAS;QAC3Ba,QAAQ,EAAEpB,UAAU,CAACqB;MACvB,CAAC;IACH,CAAC,CAAC;IAEF5B,SAAS,CAAC,MAAM;MACduB,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}