{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notification-list\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"date\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nimport { ref, onMounted } from 'vue';\nimport moment from 'moment-jalaali';\nexport default {\n  __name: 'NotificationList',\n  props: {\n    notifications: {\n      type: Array,\n      required: true\n    },\n    canLoadMore: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update', 'loadMoreTriggerReady'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const props = __props;\n    const emit = __emit;\n    const loadMoreDiv = ref(null);\n    onMounted(() => {\n      if (loadMoreDiv.value) {\n        emit('loadMoreTriggerReady', loadMoreDiv.value);\n      }\n    });\n    function formatDate(date) {\n      if (!date) return '-';\n      return moment(date).format('jYYYY/jMM/jDD HH:mm');\n    }\n    return (_ctx, _cache) => {\n      const _component_RouterLink = _resolveComponent(\"RouterLink\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", {\n        class: \"title\"\n      }, \"نوتیفیکیشن‌ها\", -1)), _withDirectives(_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.notifications, notif => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: notif.id,\n          class: _normalizeClass({\n            unread: notif.is_read === 'dont'\n          }),\n          onClick: $event => _ctx.$emit('update', notif.id)\n        }, [notif.url ? (_openBlock(), _createBlock(_component_RouterLink, {\n          key: 0,\n          to: {\n            path: notif.url\n          }\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"strong\", null, _toDisplayString(notif.title), 1), _createElementVNode(\"p\", null, _toDisplayString(notif.body), 1), _createElementVNode(\"small\", null, _toDisplayString(formatDate(notif.created_at)), 1)]),\n          _: 2\n        }, 1032, [\"to\"])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, [_createElementVNode(\"strong\", null, _toDisplayString(notif.title), 1), _createElementVNode(\"p\", null, _toDisplayString(notif.body), 1), _createElementVNode(\"small\", _hoisted_4, _toDisplayString(formatDate(notif.created_at)), 1)]))], 10, _hoisted_2);\n      }), 128))], 512), [[_vShow, props.notifications.length]]), props.notifications.length == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" نوتیفیکیشنی وجود ندارد. \")) : _createCommentVNode(\"\", true), __props.canLoadMore ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 1,\n        ref_key: \"loadMoreDiv\",\n        ref: loadMoreDiv,\n        class: \"scroll-trigger\"\n      }, null, 512)) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","moment","props","__props","emit","__emit","loadMoreDiv","value","formatDate","date","format"],"sources":["D:/GitHub/chat/vue3/src/components/tooles/nav/NotificationList.vue"],"sourcesContent":["<template>\r\n  <div class=\"notification-list\">\r\n    <h3 class=\"title\">نوتیفیکیشن‌ها</h3>\r\n    <ul v-show=\"props.notifications.length\">\r\n      <li\r\n        v-for=\"notif in props.notifications\"\r\n        :key=\"notif.id\"\r\n        :class=\"{ unread: notif.is_read === 'dont' }\"\r\n        @click=\"$emit('update', notif.id)\"\r\n      >\r\n        <RouterLink v-if=\"notif.url\" :to=\"{ path: notif.url }\">\r\n          <strong>{{ notif.title }}</strong>\r\n          <p>{{ notif.body }}</p>\r\n          <small>{{ formatDate(notif.created_at) }}</small>\r\n        </RouterLink>\r\n        <span v-else>\r\n          <strong>{{ notif.title }}</strong>\r\n          <p>{{ notif.body }}</p>\r\n          <small class=\"date\">{{ formatDate(notif.created_at) }}</small>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <div v-if=\"props.notifications.length==0\">\r\n      نوتیفیکیشنی وجود ندارد.\r\n    </div>\r\n    <div v-if=\"canLoadMore\" ref=\"loadMoreDiv\" class=\"scroll-trigger\">\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\n  import { ref, onMounted, defineProps, defineEmits } from 'vue'\r\n  import moment from 'moment-jalaali'\r\n  const props = defineProps({\r\n    notifications: { type: Array, required: true },\r\n    canLoadMore: { type: Boolean, default: false }\r\n  })\r\n  const emit = defineEmits(['update', 'loadMoreTriggerReady'])\r\n  const loadMoreDiv = ref(null)\r\n  onMounted(() => {\r\n    if (loadMoreDiv.value) {\r\n      emit('loadMoreTriggerReady', loadMoreDiv.value)\r\n    }\r\n  })\r\n  function formatDate(date) {\r\n    if (!date) return '-'\r\n    return moment(date).format('jYYYY/jMM/jDD HH:mm')\r\n  }\r\n</script>\r\n<style scoped>\r\n  .notification-list {\r\n    padding: 1rem;\r\n  }\r\n  .notification-list ul {\r\n    padding: 0;\r\n    margin: 0;\r\n    max-height: 350px;\r\n    overflow-y: auto;\r\n    list-style: none;\r\n  }\r\n  .notification-list li {\r\n    margin-bottom: 5px;\r\n    background-color: #edfcfa;\r\n    border-bottom: 1px solid #ddd;\r\n    cursor: pointer;\r\n    transition: background 0.3s;\r\n    border-radius: 10px;\r\n  }\r\n  .notification-list li.unread {\r\n    font-weight: bold;\r\n    background-color: #c4f511;\r\n  }\r\n  .notification-list li:hover {\r\n    background-color: #eef;\r\n  }\r\n  a{\r\n    color: #2f285a;\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    flex-wrap: nowrap;\r\n    gap: 15px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n  }\r\n</style>"],"mappings":";;;;;;;;;;;;;;AA8BE,SAASA,GAAG,EAAEC,SAAmC,QAAQ,KAAK;AAC9D,OAAOC,MAAM,MAAM,gBAAgB;;;;;;;;;;;;;;;;;IACnC,MAAMC,KAAK,GAAGC,OAGZ;IACF,MAAMC,IAAI,GAAGC,MAA+C;IAC5D,MAAMC,WAAW,GAAGP,GAAG,CAAC,IAAI,CAAC;IAC7BC,SAAS,CAAC,MAAM;MACd,IAAIM,WAAW,CAACC,KAAK,EAAE;QACrBH,IAAI,CAAC,sBAAsB,EAAEE,WAAW,CAACC,KAAK,CAAC;MACjD;IACF,CAAC,CAAC;IACF,SAASC,UAAUA,CAACC,IAAI,EAAE;MACxB,IAAI,CAACA,IAAI,EAAE,OAAO,GAAG;MACrB,OAAOR,MAAM,CAACQ,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB,CAAC;IACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}