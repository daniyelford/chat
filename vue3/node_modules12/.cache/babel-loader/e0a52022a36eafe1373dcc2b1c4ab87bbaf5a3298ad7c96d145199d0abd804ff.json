{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { createVNode as _createVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"add-place-container\"\n};\nconst _hoisted_2 = [\"disabled\"];\nimport { ref, computed, onMounted, watch } from 'vue';\nimport UploaderManyMedia from '@/components/tooles/upload/UploaderManyMedia.vue';\nimport AddressSelector from '@/components/tooles/news/AddressSelector .vue';\nimport Multiselect from 'vue-multiselect';\nimport { usePlaceStore } from '@/stores/place';\nexport default {\n  __name: 'AddPlaceForm',\n  props: {\n    editPlace: Object\n  },\n  emits: ['done'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const uploaderRef = ref(null);\n    const address = ref('');\n    const userCoordinate = ref(null);\n    const isAddressLoading = ref(false);\n    const placeStore = usePlaceStore();\n    const emit = __emit;\n    const initialMedias = ref([]);\n    const props = __props;\n    const form = ref({\n      title: '',\n      description: '',\n      category_id: [],\n      media_id: [],\n      user_address: {\n        type: 'location',\n        value: ''\n      }\n    });\n    const resetForm = () => {\n      form.value = {\n        title: '',\n        description: '',\n        media_id: [],\n        user_address: {\n          type: 'location',\n          value: ''\n        },\n        category_id: []\n      };\n      initialMedias.value = [];\n      uploaderRef.value?.reset();\n    };\n    const handleUploadResult = uploaded => {\n      form.value.media_id = uploaded.map(i => i.id);\n    };\n    const isSubmitDisabled = computed(() => {\n      const f = form.value;\n      return !f.title || !f.description || !f.user_address?.value?.lat || isAddressLoading.value || uploaderRef.value?.uploading;\n    });\n    const submitPlace = async () => {\n      const res = await placeStore.submitPlace({\n        ...form.value,\n        edit: props.editPlace?.id || null\n      }, props.editPlace?.id || null);\n      if (res.status === 'success') {\n        emit('done');\n        resetForm();\n      } else {\n        alert(res.message || 'خطا در ثبت مکان');\n      }\n    };\n    onMounted(async () => {\n      // if (props.editPlace) {\n      //     const p = props.editPlace\n      //     form.value.title = p.title || ''\n      //     form.value.description = p.description || ''\n      //     form.value.media_id = p.medias?.map(m => m.id) || []\n      //     initialMedias.value = p.medias || []\n      //     form.value.category_id = p.categories ?? []\n      //     form.value.user_address = {\n      //         type: 'location',\n      //         value: {\n      //             address: p.addresses?.[0]?.address || '',\n      //             lat: p.addresses?.[0]?.lat,\n      //             lon: p.addresses?.[0]?.lon,\n      //             city: p.addresses?.[0]?.city || '',\n      //             address_id: p.addresses?.[0]?.id || ''\n      //         }\n      //     }\n      // }\n      await placeStore.fetchCategories('');\n      address.value = placeStore.userCity || '';\n      userCoordinate.value = placeStore.userCoordinate;\n    });\n    watch(props.editPlace, newVal => {\n      console.log(newVal);\n      if (newVal) {\n        const p = newVal;\n        form.value.title = p.title || '';\n        form.value.description = p.description || '';\n        form.value.media_id = p.medias?.map(m => m.id) || [];\n        initialMedias.value = p.medias || [];\n        form.value.category_id = p.categories?.map(c => c.id) || [];\n        form.value.user_address = {\n          type: 'location',\n          value: {\n            address: p.addresses?.[0]?.address || '',\n            lat: p.addresses?.[0]?.lat,\n            lon: p.addresses?.[0]?.lon,\n            city: p.addresses?.[0]?.city || '',\n            address_id: p.addresses?.[0]?.id || ''\n          }\n        };\n      } else {\n        resetForm();\n      }\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(UploaderManyMedia, {\n        toAction: 'addPlace',\n        HasStylePlace: true,\n        modelValue: form.value.media_id,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => form.value.media_id = $event),\n        \"initial-medias\": initialMedias.value,\n        ref_key: \"uploaderRef\",\n        ref: uploaderRef,\n        onDone: handleUploadResult,\n        url: 'place_media/'\n      }, null, 8, [\"modelValue\", \"initial-medias\"]), _createElementVNode(\"form\", {\n        onSubmit: _withModifiers(submitPlace, [\"prevent\"])\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => form.value.title = $event),\n        placeholder: \"عنوان مکان\",\n        required: \"\"\n      }, null, 512), [[_vModelText, form.value.title]]), _createVNode(_unref(Multiselect), {\n        modelValue: form.value.category_id,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => form.value.category_id = $event),\n        options: _unref(placeStore).categories,\n        searchable: true,\n        loading: _unref(placeStore).categoryLoading,\n        \"internal-search\": false,\n        \"clear-on-select\": false,\n        onSearchChange: _cache[3] || (_cache[3] = q => _unref(placeStore).fetchCategories(q)),\n        multiple: true,\n        \"track-by\": \"id\",\n        label: \"title\",\n        placeholder: \"انتخاب دسته‌بندی‌ها\",\n        selectLabel: \"برای انتخاب کلیک کنید\",\n        deselectLabel: \"برای حذف کلیک کنید\"\n      }, null, 8, [\"modelValue\", \"options\", \"loading\"]), _withDirectives(_createElementVNode(\"textarea\", {\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => form.value.description = $event),\n        placeholder: \"توضیحات\"\n      }, null, 512), [[_vModelText, form.value.description]]), _createVNode(AddressSelector, {\n        loginCity: address.value,\n        userCoordinate: userCoordinate.value,\n        \"model-value\": form.value.user_address,\n        onUpdate: _cache[5] || (_cache[5] = val => form.value.user_address = val),\n        onLoading: _cache[6] || (_cache[6] = $event => isAddressLoading.value = $event)\n      }, null, 8, [\"loginCity\", \"userCoordinate\", \"model-value\"]), _createElementVNode(\"button\", {\n        class: \"save\",\n        type: \"submit\",\n        disabled: isSubmitDisabled.value\n      }, _toDisplayString(props.editPlace ? 'ذخیره تغییرات' : 'ثبت مکان'), 9, _hoisted_2)], 32)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","UploaderManyMedia","AddressSelector","Multiselect","usePlaceStore","uploaderRef","address","userCoordinate","isAddressLoading","placeStore","emit","__emit","initialMedias","props","__props","form","title","description","category_id","media_id","user_address","type","value","resetForm","reset","handleUploadResult","uploaded","map","i","id","isSubmitDisabled","f","lat","uploading","submitPlace","res","edit","editPlace","status","alert","message","fetchCategories","userCity","newVal","console","log","p","medias","m","categories","c","addresses","lon","city","address_id"],"sources":["D:/GitHub/chat/vue3/src/components/dashboard/pagesContent/AddPlaceForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"add-place-container\">\r\n        <UploaderManyMedia\r\n            :toAction=\"'addPlace'\"\r\n            :HasStylePlace=\"true\"\r\n            v-model=\"form.media_id\"\r\n            :initial-medias=\"initialMedias\"\r\n            ref=\"uploaderRef\"\r\n            @done=\"handleUploadResult\"\r\n            :url=\"'place_media/'\"\r\n        />\r\n        <form @submit.prevent=\"submitPlace\">\r\n            <input v-model=\"form.title\" placeholder=\"عنوان مکان\" required />\r\n            <Multiselect\r\n                v-model=\"form.category_id\"\r\n                :options=\"placeStore.categories\"\r\n                :searchable=\"true\"\r\n                :loading=\"placeStore.categoryLoading\"\r\n                :internal-search=\"false\"\r\n                :clear-on-select=\"false\"\r\n                @search-change=\"q => placeStore.fetchCategories(q)\"\r\n                :multiple=\"true\"\r\n                track-by=\"id\"\r\n                label=\"title\"\r\n                placeholder=\"انتخاب دسته‌بندی‌ها\"\r\n                selectLabel=\"برای انتخاب کلیک کنید\"\r\n                deselectLabel=\"برای حذف کلیک کنید\"\r\n            />\r\n            <textarea v-model=\"form.description\" placeholder=\"توضیحات\" />\r\n            <!-- :model-value=\"form.user_address\" -->\r\n            <AddressSelector\r\n                :loginCity=\"address\"\r\n                :userCoordinate=\"userCoordinate\"\r\n                :model-value=\"form.user_address\"\r\n                @update=\"val => form.user_address = val\"\r\n                @loading=\"isAddressLoading = $event\"\r\n            />\r\n            <button class=\"save\" type=\"submit\" :disabled=\"isSubmitDisabled\">\r\n                {{ props.editPlace ? 'ذخیره تغییرات' : 'ثبت مکان' }}\r\n            </button>\r\n        </form>\r\n    </div>\r\n</template>\r\n<script setup>\r\n    import { ref, computed, onMounted, defineProps, defineEmits, watch } from 'vue'\r\n    import UploaderManyMedia from '@/components/tooles/upload/UploaderManyMedia.vue'\r\n    import AddressSelector from '@/components/tooles/news/AddressSelector .vue'\r\n    import Multiselect from 'vue-multiselect'\r\n    import { usePlaceStore } from '@/stores/place'\r\n    const uploaderRef = ref(null)\r\n    const address = ref('')\r\n    const userCoordinate = ref(null)\r\n    const isAddressLoading = ref(false)\r\n    const placeStore = usePlaceStore()\r\n    const emit = defineEmits(['done'])\r\n    const initialMedias = ref([])\r\n    const props = defineProps({\r\n        editPlace: Object\r\n    })\r\n    const form = ref({\r\n        title: '',\r\n        description: '',\r\n        category_id: [],\r\n        media_id: [],\r\n        user_address: { type: 'location', value: '' }\r\n    })\r\n    const resetForm = () => {\r\n        form.value = {\r\n            title: '',\r\n            description: '',\r\n            media_id: [],\r\n            user_address: { type: 'location', value: '' },\r\n            category_id: []\r\n        }\r\n        initialMedias.value = []\r\n        uploaderRef.value?.reset()\r\n    }\r\n    const handleUploadResult = (uploaded) => {\r\n        form.value.media_id = uploaded.map(i => i.id)\r\n    }\r\n    const isSubmitDisabled = computed(() => {\r\n        const f = form.value\r\n        return !f.title || !f.description || !f.user_address?.value?.lat || isAddressLoading.value || uploaderRef.value?.uploading\r\n    })\r\n    const submitPlace = async () => {\r\n        const res = await placeStore.submitPlace({\r\n            ...form.value,\r\n            edit: props.editPlace?.id || null\r\n        },\r\n        props.editPlace?.id || null)\r\n        if (res.status === 'success') {\r\n            emit('done')\r\n            resetForm()\r\n        } else {\r\n            alert(res.message || 'خطا در ثبت مکان')\r\n        }\r\n    }\r\n    onMounted( async () => {\r\n        // if (props.editPlace) {\r\n        //     const p = props.editPlace\r\n        //     form.value.title = p.title || ''\r\n        //     form.value.description = p.description || ''\r\n        //     form.value.media_id = p.medias?.map(m => m.id) || []\r\n        //     initialMedias.value = p.medias || []\r\n        //     form.value.category_id = p.categories ?? []\r\n        //     form.value.user_address = {\r\n        //         type: 'location',\r\n        //         value: {\r\n        //             address: p.addresses?.[0]?.address || '',\r\n        //             lat: p.addresses?.[0]?.lat,\r\n        //             lon: p.addresses?.[0]?.lon,\r\n        //             city: p.addresses?.[0]?.city || '',\r\n        //             address_id: p.addresses?.[0]?.id || ''\r\n        //         }\r\n        //     }\r\n        // }\r\n        await placeStore.fetchCategories('')\r\n        address.value = placeStore.userCity || ''\r\n        userCoordinate.value = placeStore.userCoordinate\r\n    })\r\n    watch(props.editPlace, (newVal) => {\r\n        console.log(newVal);\r\n        if (newVal) {\r\n            const p = newVal\r\n            form.value.title = p.title || ''\r\n            form.value.description = p.description || ''\r\n            form.value.media_id = p.medias?.map(m => m.id) || []\r\n            initialMedias.value = p.medias || []\r\n            form.value.category_id = p.categories?.map(c => c.id) || []\r\n            form.value.user_address = {\r\n                type: 'location',\r\n                value: {\r\n                    address: p.addresses?.[0]?.address || '',\r\n                    lat: p.addresses?.[0]?.lat,\r\n                    lon: p.addresses?.[0]?.lon,\r\n                    city: p.addresses?.[0]?.city || '',\r\n                    address_id: p.addresses?.[0]?.id || ''\r\n                }\r\n            }\r\n        } else {\r\n            resetForm()\r\n        }\r\n    })\r\n</script>\r\n<style scoped>\r\n    .add-place-container {\r\n        max-height: 500px;\r\n        overflow: auto;\r\n    }\r\n    input{\r\n        width: 100%;\r\n        display: block;\r\n        box-sizing: border-box;\r\n        height: 37px;\r\n        border: none;\r\n        direction: rtl;\r\n        margin: 10px 0;\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 5px grey;\r\n        padding: 0 5px;\r\n        outline: none;\r\n    }\r\n    textarea {\r\n        margin: 10px 0;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        height: 60px;\r\n        border: none;\r\n        outline: none;\r\n        direction: rtl;\r\n        padding: 5px;\r\n        box-shadow: 0 0 5px grey;\r\n        border-radius: 5px;\r\n    }\r\n    .save {\r\n        width: 100%;\r\n        text-align: center;\r\n        border: none;\r\n        outline: none;\r\n        border-radius: 5px;\r\n        height: 40px;\r\n        background: green;\r\n        color: white;\r\n    }\r\n    .save:disabled{\r\n        color: rgb(92, 90, 90);\r\n        background: rgb(187, 182, 182);\r\n    }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}