{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport LoginView from '@/views/home/LoginView.vue';\nimport RegisterView from '@/views/home/RegisterView.vue';\nimport MainDashboard from '@/views/dashboard/MainDashboard.vue';\n// import { sendApi } from '@/utils/api';\nimport { useMenuStore } from '@/stores/menu';\nimport { useNotificationStore } from '@/stores/notification';\n// import { BASE_URL } from '@/config';\n// const icon=BASE_URL+'/assets/images/fav.png'\nconst routes = [{\n  path: '/',\n  name: 'login',\n  component: LoginView,\n  meta: {\n    onlyAuth: true\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: RegisterView,\n  meta: {\n    checkHasMobileId: true,\n    onlyAuth: true\n  }\n}, {\n  path: '/dashboard',\n  name: 'dashboard',\n  component: MainDashboard,\n  meta: {\n    requiresAuth: true\n  },\n  props: {\n    view: 'dashboard'\n  }\n}, {\n  path: '/places',\n  name: 'places',\n  component: MainDashboard,\n  meta: {\n    requiresAuth: true\n  },\n  props: {\n    view: 'places'\n  }\n}, {\n  path: '/report-list',\n  name: 'report-list',\n  component: MainDashboard,\n  meta: {\n    requiresAuth: true\n  },\n  props: {\n    view: 'report-list'\n  }\n}, {\n  path: '/manage-news',\n  name: 'manage-news',\n  component: MainDashboard,\n  meta: {\n    requiresAuth: true\n  },\n  props: {\n    view: 'manage-news'\n  }\n}, {\n  path: '/user-setting',\n  name: 'user-setting',\n  component: MainDashboard,\n  meta: {\n    requiresAuth: true\n  },\n  props: {\n    view: 'user-setting'\n  }\n}, {\n  path: '/cartable',\n  name: 'cartable',\n  component: MainDashboard,\n  props: {\n    view: 'cartable'\n  },\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/show-cartable/:id',\n  name: 'show-cartable',\n  component: MainDashboard,\n  props: route => ({\n    view: 'show-cartable',\n    id: route.params.id\n  }),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/show-news/:id',\n  name: 'show-news',\n  component: MainDashboard,\n  props: route => ({\n    view: 'show-news',\n    id: route.params.id\n  }),\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// router.beforeEach(async (to, from, next) => {\n//   if (to.name) {\n//     document.title = to.name;\n//   }\n//   const link = document.querySelector(\"link[rel~='icon']\") || document.createElement('link');\n//   link.href = icon;\n//   try {\n//     const meta = to.meta;\n//     if (meta.requiresAuth) {\n//       const res = await sendApi({ \n//         action: 'check_auth' ,\n//         control:'security'\n//        });\n//       if (res.status !== 'success') return next('/');\n//     }\n//     if (meta.checkHasMobileId) {\n//       const res = await sendApi({ \n//         action: 'check_has_mobile',\n//         control:'security'\n//       });\n//       if (res.status !== 'success') return next('/');\n//     }\n//     if (meta.onlyAuth) {\n//       const res = await sendApi({ \n//         action: 'check_auth',\n//         control:'security'\n//       });\n//       if (res.status === 'success') return next('/dashboard');\n//     }\n//     next();\n//   } catch (e) {\n//     console.error('Router Guard Error:', e);\n//     next('/');\n//   }\n// });\nrouter.afterEach(() => {\n  const menuStore = useMenuStore();\n  menuStore.close();\n  const notificationStore = useNotificationStore();\n  notificationStore.close();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginView","RegisterView","MainDashboard","useMenuStore","useNotificationStore","routes","path","name","component","meta","onlyAuth","checkHasMobileId","requiresAuth","props","view","route","id","params","router","history","process","env","BASE_URL","afterEach","menuStore","close","notificationStore"],"sources":["D:/GitHub/chat/vue3/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport LoginView from '@/views/home/LoginView.vue';\r\nimport RegisterView from '@/views/home/RegisterView.vue';\r\nimport MainDashboard from '@/views/dashboard/MainDashboard.vue';\r\n// import { sendApi } from '@/utils/api';\r\nimport { useMenuStore } from '@/stores/menu'\r\nimport { useNotificationStore } from '@/stores/notification'\r\n// import { BASE_URL } from '@/config';\r\n// const icon=BASE_URL+'/assets/images/fav.png'\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'login',\r\n    component: LoginView,\r\n    meta:{onlyAuth:true}\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'register',\r\n    component: RegisterView,\r\n    meta:{checkHasMobileId:true,onlyAuth:true}\r\n  },\r\n  {\r\n    path: '/dashboard',\r\n    name: 'dashboard',\r\n    component: MainDashboard,\r\n    meta: { requiresAuth: true },\r\n    props: { view: 'dashboard' } \r\n  },\r\n  {\r\n    path: '/places',\r\n    name: 'places',\r\n    component: MainDashboard,\r\n    meta: { requiresAuth: true },\r\n    props: { view: 'places' } \r\n  },\r\n  {\r\n    path: '/report-list',\r\n    name: 'report-list',\r\n    component: MainDashboard,\r\n    meta: { requiresAuth: true },\r\n    props: { view: 'report-list' } \r\n  },\r\n  {\r\n    path: '/manage-news',\r\n    name: 'manage-news',\r\n    component: MainDashboard,\r\n    meta: { requiresAuth: true },\r\n    props: { view: 'manage-news' } \r\n  },\r\n  {\r\n    path: '/user-setting',\r\n    name: 'user-setting',\r\n    component: MainDashboard,\r\n    meta: { requiresAuth: true },\r\n    props: { view: 'user-setting' } \r\n  },\r\n  {\r\n    path: '/cartable',\r\n    name: 'cartable',\r\n    component: MainDashboard,\r\n    props: { view: 'cartable' },\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/show-cartable/:id',\r\n    name: 'show-cartable',\r\n    component: MainDashboard,\r\n    props: route => ({ view: 'show-cartable', id: route.params.id }),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/show-news/:id',\r\n    name: 'show-news',\r\n    component: MainDashboard,\r\n    props: route => ({ view: 'show-news', id: route.params.id }),\r\n    meta: { requiresAuth: true }\r\n  },\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\n// router.beforeEach(async (to, from, next) => {\r\n//   if (to.name) {\r\n//     document.title = to.name;\r\n//   }\r\n//   const link = document.querySelector(\"link[rel~='icon']\") || document.createElement('link');\r\n//   link.href = icon;\r\n//   try {\r\n//     const meta = to.meta;\r\n//     if (meta.requiresAuth) {\r\n//       const res = await sendApi({ \r\n//         action: 'check_auth' ,\r\n//         control:'security'\r\n//        });\r\n//       if (res.status !== 'success') return next('/');\r\n//     }\r\n//     if (meta.checkHasMobileId) {\r\n//       const res = await sendApi({ \r\n//         action: 'check_has_mobile',\r\n//         control:'security'\r\n//       });\r\n//       if (res.status !== 'success') return next('/');\r\n//     }\r\n//     if (meta.onlyAuth) {\r\n//       const res = await sendApi({ \r\n//         action: 'check_auth',\r\n//         control:'security'\r\n//       });\r\n//       if (res.status === 'success') return next('/dashboard');\r\n//     }\r\n//     next();\r\n//   } catch (e) {\r\n//     console.error('Router Guard Error:', e);\r\n//     next('/');\r\n//   }\r\n// });\r\nrouter.afterEach(() => {\r\n  const menuStore = useMenuStore()\r\n  menuStore.close()\r\n  const notificationStore=useNotificationStore()\r\n  notificationStore.close()\r\n})\r\nexport default router\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}