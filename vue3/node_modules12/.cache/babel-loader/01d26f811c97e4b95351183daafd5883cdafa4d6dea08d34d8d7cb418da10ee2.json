{"ast":null,"code":"import { createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, unref as _unref, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"nav-top\"\n};\nconst _hoisted_2 = {\n  key: 8\n};\nconst _hoisted_3 = {\n  class: \"menu-content\"\n};\nconst _hoisted_4 = {\n  key: 8\n};\nimport TopNav from '@/components/dashboard/menus/TopNav.vue';\nimport ExteraMenu from '@/components/dashboard/menus/ExteraMenu.vue';\nimport PlacesList from '@/components/dashboard/pagesContent/PlacesList.vue';\nimport AllCartables from '@/components/dashboard/pagesContent/AllCartables.vue';\nimport NewsCards from '@/components/dashboard/pagesContent/NewsCards.vue';\nimport ManageNews from '@/components/dashboard/pagesContent/ManageNews.vue';\nimport ReportList from '@/components/dashboard/pagesContent/ReportList.vue';\nimport ShowCartable from '@/components/dashboard/pagesContent/ShowCartable.vue';\nimport ShowNews from '@/components/dashboard/pagesContent/ShowNews.vue';\nimport UserSetting from '@/components/dashboard/pagesContent/UserSetting.vue';\nimport { ref, computed, onMounted } from 'vue';\nimport { useMenuStore } from '@/stores/menu';\nimport { BASE_URL } from '@/config';\nimport { useUserStore } from '@/stores/user';\nimport TouchPage from '@/components/tooles/touch/TouchPage.vue';\nexport default {\n  __name: 'MainDashboard',\n  props: {\n    view: String,\n    id: [String, Number]\n  },\n  setup(__props) {\n    const menu = useMenuStore();\n    const backgroundImage = ref(BASE_URL + '/assets/images/content.jpg');\n    const props = __props;\n    const contentStyle = computed(() => ({\n      backgroundImage: `url(${backgroundImage.value})`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    }));\n    const user = useUserStore();\n    onMounted(async () => {\n      await user.fetchUserInfo();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(TopNav)]), _createElementVNode(\"div\", {\n        class: \"content\",\n        style: _normalizeStyle(contentStyle.value)\n      }, [props.view === 'dashboard' ? (_openBlock(), _createBlock(TouchPage, {\n        key: 0,\n        gestures: {\n          left: 'report-list',\n          right: 'user-setting'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(NewsCards)]),\n        _: 1\n      })) : props.view === 'report-list' ? (_openBlock(), _createBlock(TouchPage, {\n        key: 1,\n        gestures: {\n          left: 'places',\n          right: 'dashboard'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(ReportList)]),\n        _: 1\n      })) : props.view === 'places' ? (_openBlock(), _createBlock(TouchPage, {\n        key: 2,\n        gestures: {\n          left: 'manage-news',\n          right: 'report-list'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(PlacesList)]),\n        _: 1\n      })) : props.view === 'manage-news' ? (_openBlock(), _createBlock(TouchPage, {\n        key: 3,\n        gestures: {\n          left: _unref(user).rule ? 'cartable' : 'user-setting',\n          right: 'places'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(ManageNews)]),\n        _: 1\n      }, 8, [\"gestures\"])) : props.view === 'user-setting' ? (_openBlock(), _createBlock(TouchPage, {\n        key: 4,\n        gestures: {\n          left: 'dashboard',\n          right: 'manage-news'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(UserSetting)]),\n        _: 1\n      })) : props.view === 'cartable' ? (_openBlock(), _createBlock(TouchPage, {\n        key: 5,\n        gestures: {\n          left: 'manage-news',\n          right: 'user-setting'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(AllCartables)]),\n        _: 1\n      })) : props.view === 'show-cartable' ? (_openBlock(), _createBlock(TouchPage, {\n        key: 6,\n        gestures: {\n          left: 'cartable',\n          right: 'user-setting'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(ShowCartable, {\n          id: props.id\n        }, null, 8, [\"id\"])]),\n        _: 1\n      })) : props.view === 'show-news' ? (_openBlock(), _createBlock(TouchPage, {\n        key: 7,\n        gestures: {\n          left: 'manage-news',\n          right: _unref(user).rule ? 'cartable' : 'user-setting'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(ShowNews, {\n          id: props.id\n        }, null, 8, [\"id\"])]),\n        _: 1\n      }, 8, [\"gestures\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"نمایش مشخصی یافت نشد\"))], 4), _unref(menu).isOpen ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: \"menu-modal\",\n        onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => _unref(menu).close && _unref(menu).close(...args), [\"self\"]))\n      }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n        class: \"close-btn\",\n        onClick: _cache[0] || (_cache[0] = (...args) => _unref(menu).close && _unref(menu).close(...args))\n      }, \"×\"), props.view === 'dashboard' ? (_openBlock(), _createBlock(ExteraMenu, {\n        key: 0,\n        cartable: true,\n        wallet: true,\n        list: true,\n        places: true,\n        manage: true,\n        setting: true\n      })) : props.view === 'places' ? (_openBlock(), _createBlock(ExteraMenu, {\n        key: 1,\n        cartable: true,\n        wallet: true,\n        list: true,\n        places: false,\n        manage: true,\n        setting: true\n      })) : props.view === 'report-list' ? (_openBlock(), _createBlock(ExteraMenu, {\n        key: 2,\n        cartable: true,\n        wallet: true,\n        list: false,\n        places: true,\n        manage: true,\n        setting: true\n      })) : props.view === 'manage-news' ? (_openBlock(), _createBlock(ExteraMenu, {\n        key: 3,\n        cartable: true,\n        wallet: true,\n        list: true,\n        places: true,\n        manage: false,\n        setting: true\n      })) : props.view === 'show-news' ? (_openBlock(), _createBlock(ExteraMenu, {\n        key: 4,\n        cartable: true,\n        wallet: true,\n        list: true,\n        places: true,\n        manage: false,\n        setting: true\n      })) : props.view === 'user-setting' ? (_openBlock(), _createBlock(ExteraMenu, {\n        key: 5,\n        cartable: true,\n        wallet: true,\n        list: true,\n        places: true,\n        manage: true,\n        setting: false\n      })) : props.view === 'cartable' ? (_openBlock(), _createBlock(ExteraMenu, {\n        key: 6,\n        cartable: false,\n        wallet: true,\n        list: true,\n        places: true,\n        manage: true,\n        setting: true\n      })) : props.view === 'show-cartable' ? (_openBlock(), _createBlock(ExteraMenu, {\n        key: 7,\n        cartable: false,\n        wallet: true,\n        list: true,\n        places: true,\n        manage: true,\n        setting: true\n      })) : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"نمایش مشخصی یافت نشد\"))])])) : _createCommentVNode(\"\", true)], 64);\n    };\n  }\n};","map":{"version":3,"names":["TopNav","ExteraMenu","PlacesList","AllCartables","NewsCards","ManageNews","ReportList","ShowCartable","ShowNews","UserSetting","ref","computed","onMounted","useMenuStore","BASE_URL","useUserStore","TouchPage","menu","backgroundImage","props","__props","contentStyle","value","backgroundSize","backgroundPosition","user","fetchUserInfo"],"sources":["D:/GitHub/chat/vue3/src/views/dashboard/MainDashboard.vue"],"sourcesContent":["<template>\r\n    <div class=\"nav-top\">\r\n        <TopNav />\r\n    </div>\r\n    <div class=\"content\" :style=\"contentStyle\">\r\n        <TouchPage v-if=\"props.view === 'dashboard'\"\r\n        :gestures=\"{\r\n            left: 'report-list',\r\n            right: 'user-setting'\r\n        }\">\r\n            <NewsCards/>\r\n        </TouchPage>\r\n        <TouchPage v-else-if=\"props.view === 'report-list'\"\r\n        :gestures=\"{\r\n            left: 'places',\r\n            right: 'dashboard'\r\n        }\">\r\n            <ReportList/>\r\n        </TouchPage>\r\n        <TouchPage v-else-if=\"props.view === 'places'\"\r\n        :gestures=\"{\r\n            left: 'manage-news',\r\n            right: 'report-list'\r\n        }\">\r\n            <PlacesList/>\r\n        </TouchPage>\r\n        <TouchPage v-else-if=\"props.view === 'manage-news'\"\r\n        :gestures=\"{\r\n            left: user.rule?'cartable':'user-setting',\r\n            right: 'places'\r\n        }\">\r\n            <ManageNews/>\r\n        </TouchPage>\r\n        <TouchPage v-else-if=\"props.view === 'user-setting'\"\r\n        :gestures=\"{\r\n            left: 'dashboard',\r\n            right: 'manage-news'\r\n        }\">\r\n            <UserSetting/>\r\n        </TouchPage>\r\n        <TouchPage v-else-if=\"props.view === 'cartable'\"\r\n        :gestures=\"{\r\n            left: 'manage-news',\r\n            right: 'user-setting'\r\n        }\">\r\n            <AllCartables/>\r\n        </TouchPage>\r\n        <TouchPage v-else-if=\"props.view === 'show-cartable'\"\r\n        :gestures=\"{\r\n            left: 'cartable',\r\n            right: 'user-setting'\r\n        }\">\r\n            <ShowCartable :id=\"props.id\"/>\r\n        </TouchPage>\r\n        <TouchPage v-else-if=\"props.view === 'show-news'\"\r\n        :gestures=\"{\r\n            left: 'manage-news',\r\n            right: user.rule?'cartable':'user-setting'\r\n        }\">\r\n            <ShowNews :id=\"props.id\"/>\r\n        </TouchPage>\r\n        <p v-else>نمایش مشخصی یافت نشد</p>\r\n    </div>\r\n    <div v-if=\"menu.isOpen\" class=\"menu-modal\" @click.self=\"menu.close\">\r\n        <div class=\"menu-content\">\r\n            <button class=\"close-btn\" @click=\"menu.close\">×</button>\r\n            <ExteraMenu v-if=\"props.view === 'dashboard'\" :cartable=\"true\" :wallet=\"true\" :list=\"true\" :places=\"true\" :manage=\"true\" :setting=\"true\"/>\r\n            <ExteraMenu v-else-if=\"props.view === 'places'\" :cartable=\"true\" :wallet=\"true\" :list=\"true\" :places=\"false\" :manage=\"true\" :setting=\"true\"/>\r\n            <ExteraMenu v-else-if=\"props.view === 'report-list'\" :cartable=\"true\" :wallet=\"true\" :list=\"false\" :places=\"true\" :manage=\"true\" :setting=\"true\"/>\r\n            <ExteraMenu v-else-if=\"props.view === 'manage-news'\" :cartable=\"true\" :wallet=\"true\" :list=\"true\" :places=\"true\" :manage=\"false\" :setting=\"true\"/>\r\n            <ExteraMenu v-else-if=\"props.view === 'show-news'\" :cartable=\"true\" :wallet=\"true\" :list=\"true\" :places=\"true\" :manage=\"false\" :setting=\"true\"/>\r\n            <ExteraMenu v-else-if=\"props.view === 'user-setting'\" :cartable=\"true\" :wallet=\"true\" :list=\"true\" :places=\"true\" :manage=\"true\" :setting=\"false\"/>\r\n            <ExteraMenu v-else-if=\"props.view === 'cartable'\" :cartable=\"false\" :wallet=\"true\" :list=\"true\" :places=\"true\" :manage=\"true\" :setting=\"true\"/>\r\n            <ExteraMenu v-else-if=\"props.view === 'show-cartable'\" :cartable=\"false\" :wallet=\"true\" :list=\"true\" :places=\"true\" :manage=\"true\" :setting=\"true\"/>\r\n            <p v-else>نمایش مشخصی یافت نشد</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script setup>\r\n    import TopNav from '@/components/dashboard/menus/TopNav.vue';\r\n    import ExteraMenu from '@/components/dashboard/menus/ExteraMenu.vue';\r\n    import PlacesList from '@/components/dashboard/pagesContent/PlacesList.vue';\r\n    import AllCartables from '@/components/dashboard/pagesContent/AllCartables.vue';\r\n    import NewsCards from '@/components/dashboard/pagesContent/NewsCards.vue';\r\n    import ManageNews from '@/components/dashboard/pagesContent/ManageNews.vue';\r\n    import ReportList from '@/components/dashboard/pagesContent/ReportList.vue';\r\n    import ShowCartable from '@/components/dashboard/pagesContent/ShowCartable.vue';\r\n    import ShowNews from '@/components/dashboard/pagesContent/ShowNews.vue';\r\n    import UserSetting from '@/components/dashboard/pagesContent/UserSetting.vue';\r\n    import { defineProps , ref , computed, onMounted } from 'vue'\r\n    import { useMenuStore } from '@/stores/menu'\r\n    import { BASE_URL } from '@/config';\r\n    import { useUserStore } from '@/stores/user';\r\n    import TouchPage from '@/components/tooles/touch/TouchPage.vue';\r\n    const menu = useMenuStore()\r\n    const backgroundImage=ref(BASE_URL+'/assets/images/content.jpg')\r\n    const props = defineProps({\r\n        view: String,\r\n        id: [String, Number]\r\n    })\r\n    const contentStyle = computed(() => ({\r\n        backgroundImage: `url(${backgroundImage.value})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    }))\r\n    const user = useUserStore()\r\n    onMounted(async () => {\r\n        await user.fetchUserInfo()\r\n    })\r\n</script> \r\n<style scoped>\r\n    .menu-modal {\r\n        position: fixed;\r\n        inset: 0;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        z-index: 999;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n    .menu-content {\r\n        width: 220px;\r\n        background: #aaa7c1;\r\n        color: #20a81d;\r\n        height: 100%;\r\n    }\r\n    .close-btn {\r\n        font-size: 20px;\r\n        border: none;\r\n        background: transparent;\r\n        cursor: pointer;\r\n        float: left;\r\n    }\r\n    .nav-top,.content{\r\n        position: fixed;\r\n        box-shadow: 0 0 6px grey;\r\n        left: 0;\r\n        right: 0;\r\n        box-sizing: border-box;\r\n        border: 1px solid #9b7ca9c4;\r\n    }\r\n    .nav-top{\r\n        height: 60px;\r\n        z-index: 9;\r\n        top: 0;\r\n    }\r\n    .content{\r\n        background-origin: border-box;\r\n        height: auto;\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        top: 60px;\r\n        bottom: 0;\r\n        padding: 10px;\r\n        height: auto;\r\n        overflow-y: auto;\r\n        overflow-x: hidden;\r\n    }\r\n</style>"],"mappings":";;;;;;;;;;;;;AA+EI,OAAOA,MAAM,MAAM,yCAAyC;AAC5D,OAAOC,UAAU,MAAM,6CAA6C;AACpE,OAAOC,UAAU,MAAM,oDAAoD;AAC3E,OAAOC,YAAY,MAAM,sDAAsD;AAC/E,OAAOC,SAAS,MAAM,mDAAmD;AACzE,OAAOC,UAAU,MAAM,oDAAoD;AAC3E,OAAOC,UAAU,MAAM,oDAAoD;AAC3E,OAAOC,YAAY,MAAM,sDAAsD;AAC/E,OAAOC,QAAQ,MAAM,kDAAkD;AACvE,OAAOC,WAAW,MAAM,qDAAqD;AAC7E,SAAuBC,GAAG,EAAGC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC7D,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,QAAQ,QAAQ,UAAU;AACnC,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,SAAS,MAAM,yCAAyC;;;;;;;;IAC/D,MAAMC,IAAI,GAAGJ,YAAY,CAAC,CAAC;IAC3B,MAAMK,eAAe,GAACR,GAAG,CAACI,QAAQ,GAAC,4BAA4B,CAAC;IAChE,MAAMK,KAAK,GAAGC,OAGZ;IACF,MAAMC,YAAY,GAAGV,QAAQ,CAAC,OAAO;MACjCO,eAAe,EAAE,OAAOA,eAAe,CAACI,KAAK,GAAG;MAChDC,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE;IACxB,CAAC,CAAC,CAAC;IACH,MAAMC,IAAI,GAAGV,YAAY,CAAC,CAAC;IAC3BH,SAAS,CAAC,YAAY;MAClB,MAAMa,IAAI,CAACC,aAAa,CAAC,CAAC;IAC9B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}