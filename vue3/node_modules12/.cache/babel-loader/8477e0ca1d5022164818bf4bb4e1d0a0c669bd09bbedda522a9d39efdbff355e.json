{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { defineStore } from 'pinia';\nimport { sendApi } from '@/utils/api';\nexport const useNewsStore = defineStore('news', {\n  state: () => ({\n    cards: [],\n    lastUpdate: null,\n    isLoaded: false,\n    hasRule: false\n  }),\n  actions: {\n    async fetchNews({\n      limit = 10,\n      offset = 0,\n      append = false\n    } = {}) {\n      const res = await sendApi({\n        action: 'get_news',\n        control: 'news',\n        data: {\n          limit,\n          offset\n        }\n      });\n      if (res.status === 'success') {\n        const newCards = res.data.map(item => ({\n          id: item.id,\n          description: item.description,\n          created_at: item.created_at,\n          location: {\n            city: item.city,\n            lat: item.address_lat,\n            lon: item.address_lon,\n            address: item.address\n          },\n          category: item.category_title ?? 'کلی',\n          user: {\n            id: item.user_account_id,\n            name: item.user_name,\n            family: item.user_family,\n            phone: item.user_phone,\n            image: item.user_image_url\n          },\n          medias: Array.isArray(item.media) ? item.media.map(media => ({\n            type: media.type,\n            url: media.url\n          })) : []\n        }));\n        this.cards = append ? [...this.cards, ...newCards] : newCards;\n        this.lastUpdate = new Date().toISOString();\n        this.isLoaded = true;\n        this.hasRule = res.rule ?? false;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sendApi","useNewsStore","state","cards","lastUpdate","isLoaded","hasRule","actions","fetchNews","limit","offset","append","res","action","control","data","status","newCards","map","item","id","description","created_at","location","city","lat","address_lat","lon","address_lon","address","category","category_title","user","user_account_id","name","user_name","family","user_family","phone","user_phone","image","user_image_url","medias","Array","isArray","media","type","url","Date","toISOString","rule"],"sources":["D:/GitHub/ci3-vue3/vue3/src/stores/news.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { sendApi } from '@/utils/api'\r\nexport const useNewsStore = defineStore('news', {\r\n  state: () => ({\r\n    cards: [],\r\n    lastUpdate: null,\r\n    isLoaded: false,\r\n    hasRule: false\r\n  }),\r\n  actions: {\r\nasync fetchNews({ limit = 10, offset = 0, append = false } = {}) {\r\n  const res = await sendApi({\r\n    action: 'get_news',\r\n    control: 'news',\r\n    data: { limit, offset }\r\n  })\r\n  if (res.status === 'success') {\r\n    const newCards = res.data.map(item => ({\r\n      id: item.id,\r\n      description: item.description,\r\n      created_at: item.created_at,\r\n      location: {\r\n        city: item.city,\r\n        lat: item.address_lat,\r\n        lon: item.address_lon,\r\n        address: item.address,\r\n      },\r\n      category: item.category_title ?? 'کلی',\r\n      user: {\r\n        id: item.user_account_id,\r\n        name: item.user_name,\r\n        family: item.user_family,\r\n        phone: item.user_phone,\r\n        image: item.user_image_url,\r\n      },\r\n      medias: Array.isArray(item.media) ? item.media.map(media => ({\r\n        type: media.type,\r\n        url: media.url\r\n      })) : []\r\n    }))\r\n\r\n    this.cards = append ? [...this.cards, ...newCards] : newCards\r\n    this.lastUpdate = new Date().toISOString()\r\n    this.isLoaded = true\r\n    this.hasRule = res.rule ?? false\r\n  }\r\n}\r\n\r\n  }\r\n})\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC,MAAM,EAAE;EAC9CG,KAAK,EAAEA,CAAA,MAAO;IACZC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,KAAK;IACfC,OAAO,EAAE;EACX,CAAC,CAAC;EACFC,OAAO,EAAE;IACX,MAAMC,SAASA,CAAC;MAAEC,KAAK,GAAG,EAAE;MAAEC,MAAM,GAAG,CAAC;MAAEC,MAAM,GAAG;IAAM,CAAC,GAAG,CAAC,CAAC,EAAE;MAC/D,MAAMC,GAAG,GAAG,MAAMZ,OAAO,CAAC;QACxBa,MAAM,EAAE,UAAU;QAClBC,OAAO,EAAE,MAAM;QACfC,IAAI,EAAE;UAAEN,KAAK;UAAEC;QAAO;MACxB,CAAC,CAAC;MACF,IAAIE,GAAG,CAACI,MAAM,KAAK,SAAS,EAAE;QAC5B,MAAMC,QAAQ,GAAGL,GAAG,CAACG,IAAI,CAACG,GAAG,CAACC,IAAI,KAAK;UACrCC,EAAE,EAAED,IAAI,CAACC,EAAE;UACXC,WAAW,EAAEF,IAAI,CAACE,WAAW;UAC7BC,UAAU,EAAEH,IAAI,CAACG,UAAU;UAC3BC,QAAQ,EAAE;YACRC,IAAI,EAAEL,IAAI,CAACK,IAAI;YACfC,GAAG,EAAEN,IAAI,CAACO,WAAW;YACrBC,GAAG,EAAER,IAAI,CAACS,WAAW;YACrBC,OAAO,EAAEV,IAAI,CAACU;UAChB,CAAC;UACDC,QAAQ,EAAEX,IAAI,CAACY,cAAc,IAAI,KAAK;UACtCC,IAAI,EAAE;YACJZ,EAAE,EAAED,IAAI,CAACc,eAAe;YACxBC,IAAI,EAAEf,IAAI,CAACgB,SAAS;YACpBC,MAAM,EAAEjB,IAAI,CAACkB,WAAW;YACxBC,KAAK,EAAEnB,IAAI,CAACoB,UAAU;YACtBC,KAAK,EAAErB,IAAI,CAACsB;UACd,CAAC;UACDC,MAAM,EAAEC,KAAK,CAACC,OAAO,CAACzB,IAAI,CAAC0B,KAAK,CAAC,GAAG1B,IAAI,CAAC0B,KAAK,CAAC3B,GAAG,CAAC2B,KAAK,KAAK;YAC3DC,IAAI,EAAED,KAAK,CAACC,IAAI;YAChBC,GAAG,EAAEF,KAAK,CAACE;UACb,CAAC,CAAC,CAAC,GAAG;QACR,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC5C,KAAK,GAAGQ,MAAM,GAAG,CAAC,GAAG,IAAI,CAACR,KAAK,EAAE,GAAGc,QAAQ,CAAC,GAAGA,QAAQ;QAC7D,IAAI,CAACb,UAAU,GAAG,IAAI4C,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC5C,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACC,OAAO,GAAGM,GAAG,CAACsC,IAAI,IAAI,KAAK;MAClC;IACF;EAEE;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}