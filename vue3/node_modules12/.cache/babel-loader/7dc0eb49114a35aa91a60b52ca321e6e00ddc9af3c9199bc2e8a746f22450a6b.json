{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport UploadView from \"@/views/home/UploadView.vue\";\nimport LoginView from '@/views/home/LoginView.vue';\nimport DashboardView from '@/views/dashboard/DashboardView.vue';\nimport RegisterView from '@/views/home/RegisterView.vue';\nimport { sendApi } from '@/utils/api';\nconst routes = [\n// {\n//   path: '/',\n//   name: 'home',\n//   component: HomeView\n// },\n// {\n//   path: '/about',\n//   name: 'about',\n//   component: AboutView\n// },\n{\n  path: '/upload',\n  name: 'upload',\n  component: UploadView\n}, {\n  path: '/',\n  name: 'login',\n  component: LoginView,\n  meta: {\n    onlyAuth: true\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: RegisterView,\n  meta: {\n    checkHasMobileId: true,\n    onlyAuth: true\n  }\n}, {\n  path: '/dashboard',\n  name: 'dashboard',\n  component: DashboardView,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  try {\n    const meta = to.meta;\n    if (meta.requiresAuth) {\n      const res = await sendApi(JSON.stringify({\n        action: 'check_auth'\n      }));\n      if (res.status !== 'success') return next('/login');\n    }\n    if (meta.checkHasMobileId) {\n      const res = await sendApi(JSON.stringify({\n        action: 'check_mobile_info'\n      }));\n      if (res.status !== 'success') return next('/login');\n    }\n    if (meta.onlyAuth) {\n      const res = await sendApi(JSON.stringify({\n        action: 'check_auth'\n      }));\n      if (res.status === 'success') return next('/dashboard');\n    }\n    next();\n  } catch (e) {\n    console.error('Router Guard Error:', e);\n    next('/login');\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","UploadView","LoginView","DashboardView","RegisterView","sendApi","routes","path","name","component","meta","onlyAuth","checkHasMobileId","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","res","JSON","stringify","action","status","e","console","error"],"sources":["D:/GitHub/ci3-vue3/vue3/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport UploadView from \"@/views/home/UploadView.vue\";\r\nimport LoginView from '@/views/home/LoginView.vue';\r\nimport DashboardView from '@/views/dashboard/DashboardView.vue';\r\nimport RegisterView from '@/views/home/RegisterView.vue';\r\nimport { sendApi } from '@/utils/api';\r\n\r\nconst routes = [\r\n  // {\r\n  //   path: '/',\r\n  //   name: 'home',\r\n  //   component: HomeView\r\n  // },\r\n  // {\r\n  //   path: '/about',\r\n  //   name: 'about',\r\n  //   component: AboutView\r\n  // },\r\n  {\r\n    path: '/upload',\r\n    name: 'upload',\r\n    component: UploadView\r\n  },\r\n  {\r\n    path: '/',\r\n    name: 'login',\r\n    component: LoginView,\r\n    meta:{onlyAuth:true}\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'register',\r\n    component: RegisterView,\r\n    meta:{checkHasMobileId:true,onlyAuth:true}\r\n  },\r\n  {\r\n    path: '/dashboard',\r\n    name: 'dashboard',\r\n    component: DashboardView,\r\n    meta: { requiresAuth: true }\r\n  },\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\nrouter.beforeEach(async (to, from, next) => {\r\n  try {\r\n    const meta = to.meta;\r\n    if (meta.requiresAuth) {\r\n      const res = await sendApi(JSON.stringify({ action: 'check_auth' }));\r\n      if (res.status !== 'success') return next('/login');\r\n    }\r\n    if (meta.checkHasMobileId) {\r\n      const res = await sendApi(JSON.stringify({ action: 'check_mobile_info' }));\r\n      if (res.status !== 'success') return next('/login');\r\n    }\r\n    if (meta.onlyAuth) {\r\n      const res = await sendApi(JSON.stringify({ action: 'check_auth' }));\r\n      if (res.status === 'success') return next('/dashboard');\r\n    }\r\n    next();\r\n  } catch (e) {\r\n    console.error('Router Guard Error:', e);\r\n    next('/login');\r\n  }\r\n});\r\n\r\n\r\nexport default router\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,OAAOC,YAAY,MAAM,+BAA+B;AACxD,SAASC,OAAO,QAAQ,aAAa;AAErC,MAAMC,MAAM,GAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP,SAAS;EACpBQ,IAAI,EAAC;IAACC,QAAQ,EAAC;EAAI;AACrB,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL,YAAY;EACvBM,IAAI,EAAC;IAACE,gBAAgB,EAAC,IAAI;IAACD,QAAQ,EAAC;EAAI;AAC3C,CAAC,EACD;EACEJ,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEN,aAAa;EACxBO,IAAI,EAAE;IAAEG,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMC,MAAM,GAAGf,YAAY,CAAC;EAC1BgB,OAAO,EAAEf,gBAAgB,CAACgB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CZ;AACF,CAAC,CAAC;AAEFQ,MAAM,CAACK,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,IAAI;IACF,MAAMZ,IAAI,GAAGU,EAAE,CAACV,IAAI;IACpB,IAAIA,IAAI,CAACG,YAAY,EAAE;MACrB,MAAMU,GAAG,GAAG,MAAMlB,OAAO,CAACmB,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAE;MAAa,CAAC,CAAC,CAAC;MACnE,IAAIH,GAAG,CAACI,MAAM,KAAK,SAAS,EAAE,OAAOL,IAAI,CAAC,QAAQ,CAAC;IACrD;IACA,IAAIZ,IAAI,CAACE,gBAAgB,EAAE;MACzB,MAAMW,GAAG,GAAG,MAAMlB,OAAO,CAACmB,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAE;MAAoB,CAAC,CAAC,CAAC;MAC1E,IAAIH,GAAG,CAACI,MAAM,KAAK,SAAS,EAAE,OAAOL,IAAI,CAAC,QAAQ,CAAC;IACrD;IACA,IAAIZ,IAAI,CAACC,QAAQ,EAAE;MACjB,MAAMY,GAAG,GAAG,MAAMlB,OAAO,CAACmB,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAE;MAAa,CAAC,CAAC,CAAC;MACnE,IAAIH,GAAG,CAACI,MAAM,KAAK,SAAS,EAAE,OAAOL,IAAI,CAAC,YAAY,CAAC;IACzD;IACAA,IAAI,CAAC,CAAC;EACR,CAAC,CAAC,OAAOM,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,CAAC,CAAC;IACvCN,IAAI,CAAC,QAAQ,CAAC;EAChB;AACF,CAAC,CAAC;AAGF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}