{"ast":null,"code":"import { createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"transaction-list\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nimport { onMounted, onUnmounted, ref, computed } from 'vue';\nimport { useWalletStore } from '@/stores/wallet';\nconst perPage = 5;\nexport default {\n  __name: 'TransactionsSection',\n  setup(__props) {\n    const store = useWalletStore();\n    const currentPage = ref(1);\n    let pollingInterval = null;\n    const paginatedTransactions = computed(() => store.transactions.slice(0, currentPage.value * perPage));\n    const hasMore = computed(() => store.transactions.length > paginatedTransactions.value.length);\n    const loadMore = async () => {\n      currentPage.value++;\n      await store.fetchTransactions({\n        limit: currentPage.value * perPage\n      });\n    };\n    const formatAmount = num => {\n      return Number(num).toLocaleString('fa-IR') + ' تومان';\n    };\n    const formatDate = datetime => {\n      return new Date(datetime).toLocaleString('fa-IR');\n    };\n    const getStatus = status => {\n      switch (status) {\n        case 'do':\n          return 'انجام شده';\n        case 'dont':\n          return 'در انتظار';\n        default:\n          return 'نامشخص';\n      }\n    };\n    const startPolling = () => {\n      if (pollingInterval) return;\n      store.fetchTransactions({\n        limit: currentPage.value * perPage\n      });\n      pollingInterval = setInterval(() => {\n        store.fetchTransactions({\n          limit: currentPage.value * perPage\n        });\n      }, 10000);\n    };\n    const stopPolling = () => {\n      clearInterval(pollingInterval);\n      pollingInterval = null;\n    };\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        startPolling();\n      } else {\n        stopPolling();\n      }\n    };\n    onMounted(() => {\n      document.addEventListener('visibilitychange', handleVisibilityChange);\n      if (document.visibilityState === 'visible') {\n        startPolling();\n      }\n    });\n    onUnmounted(() => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      stopPolling();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"لیست تراکنش‌ها\", -1)), _unref(store).transactions.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"تراکنشی وجود ندارد.\")) : _createCommentVNode(\"\", true), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(paginatedTransactions.value, tx => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: tx.id,\n          class: \"transaction-item\"\n        }, [_createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"مبلغ:\", -1)), _createTextVNode(\" \" + _toDisplayString(formatAmount(tx.amount)), 1)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"پرداخت‌کننده:\", -1)), _createTextVNode(\" \" + _toDisplayString(tx.pay_user.name) + \" \" + _toDisplayString(tx.pay_user.family), 1)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"گیرنده:\", -1)), _createTextVNode(\" \" + _toDisplayString(tx.give_user.name) + \" \" + _toDisplayString(tx.give_user.family), 1)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"محصول:\", -1)), _createTextVNode(\" \" + _toDisplayString(tx.order?.product?.title || '---'), 1)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"گزارش:\", -1)), _createTextVNode(\" \" + _toDisplayString(tx.order?.report?.id ? 'دارد' : '---'), 1)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"شماره کارت:\", -1)), _createTextVNode(\" \" + _toDisplayString(tx.give_user.cart?.shomare_cart || '---'), 1)]), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"وضعیت:\", -1)), _createTextVNode(\" \" + _toDisplayString(getStatus(tx.status)), 1)]), _createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"تاریخ:\", -1)), _createTextVNode(\" \" + _toDisplayString(formatDate(tx.created_at)), 1)])]);\n      }), 128))]), hasMore.value ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        onClick: loadMore\n      }, \"نمایش بیشتر\")) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["onMounted","onUnmounted","ref","computed","useWalletStore","perPage","store","currentPage","pollingInterval","paginatedTransactions","transactions","slice","value","hasMore","length","loadMore","fetchTransactions","limit","formatAmount","num","Number","toLocaleString","formatDate","datetime","Date","getStatus","status","startPolling","setInterval","stopPolling","clearInterval","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener"],"sources":["D:/GitHub/ci3-vue3/vue3/src/components/dashboard/pagesContent/wallet/TransactionsSection.vue"],"sourcesContent":["<template>\r\n  <div class=\"transaction-list\">\r\n    <h3>لیست تراکنش‌ها</h3>\r\n    <div v-if=\"store.transactions.length === 0\">تراکنشی وجود ندارد.</div>\r\n    <ul>\r\n      <li v-for=\"tx in paginatedTransactions\" :key=\"tx.id\" class=\"transaction-item\">\r\n        <p><strong>مبلغ:</strong> {{ formatAmount(tx.amount) }}</p>\r\n        <p><strong>پرداخت‌کننده:</strong> {{ tx.pay_user.name }} {{ tx.pay_user.family }}</p>\r\n        <p><strong>گیرنده:</strong> {{ tx.give_user.name }} {{ tx.give_user.family }}</p>\r\n        <p><strong>محصول:</strong> {{ tx.order?.product?.title || '---' }}</p>\r\n        <p><strong>گزارش:</strong> {{ tx.order?.report?.id ? 'دارد' : '---' }}</p>\r\n        <p><strong>شماره کارت:</strong> {{ tx.give_user.cart?.shomare_cart || '---' }}</p>\r\n        <p><strong>وضعیت:</strong> {{ getStatus(tx.status) }}</p>\r\n        <p><strong>تاریخ:</strong> {{ formatDate(tx.created_at) }}</p>\r\n      </li>\r\n    </ul>\r\n    <button v-if=\"hasMore\" @click=\"loadMore\">نمایش بیشتر</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, onUnmounted, ref, computed } from 'vue'\r\nimport { useWalletStore } from '@/stores/wallet'\r\n\r\nconst store = useWalletStore()\r\nconst currentPage = ref(1)\r\nconst perPage = 5\r\nlet pollingInterval = null\r\n\r\nconst paginatedTransactions = computed(() =>\r\n  store.transactions.slice(0, currentPage.value * perPage)\r\n)\r\n\r\nconst hasMore = computed(() =>\r\n  store.transactions.length > paginatedTransactions.value.length\r\n)\r\n\r\nconst loadMore = async () => {\r\n  currentPage.value++\r\n  await store.fetchTransactions({ limit: currentPage.value * perPage })\r\n}\r\n\r\nconst formatAmount = (num) => {\r\n  return Number(num).toLocaleString('fa-IR') + ' تومان'\r\n}\r\n\r\nconst formatDate = (datetime) => {\r\n  return new Date(datetime).toLocaleString('fa-IR')\r\n}\r\n\r\nconst getStatus = (status) => {\r\n  switch (status) {\r\n    case 'do': return 'انجام شده'\r\n    case 'dont': return 'در انتظار'\r\n    default: return 'نامشخص'\r\n  }\r\n}\r\n\r\nconst startPolling = () => {\r\n  if (pollingInterval) return\r\n  store.fetchTransactions({ limit: currentPage.value * perPage })\r\n  pollingInterval = setInterval(() => {\r\n    store.fetchTransactions({ limit: currentPage.value * perPage })\r\n  }, 10000)\r\n}\r\n\r\nconst stopPolling = () => {\r\n  clearInterval(pollingInterval)\r\n  pollingInterval = null\r\n}\r\n\r\nconst handleVisibilityChange = () => {\r\n  if (document.visibilityState === 'visible') {\r\n    startPolling()\r\n  } else {\r\n    stopPolling()\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  document.addEventListener('visibilitychange', handleVisibilityChange)\r\n  if (document.visibilityState === 'visible') {\r\n    startPolling()\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n  stopPolling()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.transaction-list {\r\n  padding: 1rem;\r\n}\r\n.transaction-item {\r\n  border: 1px solid #ddd;\r\n  padding: 0.75rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;AAqBA,SAASA,SAAS,EAAEC,WAAW,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AAC3D,SAASC,cAAc,QAAQ,iBAAiB;AAIhD,MAAMC,OAAO,GAAG,CAAC;;;;IAFjB,MAAMC,KAAK,GAAGF,cAAc,CAAC,CAAC;IAC9B,MAAMG,WAAW,GAAGL,GAAG,CAAC,CAAC,CAAC;IAE1B,IAAIM,eAAe,GAAG,IAAI;IAE1B,MAAMC,qBAAqB,GAAGN,QAAQ,CAAC,MACrCG,KAAK,CAACI,YAAY,CAACC,KAAK,CAAC,CAAC,EAAEJ,WAAW,CAACK,KAAK,GAAGP,OAAO,CACzD,CAAC;IAED,MAAMQ,OAAO,GAAGV,QAAQ,CAAC,MACvBG,KAAK,CAACI,YAAY,CAACI,MAAM,GAAGL,qBAAqB,CAACG,KAAK,CAACE,MAC1D,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3BR,WAAW,CAACK,KAAK,EAAE;MACnB,MAAMN,KAAK,CAACU,iBAAiB,CAAC;QAAEC,KAAK,EAAEV,WAAW,CAACK,KAAK,GAAGP;MAAQ,CAAC,CAAC;IACvE,CAAC;IAED,MAAMa,YAAY,GAAIC,GAAG,IAAK;MAC5B,OAAOC,MAAM,CAACD,GAAG,CAAC,CAACE,cAAc,CAAC,OAAO,CAAC,GAAG,QAAQ;IACvD,CAAC;IAED,MAAMC,UAAU,GAAIC,QAAQ,IAAK;MAC/B,OAAO,IAAIC,IAAI,CAACD,QAAQ,CAAC,CAACF,cAAc,CAAC,OAAO,CAAC;IACnD,CAAC;IAED,MAAMI,SAAS,GAAIC,MAAM,IAAK;MAC5B,QAAQA,MAAM;QACZ,KAAK,IAAI;UAAE,OAAO,WAAW;QAC7B,KAAK,MAAM;UAAE,OAAO,WAAW;QAC/B;UAAS,OAAO,QAAQ;MAC1B;IACF,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAInB,eAAe,EAAE;MACrBF,KAAK,CAACU,iBAAiB,CAAC;QAAEC,KAAK,EAAEV,WAAW,CAACK,KAAK,GAAGP;MAAQ,CAAC,CAAC;MAC/DG,eAAe,GAAGoB,WAAW,CAAC,MAAM;QAClCtB,KAAK,CAACU,iBAAiB,CAAC;UAAEC,KAAK,EAAEV,WAAW,CAACK,KAAK,GAAGP;QAAQ,CAAC,CAAC;MACjE,CAAC,EAAE,KAAK,CAAC;IACX,CAAC;IAED,MAAMwB,WAAW,GAAGA,CAAA,KAAM;MACxBC,aAAa,CAACtB,eAAe,CAAC;MAC9BA,eAAe,GAAG,IAAI;IACxB,CAAC;IAED,MAAMuB,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAIC,QAAQ,CAACC,eAAe,KAAK,SAAS,EAAE;QAC1CN,YAAY,CAAC,CAAC;MAChB,CAAC,MAAM;QACLE,WAAW,CAAC,CAAC;MACf;IACF,CAAC;IAED7B,SAAS,CAAC,MAAM;MACdgC,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,EAAEH,sBAAsB,CAAC;MACrE,IAAIC,QAAQ,CAACC,eAAe,KAAK,SAAS,EAAE;QAC1CN,YAAY,CAAC,CAAC;MAChB;IACF,CAAC,CAAC;IAEF1B,WAAW,CAAC,MAAM;MAChB+B,QAAQ,CAACG,mBAAmB,CAAC,kBAAkB,EAAEJ,sBAAsB,CAAC;MACxEF,WAAW,CAAC,CAAC;IACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}