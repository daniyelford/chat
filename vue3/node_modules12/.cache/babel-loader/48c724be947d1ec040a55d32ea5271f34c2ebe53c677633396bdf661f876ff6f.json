{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// src/stores/category.js\nimport { defineStore } from 'pinia';\nimport { ref } from 'vue';\nimport { sendApi } from '@/utils/api';\nexport const useCategoryStore = defineStore('category', () => {\n  const allCategories = ref([]);\n  const categories = ref([]);\n  const categoryLoading = ref(false);\n  const categoryListLoading = ref(false);\n  const categoryOffset = ref(0);\n  const hasMoreCategories = ref(true);\n  const fetchCategoriesPaginated = async (offset = 0, limit = 16) => {\n    categoryListLoading.value = true;\n    try {\n      const res = await sendApi({\n        control: 'category',\n        action: 'get_categories',\n        data: {\n          offset,\n          limit\n        }\n      });\n      if (res.status === 'success' && Array.isArray(res.data)) {\n        if (offset === 0) {\n          allCategories.value = res.data;\n        } else {\n          allCategories.value.push(...res.data);\n        }\n        hasMoreCategories.value = res.has_more;\n        categoryOffset.value += res.data.length;\n      }\n    } catch (error) {\n      console.error('fetchCategoriesPaginated error:', error);\n    } finally {\n      categoryListLoading.value = false;\n    }\n  };\n  const fetchCategories = async query => {\n    categoryLoading.value = true;\n    try {\n      const res = await sendApi({\n        control: 'category',\n        action: 'get_categories',\n        data: {\n          search: query\n        }\n      });\n      if (res.status === 'success' && Array.isArray(res.data)) {\n        categories.value = res.data;\n      } else {\n        console.error('خطا در دریافت داده‌ها:', res.message);\n      }\n    } catch (e) {\n      console.error('خطا در ارتباط:', e);\n    } finally {\n      categoryLoading.value = false;\n    }\n  };\n  const submitCategory = async (categoryData, edit = null) => {\n    try {\n      const res = await sendApi({\n        control: 'category',\n        action: 'add_category',\n        data: categoryData\n      });\n      if (res.status === 'success' && res?.id) {\n        if (!edit) {\n          allCategories.value.unshift(res.data);\n        } else {\n          const index = allCategories.value.findIndex(c => Number(c.id) === Number(edit));\n          if (index !== -1) {\n            allCategories.value[index] = res.data;\n          } else {\n            allCategories.value.unshift(res.data);\n          }\n        }\n      }\n      return res;\n    } catch (error) {\n      console.error('submitCategory error:', error);\n      return {\n        status: 'error',\n        message: 'خطا در ارسال درخواست'\n      };\n    }\n  };\n  const resetCategories = () => {\n    allCategories.value = [];\n    categoryOffset.value = 0;\n    hasMoreCategories.value = true;\n  };\n  return {\n    allCategories,\n    categories,\n    categoryLoading,\n    categoryListLoading,\n    categoryOffset,\n    hasMoreCategories,\n    fetchCategoriesPaginated,\n    fetchCategories,\n    submitCategory,\n    resetCategories\n  };\n});","map":{"version":3,"names":["defineStore","ref","sendApi","useCategoryStore","allCategories","categories","categoryLoading","categoryListLoading","categoryOffset","hasMoreCategories","fetchCategoriesPaginated","offset","limit","value","res","control","action","data","status","Array","isArray","push","has_more","length","error","console","fetchCategories","query","search","message","e","submitCategory","categoryData","edit","id","unshift","index","findIndex","c","Number","resetCategories"],"sources":["D:/GitHub/chat/vue3/src/stores/category.js"],"sourcesContent":["// src/stores/category.js\r\nimport { defineStore } from 'pinia'\r\nimport { ref } from 'vue'\r\nimport { sendApi } from '@/utils/api'\r\nexport const useCategoryStore = defineStore('category', () => {\r\n  const allCategories = ref([])\r\n  const categories = ref([])\r\n  const categoryLoading = ref(false)\r\n  const categoryListLoading = ref(false)\r\n  const categoryOffset = ref(0)\r\n  const hasMoreCategories = ref(true)\r\n  const fetchCategoriesPaginated = async (offset = 0, limit = 16) => {\r\n    categoryListLoading.value = true\r\n    try {\r\n      const res = await sendApi({\r\n        control: 'category',\r\n        action: 'get_categories',\r\n        data: { offset, limit }\r\n      })\r\n      if (res.status === 'success' && Array.isArray(res.data)) {\r\n        if (offset === 0) {\r\n          allCategories.value = res.data\r\n        } else {\r\n          allCategories.value.push(...res.data)\r\n        }\r\n        hasMoreCategories.value = res.has_more\r\n        categoryOffset.value += res.data.length\r\n      }\r\n    } catch (error) {\r\n      console.error('fetchCategoriesPaginated error:', error)\r\n    } finally {\r\n      categoryListLoading.value = false\r\n    }\r\n  }\r\n  const fetchCategories = async (query) => {\r\n    categoryLoading.value = true\r\n    try {\r\n      const res = await sendApi({\r\n        control: 'category',\r\n        action: 'get_categories',\r\n        data: { search: query }\r\n      })\r\n      if (res.status === 'success' && Array.isArray(res.data)) {\r\n        categories.value = res.data\r\n      } else {\r\n        console.error('خطا در دریافت داده‌ها:', res.message)\r\n      }\r\n    } catch (e) {\r\n      console.error('خطا در ارتباط:', e)\r\n    } finally {\r\n      categoryLoading.value = false\r\n    }\r\n  }\r\n  const submitCategory = async (categoryData, edit = null) => {\r\n    try {\r\n      const res = await sendApi({\r\n        control: 'category',\r\n        action: 'add_category',\r\n        data: categoryData\r\n      })\r\n      if (res.status === 'success' && res?.id) {\r\n        if (!edit) {\r\n          allCategories.value.unshift(res.data)\r\n        } else {\r\n          const index = allCategories.value.findIndex(c => Number(c.id) === Number(edit))\r\n          if (index !== -1) {\r\n            allCategories.value[index] = res.data\r\n          } else {\r\n            allCategories.value.unshift(res.data)\r\n          }\r\n        }\r\n      }\r\n      return res\r\n    } catch (error) {\r\n      console.error('submitCategory error:', error)\r\n      return { status: 'error', message: 'خطا در ارسال درخواست' }\r\n    }\r\n  }\r\n  const resetCategories = () => {\r\n    allCategories.value = []\r\n    categoryOffset.value = 0\r\n    hasMoreCategories.value = true\r\n  }\r\n  return {\r\n    allCategories,\r\n    categories,\r\n    categoryLoading,\r\n    categoryListLoading,\r\n    categoryOffset,\r\n    hasMoreCategories,\r\n    fetchCategoriesPaginated,\r\n    fetchCategories,\r\n    submitCategory,\r\n    resetCategories\r\n  }\r\n})\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}